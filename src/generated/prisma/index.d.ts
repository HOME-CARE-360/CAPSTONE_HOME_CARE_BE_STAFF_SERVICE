
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Booking
 * 
 */
export type Booking = $Result.DefaultSelection<Prisma.$BookingPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model CategoryTranslation
 * 
 */
export type CategoryTranslation = $Result.DefaultSelection<Prisma.$CategoryTranslationPayload>
/**
 * Model ChatMessage
 * 
 */
export type ChatMessage = $Result.DefaultSelection<Prisma.$ChatMessagePayload>
/**
 * Model CustomerProfile
 * 
 */
export type CustomerProfile = $Result.DefaultSelection<Prisma.$CustomerProfilePayload>
/**
 * Model Device
 * 
 */
export type Device = $Result.DefaultSelection<Prisma.$DevicePayload>
/**
 * Model Language
 * 
 */
export type Language = $Result.DefaultSelection<Prisma.$LanguagePayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model PackageRecommendation
 * 
 */
export type PackageRecommendation = $Result.DefaultSelection<Prisma.$PackageRecommendationPayload>
/**
 * Model PaymentTransaction
 * 
 */
export type PaymentTransaction = $Result.DefaultSelection<Prisma.$PaymentTransactionPayload>
/**
 * Model Permission
 * 
 */
export type Permission = $Result.DefaultSelection<Prisma.$PermissionPayload>
/**
 * Model RecurringBooking
 * 
 */
export type RecurringBooking = $Result.DefaultSelection<Prisma.$RecurringBookingPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model RewardPoint
 * 
 */
export type RewardPoint = $Result.DefaultSelection<Prisma.$RewardPointPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Service
 * 
 */
export type Service = $Result.DefaultSelection<Prisma.$ServicePayload>
/**
 * Model ServiceProvider
 * 
 */
export type ServiceProvider = $Result.DefaultSelection<Prisma.$ServiceProviderPayload>
/**
 * Model ServiceProviderTranslation
 * 
 */
export type ServiceProviderTranslation = $Result.DefaultSelection<Prisma.$ServiceProviderTranslationPayload>
/**
 * Model ServiceTranslation
 * 
 */
export type ServiceTranslation = $Result.DefaultSelection<Prisma.$ServiceTranslationPayload>
/**
 * Model Staff
 * 
 */
export type Staff = $Result.DefaultSelection<Prisma.$StaffPayload>
/**
 * Model StaffCategory
 * 
 */
export type StaffCategory = $Result.DefaultSelection<Prisma.$StaffCategoryPayload>
/**
 * Model Transaction
 * 
 */
export type Transaction = $Result.DefaultSelection<Prisma.$TransactionPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model VerificationCode
 * 
 */
export type VerificationCode = $Result.DefaultSelection<Prisma.$VerificationCodePayload>
/**
 * Model WorkLog
 * 
 */
export type WorkLog = $Result.DefaultSelection<Prisma.$WorkLogPayload>
/**
 * Model InspectionReport
 * 
 */
export type InspectionReport = $Result.DefaultSelection<Prisma.$InspectionReportPayload>
/**
 * Model ProposedService
 * 
 */
export type ProposedService = $Result.DefaultSelection<Prisma.$ProposedServicePayload>
/**
 * Model ServiceItem
 * 
 */
export type ServiceItem = $Result.DefaultSelection<Prisma.$ServiceItemPayload>
/**
 * Model ServiceRequest
 * 
 */
export type ServiceRequest = $Result.DefaultSelection<Prisma.$ServiceRequestPayload>
/**
 * Model Service_ServiceItems
 * 
 */
export type Service_ServiceItems = $Result.DefaultSelection<Prisma.$Service_ServiceItemsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const BookingStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type BookingStatus = (typeof BookingStatus)[keyof typeof BookingStatus]


export const Gender: {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER'
};

export type Gender = (typeof Gender)[keyof typeof Gender]


export const HTTPMethod: {
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  DELETE: 'DELETE',
  PATCH: 'PATCH',
  OPTIONS: 'OPTIONS',
  HEAD: 'HEAD'
};

export type HTTPMethod = (typeof HTTPMethod)[keyof typeof HTTPMethod]


export const PaymentMethod: {
  CASH: 'CASH',
  CREDIT_CARD: 'CREDIT_CARD',
  BANK_TRANSFER: 'BANK_TRANSFER',
  MOMO: 'MOMO',
  ZALOPAY: 'ZALOPAY'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PAID: 'PAID',
  FAILED: 'FAILED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const Session: {
  MORNING: 'MORNING',
  AFTERNOON: 'AFTERNOON'
};

export type Session = (typeof Session)[keyof typeof Session]


export const UserStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  BLOCKED: 'BLOCKED'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const VerificationCodeType: {
  REGISTER: 'REGISTER',
  FORGOT_PASSWORD: 'FORGOT_PASSWORD',
  LOGIN: 'LOGIN',
  DISABLE_2FA: 'DISABLE_2FA'
};

export type VerificationCodeType = (typeof VerificationCodeType)[keyof typeof VerificationCodeType]


export const WeekDay: {
  MONDAY: 'MONDAY',
  TUESDAY: 'TUESDAY',
  WEDNESDAY: 'WEDNESDAY',
  THURSDAY: 'THURSDAY',
  FRIDAY: 'FRIDAY',
  SATURDAY: 'SATURDAY',
  SUNDAY: 'SUNDAY'
};

export type WeekDay = (typeof WeekDay)[keyof typeof WeekDay]


export const CompanyType: {
  SOLE_PROPRIETORSHIP: 'SOLE_PROPRIETORSHIP',
  LIMITED_LIABILITY: 'LIMITED_LIABILITY',
  JOINT_STOCK: 'JOINT_STOCK',
  PARTNERSHIP: 'PARTNERSHIP',
  OTHER: 'OTHER'
};

export type CompanyType = (typeof CompanyType)[keyof typeof CompanyType]


export const VerificationStatus: {
  PENDING: 'PENDING',
  VERIFIED: 'VERIFIED',
  REJECTED: 'REJECTED'
};

export type VerificationStatus = (typeof VerificationStatus)[keyof typeof VerificationStatus]


export const InspectionStatus: {
  NOT_YET: 'NOT_YET',
  IN_PROGRESS: 'IN_PROGRESS',
  DONE: 'DONE'
};

export type InspectionStatus = (typeof InspectionStatus)[keyof typeof InspectionStatus]


export const RequestStatus: {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  ESTIMATED: 'ESTIMATED'
};

export type RequestStatus = (typeof RequestStatus)[keyof typeof RequestStatus]


export const Unit: {
  PER_HOUR: 'PER_HOUR',
  PER_ITEM: 'PER_ITEM',
  PER_SQUARE_METER: 'PER_SQUARE_METER',
  PER_JOB: 'PER_JOB'
};

export type Unit = (typeof Unit)[keyof typeof Unit]

}

export type BookingStatus = $Enums.BookingStatus

export const BookingStatus: typeof $Enums.BookingStatus

export type Gender = $Enums.Gender

export const Gender: typeof $Enums.Gender

export type HTTPMethod = $Enums.HTTPMethod

export const HTTPMethod: typeof $Enums.HTTPMethod

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type Session = $Enums.Session

export const Session: typeof $Enums.Session

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type VerificationCodeType = $Enums.VerificationCodeType

export const VerificationCodeType: typeof $Enums.VerificationCodeType

export type WeekDay = $Enums.WeekDay

export const WeekDay: typeof $Enums.WeekDay

export type CompanyType = $Enums.CompanyType

export const CompanyType: typeof $Enums.CompanyType

export type VerificationStatus = $Enums.VerificationStatus

export const VerificationStatus: typeof $Enums.VerificationStatus

export type InspectionStatus = $Enums.InspectionStatus

export const InspectionStatus: typeof $Enums.InspectionStatus

export type RequestStatus = $Enums.RequestStatus

export const RequestStatus: typeof $Enums.RequestStatus

export type Unit = $Enums.Unit

export const Unit: typeof $Enums.Unit

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Bookings
 * const bookings = await prisma.booking.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Bookings
   * const bookings = await prisma.booking.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.booking`: Exposes CRUD operations for the **Booking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bookings
    * const bookings = await prisma.booking.findMany()
    * ```
    */
  get booking(): Prisma.BookingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoryTranslation`: Exposes CRUD operations for the **CategoryTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoryTranslations
    * const categoryTranslations = await prisma.categoryTranslation.findMany()
    * ```
    */
  get categoryTranslation(): Prisma.CategoryTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chatMessage`: Exposes CRUD operations for the **ChatMessage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChatMessages
    * const chatMessages = await prisma.chatMessage.findMany()
    * ```
    */
  get chatMessage(): Prisma.ChatMessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customerProfile`: Exposes CRUD operations for the **CustomerProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomerProfiles
    * const customerProfiles = await prisma.customerProfile.findMany()
    * ```
    */
  get customerProfile(): Prisma.CustomerProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.device`: Exposes CRUD operations for the **Device** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Devices
    * const devices = await prisma.device.findMany()
    * ```
    */
  get device(): Prisma.DeviceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.language`: Exposes CRUD operations for the **Language** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Languages
    * const languages = await prisma.language.findMany()
    * ```
    */
  get language(): Prisma.LanguageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.packageRecommendation`: Exposes CRUD operations for the **PackageRecommendation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PackageRecommendations
    * const packageRecommendations = await prisma.packageRecommendation.findMany()
    * ```
    */
  get packageRecommendation(): Prisma.PackageRecommendationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentTransaction`: Exposes CRUD operations for the **PaymentTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentTransactions
    * const paymentTransactions = await prisma.paymentTransaction.findMany()
    * ```
    */
  get paymentTransaction(): Prisma.PaymentTransactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **Permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.PermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.recurringBooking`: Exposes CRUD operations for the **RecurringBooking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RecurringBookings
    * const recurringBookings = await prisma.recurringBooking.findMany()
    * ```
    */
  get recurringBooking(): Prisma.RecurringBookingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rewardPoint`: Exposes CRUD operations for the **RewardPoint** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RewardPoints
    * const rewardPoints = await prisma.rewardPoint.findMany()
    * ```
    */
  get rewardPoint(): Prisma.RewardPointDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.service`: Exposes CRUD operations for the **Service** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.service.findMany()
    * ```
    */
  get service(): Prisma.ServiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.serviceProvider`: Exposes CRUD operations for the **ServiceProvider** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceProviders
    * const serviceProviders = await prisma.serviceProvider.findMany()
    * ```
    */
  get serviceProvider(): Prisma.ServiceProviderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.serviceProviderTranslation`: Exposes CRUD operations for the **ServiceProviderTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceProviderTranslations
    * const serviceProviderTranslations = await prisma.serviceProviderTranslation.findMany()
    * ```
    */
  get serviceProviderTranslation(): Prisma.ServiceProviderTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.serviceTranslation`: Exposes CRUD operations for the **ServiceTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceTranslations
    * const serviceTranslations = await prisma.serviceTranslation.findMany()
    * ```
    */
  get serviceTranslation(): Prisma.ServiceTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.staff`: Exposes CRUD operations for the **Staff** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Staff
    * const staff = await prisma.staff.findMany()
    * ```
    */
  get staff(): Prisma.StaffDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.staffCategory`: Exposes CRUD operations for the **StaffCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StaffCategories
    * const staffCategories = await prisma.staffCategory.findMany()
    * ```
    */
  get staffCategory(): Prisma.StaffCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaction`: Exposes CRUD operations for the **Transaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transaction.findMany()
    * ```
    */
  get transaction(): Prisma.TransactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationCode`: Exposes CRUD operations for the **VerificationCode** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationCodes
    * const verificationCodes = await prisma.verificationCode.findMany()
    * ```
    */
  get verificationCode(): Prisma.VerificationCodeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.workLog`: Exposes CRUD operations for the **WorkLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WorkLogs
    * const workLogs = await prisma.workLog.findMany()
    * ```
    */
  get workLog(): Prisma.WorkLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inspectionReport`: Exposes CRUD operations for the **InspectionReport** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InspectionReports
    * const inspectionReports = await prisma.inspectionReport.findMany()
    * ```
    */
  get inspectionReport(): Prisma.InspectionReportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proposedService`: Exposes CRUD operations for the **ProposedService** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProposedServices
    * const proposedServices = await prisma.proposedService.findMany()
    * ```
    */
  get proposedService(): Prisma.ProposedServiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.serviceItem`: Exposes CRUD operations for the **ServiceItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceItems
    * const serviceItems = await prisma.serviceItem.findMany()
    * ```
    */
  get serviceItem(): Prisma.ServiceItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.serviceRequest`: Exposes CRUD operations for the **ServiceRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceRequests
    * const serviceRequests = await prisma.serviceRequest.findMany()
    * ```
    */
  get serviceRequest(): Prisma.ServiceRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.service_ServiceItems`: Exposes CRUD operations for the **Service_ServiceItems** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Service_ServiceItems
    * const service_ServiceItems = await prisma.service_ServiceItems.findMany()
    * ```
    */
  get service_ServiceItems(): Prisma.Service_ServiceItemsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Booking: 'Booking',
    Category: 'Category',
    CategoryTranslation: 'CategoryTranslation',
    ChatMessage: 'ChatMessage',
    CustomerProfile: 'CustomerProfile',
    Device: 'Device',
    Language: 'Language',
    Notification: 'Notification',
    PackageRecommendation: 'PackageRecommendation',
    PaymentTransaction: 'PaymentTransaction',
    Permission: 'Permission',
    RecurringBooking: 'RecurringBooking',
    RefreshToken: 'RefreshToken',
    Review: 'Review',
    RewardPoint: 'RewardPoint',
    Role: 'Role',
    Service: 'Service',
    ServiceProvider: 'ServiceProvider',
    ServiceProviderTranslation: 'ServiceProviderTranslation',
    ServiceTranslation: 'ServiceTranslation',
    Staff: 'Staff',
    StaffCategory: 'StaffCategory',
    Transaction: 'Transaction',
    User: 'User',
    VerificationCode: 'VerificationCode',
    WorkLog: 'WorkLog',
    InspectionReport: 'InspectionReport',
    ProposedService: 'ProposedService',
    ServiceItem: 'ServiceItem',
    ServiceRequest: 'ServiceRequest',
    Service_ServiceItems: 'Service_ServiceItems'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "booking" | "category" | "categoryTranslation" | "chatMessage" | "customerProfile" | "device" | "language" | "notification" | "packageRecommendation" | "paymentTransaction" | "permission" | "recurringBooking" | "refreshToken" | "review" | "rewardPoint" | "role" | "service" | "serviceProvider" | "serviceProviderTranslation" | "serviceTranslation" | "staff" | "staffCategory" | "transaction" | "user" | "verificationCode" | "workLog" | "inspectionReport" | "proposedService" | "serviceItem" | "serviceRequest" | "service_ServiceItems"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Booking: {
        payload: Prisma.$BookingPayload<ExtArgs>
        fields: Prisma.BookingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BookingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BookingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          findFirst: {
            args: Prisma.BookingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BookingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          findMany: {
            args: Prisma.BookingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>[]
          }
          create: {
            args: Prisma.BookingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          createMany: {
            args: Prisma.BookingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BookingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>[]
          }
          delete: {
            args: Prisma.BookingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          update: {
            args: Prisma.BookingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          deleteMany: {
            args: Prisma.BookingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BookingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BookingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>[]
          }
          upsert: {
            args: Prisma.BookingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BookingPayload>
          }
          aggregate: {
            args: Prisma.BookingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBooking>
          }
          groupBy: {
            args: Prisma.BookingGroupByArgs<ExtArgs>
            result: $Utils.Optional<BookingGroupByOutputType>[]
          }
          count: {
            args: Prisma.BookingCountArgs<ExtArgs>
            result: $Utils.Optional<BookingCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      CategoryTranslation: {
        payload: Prisma.$CategoryTranslationPayload<ExtArgs>
        fields: Prisma.CategoryTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          findFirst: {
            args: Prisma.CategoryTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          findMany: {
            args: Prisma.CategoryTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          create: {
            args: Prisma.CategoryTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          createMany: {
            args: Prisma.CategoryTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          delete: {
            args: Prisma.CategoryTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          update: {
            args: Prisma.CategoryTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          deleteMany: {
            args: Prisma.CategoryTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          upsert: {
            args: Prisma.CategoryTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          aggregate: {
            args: Prisma.CategoryTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoryTranslation>
          }
          groupBy: {
            args: Prisma.CategoryTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryTranslationCountAggregateOutputType> | number
          }
        }
      }
      ChatMessage: {
        payload: Prisma.$ChatMessagePayload<ExtArgs>
        fields: Prisma.ChatMessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatMessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatMessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          findFirst: {
            args: Prisma.ChatMessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatMessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          findMany: {
            args: Prisma.ChatMessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>[]
          }
          create: {
            args: Prisma.ChatMessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          createMany: {
            args: Prisma.ChatMessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChatMessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>[]
          }
          delete: {
            args: Prisma.ChatMessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          update: {
            args: Prisma.ChatMessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          deleteMany: {
            args: Prisma.ChatMessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatMessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ChatMessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>[]
          }
          upsert: {
            args: Prisma.ChatMessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          aggregate: {
            args: Prisma.ChatMessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChatMessage>
          }
          groupBy: {
            args: Prisma.ChatMessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatMessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatMessageCountArgs<ExtArgs>
            result: $Utils.Optional<ChatMessageCountAggregateOutputType> | number
          }
        }
      }
      CustomerProfile: {
        payload: Prisma.$CustomerProfilePayload<ExtArgs>
        fields: Prisma.CustomerProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>
          }
          findFirst: {
            args: Prisma.CustomerProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>
          }
          findMany: {
            args: Prisma.CustomerProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>[]
          }
          create: {
            args: Prisma.CustomerProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>
          }
          createMany: {
            args: Prisma.CustomerProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>[]
          }
          delete: {
            args: Prisma.CustomerProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>
          }
          update: {
            args: Prisma.CustomerProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>
          }
          deleteMany: {
            args: Prisma.CustomerProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomerProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>[]
          }
          upsert: {
            args: Prisma.CustomerProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerProfilePayload>
          }
          aggregate: {
            args: Prisma.CustomerProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomerProfile>
          }
          groupBy: {
            args: Prisma.CustomerProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerProfileCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerProfileCountAggregateOutputType> | number
          }
        }
      }
      Device: {
        payload: Prisma.$DevicePayload<ExtArgs>
        fields: Prisma.DeviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeviceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeviceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          findFirst: {
            args: Prisma.DeviceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeviceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          findMany: {
            args: Prisma.DeviceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          create: {
            args: Prisma.DeviceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          createMany: {
            args: Prisma.DeviceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeviceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          delete: {
            args: Prisma.DeviceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          update: {
            args: Prisma.DeviceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          deleteMany: {
            args: Prisma.DeviceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeviceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DeviceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          upsert: {
            args: Prisma.DeviceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          aggregate: {
            args: Prisma.DeviceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevice>
          }
          groupBy: {
            args: Prisma.DeviceGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeviceGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeviceCountArgs<ExtArgs>
            result: $Utils.Optional<DeviceCountAggregateOutputType> | number
          }
        }
      }
      Language: {
        payload: Prisma.$LanguagePayload<ExtArgs>
        fields: Prisma.LanguageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LanguageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LanguageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          findFirst: {
            args: Prisma.LanguageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LanguageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          findMany: {
            args: Prisma.LanguageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          create: {
            args: Prisma.LanguageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          createMany: {
            args: Prisma.LanguageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LanguageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          delete: {
            args: Prisma.LanguageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          update: {
            args: Prisma.LanguageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          deleteMany: {
            args: Prisma.LanguageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LanguageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LanguageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          upsert: {
            args: Prisma.LanguageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          aggregate: {
            args: Prisma.LanguageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLanguage>
          }
          groupBy: {
            args: Prisma.LanguageGroupByArgs<ExtArgs>
            result: $Utils.Optional<LanguageGroupByOutputType>[]
          }
          count: {
            args: Prisma.LanguageCountArgs<ExtArgs>
            result: $Utils.Optional<LanguageCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      PackageRecommendation: {
        payload: Prisma.$PackageRecommendationPayload<ExtArgs>
        fields: Prisma.PackageRecommendationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PackageRecommendationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PackageRecommendationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>
          }
          findFirst: {
            args: Prisma.PackageRecommendationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PackageRecommendationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>
          }
          findMany: {
            args: Prisma.PackageRecommendationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>[]
          }
          create: {
            args: Prisma.PackageRecommendationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>
          }
          createMany: {
            args: Prisma.PackageRecommendationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PackageRecommendationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>[]
          }
          delete: {
            args: Prisma.PackageRecommendationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>
          }
          update: {
            args: Prisma.PackageRecommendationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>
          }
          deleteMany: {
            args: Prisma.PackageRecommendationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PackageRecommendationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PackageRecommendationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>[]
          }
          upsert: {
            args: Prisma.PackageRecommendationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PackageRecommendationPayload>
          }
          aggregate: {
            args: Prisma.PackageRecommendationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePackageRecommendation>
          }
          groupBy: {
            args: Prisma.PackageRecommendationGroupByArgs<ExtArgs>
            result: $Utils.Optional<PackageRecommendationGroupByOutputType>[]
          }
          count: {
            args: Prisma.PackageRecommendationCountArgs<ExtArgs>
            result: $Utils.Optional<PackageRecommendationCountAggregateOutputType> | number
          }
        }
      }
      PaymentTransaction: {
        payload: Prisma.$PaymentTransactionPayload<ExtArgs>
        fields: Prisma.PaymentTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findFirst: {
            args: Prisma.PaymentTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findMany: {
            args: Prisma.PaymentTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          create: {
            args: Prisma.PaymentTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          createMany: {
            args: Prisma.PaymentTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          delete: {
            args: Prisma.PaymentTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          update: {
            args: Prisma.PaymentTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          deleteMany: {
            args: Prisma.PaymentTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentTransactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          upsert: {
            args: Prisma.PaymentTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          aggregate: {
            args: Prisma.PaymentTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentTransaction>
          }
          groupBy: {
            args: Prisma.PaymentTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionCountAggregateOutputType> | number
          }
        }
      }
      Permission: {
        payload: Prisma.$PermissionPayload<ExtArgs>
        fields: Prisma.PermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findFirst: {
            args: Prisma.PermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findMany: {
            args: Prisma.PermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          create: {
            args: Prisma.PermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          createMany: {
            args: Prisma.PermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          delete: {
            args: Prisma.PermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          update: {
            args: Prisma.PermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          deleteMany: {
            args: Prisma.PermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          upsert: {
            args: Prisma.PermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.PermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      RecurringBooking: {
        payload: Prisma.$RecurringBookingPayload<ExtArgs>
        fields: Prisma.RecurringBookingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RecurringBookingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RecurringBookingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>
          }
          findFirst: {
            args: Prisma.RecurringBookingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RecurringBookingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>
          }
          findMany: {
            args: Prisma.RecurringBookingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>[]
          }
          create: {
            args: Prisma.RecurringBookingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>
          }
          createMany: {
            args: Prisma.RecurringBookingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RecurringBookingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>[]
          }
          delete: {
            args: Prisma.RecurringBookingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>
          }
          update: {
            args: Prisma.RecurringBookingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>
          }
          deleteMany: {
            args: Prisma.RecurringBookingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RecurringBookingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RecurringBookingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>[]
          }
          upsert: {
            args: Prisma.RecurringBookingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecurringBookingPayload>
          }
          aggregate: {
            args: Prisma.RecurringBookingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRecurringBooking>
          }
          groupBy: {
            args: Prisma.RecurringBookingGroupByArgs<ExtArgs>
            result: $Utils.Optional<RecurringBookingGroupByOutputType>[]
          }
          count: {
            args: Prisma.RecurringBookingCountArgs<ExtArgs>
            result: $Utils.Optional<RecurringBookingCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RefreshTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      RewardPoint: {
        payload: Prisma.$RewardPointPayload<ExtArgs>
        fields: Prisma.RewardPointFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RewardPointFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RewardPointFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>
          }
          findFirst: {
            args: Prisma.RewardPointFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RewardPointFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>
          }
          findMany: {
            args: Prisma.RewardPointFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>[]
          }
          create: {
            args: Prisma.RewardPointCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>
          }
          createMany: {
            args: Prisma.RewardPointCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RewardPointCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>[]
          }
          delete: {
            args: Prisma.RewardPointDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>
          }
          update: {
            args: Prisma.RewardPointUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>
          }
          deleteMany: {
            args: Prisma.RewardPointDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RewardPointUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RewardPointUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>[]
          }
          upsert: {
            args: Prisma.RewardPointUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RewardPointPayload>
          }
          aggregate: {
            args: Prisma.RewardPointAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRewardPoint>
          }
          groupBy: {
            args: Prisma.RewardPointGroupByArgs<ExtArgs>
            result: $Utils.Optional<RewardPointGroupByOutputType>[]
          }
          count: {
            args: Prisma.RewardPointCountArgs<ExtArgs>
            result: $Utils.Optional<RewardPointCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Service: {
        payload: Prisma.$ServicePayload<ExtArgs>
        fields: Prisma.ServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          findFirst: {
            args: Prisma.ServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          findMany: {
            args: Prisma.ServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          create: {
            args: Prisma.ServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          createMany: {
            args: Prisma.ServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          delete: {
            args: Prisma.ServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          update: {
            args: Prisma.ServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          deleteMany: {
            args: Prisma.ServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          upsert: {
            args: Prisma.ServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          aggregate: {
            args: Prisma.ServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateService>
          }
          groupBy: {
            args: Prisma.ServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceCountAggregateOutputType> | number
          }
        }
      }
      ServiceProvider: {
        payload: Prisma.$ServiceProviderPayload<ExtArgs>
        fields: Prisma.ServiceProviderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceProviderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceProviderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>
          }
          findFirst: {
            args: Prisma.ServiceProviderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceProviderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>
          }
          findMany: {
            args: Prisma.ServiceProviderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>[]
          }
          create: {
            args: Prisma.ServiceProviderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>
          }
          createMany: {
            args: Prisma.ServiceProviderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceProviderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>[]
          }
          delete: {
            args: Prisma.ServiceProviderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>
          }
          update: {
            args: Prisma.ServiceProviderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>
          }
          deleteMany: {
            args: Prisma.ServiceProviderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceProviderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceProviderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>[]
          }
          upsert: {
            args: Prisma.ServiceProviderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderPayload>
          }
          aggregate: {
            args: Prisma.ServiceProviderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceProvider>
          }
          groupBy: {
            args: Prisma.ServiceProviderGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceProviderGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceProviderCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceProviderCountAggregateOutputType> | number
          }
        }
      }
      ServiceProviderTranslation: {
        payload: Prisma.$ServiceProviderTranslationPayload<ExtArgs>
        fields: Prisma.ServiceProviderTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceProviderTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceProviderTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>
          }
          findFirst: {
            args: Prisma.ServiceProviderTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceProviderTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>
          }
          findMany: {
            args: Prisma.ServiceProviderTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>[]
          }
          create: {
            args: Prisma.ServiceProviderTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>
          }
          createMany: {
            args: Prisma.ServiceProviderTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceProviderTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>[]
          }
          delete: {
            args: Prisma.ServiceProviderTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>
          }
          update: {
            args: Prisma.ServiceProviderTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ServiceProviderTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceProviderTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceProviderTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ServiceProviderTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceProviderTranslationPayload>
          }
          aggregate: {
            args: Prisma.ServiceProviderTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceProviderTranslation>
          }
          groupBy: {
            args: Prisma.ServiceProviderTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceProviderTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceProviderTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceProviderTranslationCountAggregateOutputType> | number
          }
        }
      }
      ServiceTranslation: {
        payload: Prisma.$ServiceTranslationPayload<ExtArgs>
        fields: Prisma.ServiceTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>
          }
          findFirst: {
            args: Prisma.ServiceTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>
          }
          findMany: {
            args: Prisma.ServiceTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>[]
          }
          create: {
            args: Prisma.ServiceTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>
          }
          createMany: {
            args: Prisma.ServiceTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>[]
          }
          delete: {
            args: Prisma.ServiceTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>
          }
          update: {
            args: Prisma.ServiceTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ServiceTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ServiceTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceTranslationPayload>
          }
          aggregate: {
            args: Prisma.ServiceTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceTranslation>
          }
          groupBy: {
            args: Prisma.ServiceTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceTranslationCountAggregateOutputType> | number
          }
        }
      }
      Staff: {
        payload: Prisma.$StaffPayload<ExtArgs>
        fields: Prisma.StaffFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StaffFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StaffFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>
          }
          findFirst: {
            args: Prisma.StaffFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StaffFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>
          }
          findMany: {
            args: Prisma.StaffFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>[]
          }
          create: {
            args: Prisma.StaffCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>
          }
          createMany: {
            args: Prisma.StaffCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StaffCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>[]
          }
          delete: {
            args: Prisma.StaffDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>
          }
          update: {
            args: Prisma.StaffUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>
          }
          deleteMany: {
            args: Prisma.StaffDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StaffUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StaffUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>[]
          }
          upsert: {
            args: Prisma.StaffUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffPayload>
          }
          aggregate: {
            args: Prisma.StaffAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStaff>
          }
          groupBy: {
            args: Prisma.StaffGroupByArgs<ExtArgs>
            result: $Utils.Optional<StaffGroupByOutputType>[]
          }
          count: {
            args: Prisma.StaffCountArgs<ExtArgs>
            result: $Utils.Optional<StaffCountAggregateOutputType> | number
          }
        }
      }
      StaffCategory: {
        payload: Prisma.$StaffCategoryPayload<ExtArgs>
        fields: Prisma.StaffCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StaffCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StaffCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>
          }
          findFirst: {
            args: Prisma.StaffCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StaffCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>
          }
          findMany: {
            args: Prisma.StaffCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>[]
          }
          create: {
            args: Prisma.StaffCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>
          }
          createMany: {
            args: Prisma.StaffCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StaffCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>[]
          }
          delete: {
            args: Prisma.StaffCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>
          }
          update: {
            args: Prisma.StaffCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>
          }
          deleteMany: {
            args: Prisma.StaffCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StaffCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StaffCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>[]
          }
          upsert: {
            args: Prisma.StaffCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffCategoryPayload>
          }
          aggregate: {
            args: Prisma.StaffCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStaffCategory>
          }
          groupBy: {
            args: Prisma.StaffCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<StaffCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.StaffCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<StaffCategoryCountAggregateOutputType> | number
          }
        }
      }
      Transaction: {
        payload: Prisma.$TransactionPayload<ExtArgs>
        fields: Prisma.TransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          findFirst: {
            args: Prisma.TransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          findMany: {
            args: Prisma.TransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          create: {
            args: Prisma.TransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          createMany: {
            args: Prisma.TransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          delete: {
            args: Prisma.TransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          update: {
            args: Prisma.TransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          deleteMany: {
            args: Prisma.TransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          upsert: {
            args: Prisma.TransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          aggregate: {
            args: Prisma.TransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaction>
          }
          groupBy: {
            args: Prisma.TransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      VerificationCode: {
        payload: Prisma.$VerificationCodePayload<ExtArgs>
        fields: Prisma.VerificationCodeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationCodeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationCodeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          findFirst: {
            args: Prisma.VerificationCodeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationCodeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          findMany: {
            args: Prisma.VerificationCodeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>[]
          }
          create: {
            args: Prisma.VerificationCodeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          createMany: {
            args: Prisma.VerificationCodeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationCodeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>[]
          }
          delete: {
            args: Prisma.VerificationCodeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          update: {
            args: Prisma.VerificationCodeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          deleteMany: {
            args: Prisma.VerificationCodeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationCodeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationCodeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>[]
          }
          upsert: {
            args: Prisma.VerificationCodeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          aggregate: {
            args: Prisma.VerificationCodeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationCode>
          }
          groupBy: {
            args: Prisma.VerificationCodeGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationCodeGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationCodeCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationCodeCountAggregateOutputType> | number
          }
        }
      }
      WorkLog: {
        payload: Prisma.$WorkLogPayload<ExtArgs>
        fields: Prisma.WorkLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WorkLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WorkLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>
          }
          findFirst: {
            args: Prisma.WorkLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WorkLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>
          }
          findMany: {
            args: Prisma.WorkLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>[]
          }
          create: {
            args: Prisma.WorkLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>
          }
          createMany: {
            args: Prisma.WorkLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.WorkLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>[]
          }
          delete: {
            args: Prisma.WorkLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>
          }
          update: {
            args: Prisma.WorkLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>
          }
          deleteMany: {
            args: Prisma.WorkLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WorkLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.WorkLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>[]
          }
          upsert: {
            args: Prisma.WorkLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WorkLogPayload>
          }
          aggregate: {
            args: Prisma.WorkLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWorkLog>
          }
          groupBy: {
            args: Prisma.WorkLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<WorkLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.WorkLogCountArgs<ExtArgs>
            result: $Utils.Optional<WorkLogCountAggregateOutputType> | number
          }
        }
      }
      InspectionReport: {
        payload: Prisma.$InspectionReportPayload<ExtArgs>
        fields: Prisma.InspectionReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InspectionReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InspectionReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>
          }
          findFirst: {
            args: Prisma.InspectionReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InspectionReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>
          }
          findMany: {
            args: Prisma.InspectionReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>[]
          }
          create: {
            args: Prisma.InspectionReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>
          }
          createMany: {
            args: Prisma.InspectionReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InspectionReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>[]
          }
          delete: {
            args: Prisma.InspectionReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>
          }
          update: {
            args: Prisma.InspectionReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>
          }
          deleteMany: {
            args: Prisma.InspectionReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InspectionReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InspectionReportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>[]
          }
          upsert: {
            args: Prisma.InspectionReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspectionReportPayload>
          }
          aggregate: {
            args: Prisma.InspectionReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInspectionReport>
          }
          groupBy: {
            args: Prisma.InspectionReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<InspectionReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.InspectionReportCountArgs<ExtArgs>
            result: $Utils.Optional<InspectionReportCountAggregateOutputType> | number
          }
        }
      }
      ProposedService: {
        payload: Prisma.$ProposedServicePayload<ExtArgs>
        fields: Prisma.ProposedServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProposedServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProposedServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>
          }
          findFirst: {
            args: Prisma.ProposedServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProposedServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>
          }
          findMany: {
            args: Prisma.ProposedServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>[]
          }
          create: {
            args: Prisma.ProposedServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>
          }
          createMany: {
            args: Prisma.ProposedServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProposedServiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>[]
          }
          delete: {
            args: Prisma.ProposedServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>
          }
          update: {
            args: Prisma.ProposedServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>
          }
          deleteMany: {
            args: Prisma.ProposedServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProposedServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProposedServiceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>[]
          }
          upsert: {
            args: Prisma.ProposedServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProposedServicePayload>
          }
          aggregate: {
            args: Prisma.ProposedServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProposedService>
          }
          groupBy: {
            args: Prisma.ProposedServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProposedServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProposedServiceCountArgs<ExtArgs>
            result: $Utils.Optional<ProposedServiceCountAggregateOutputType> | number
          }
        }
      }
      ServiceItem: {
        payload: Prisma.$ServiceItemPayload<ExtArgs>
        fields: Prisma.ServiceItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>
          }
          findFirst: {
            args: Prisma.ServiceItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>
          }
          findMany: {
            args: Prisma.ServiceItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>[]
          }
          create: {
            args: Prisma.ServiceItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>
          }
          createMany: {
            args: Prisma.ServiceItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>[]
          }
          delete: {
            args: Prisma.ServiceItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>
          }
          update: {
            args: Prisma.ServiceItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>
          }
          deleteMany: {
            args: Prisma.ServiceItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>[]
          }
          upsert: {
            args: Prisma.ServiceItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceItemPayload>
          }
          aggregate: {
            args: Prisma.ServiceItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceItem>
          }
          groupBy: {
            args: Prisma.ServiceItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceItemCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceItemCountAggregateOutputType> | number
          }
        }
      }
      ServiceRequest: {
        payload: Prisma.$ServiceRequestPayload<ExtArgs>
        fields: Prisma.ServiceRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>
          }
          findFirst: {
            args: Prisma.ServiceRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>
          }
          findMany: {
            args: Prisma.ServiceRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>[]
          }
          create: {
            args: Prisma.ServiceRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>
          }
          createMany: {
            args: Prisma.ServiceRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ServiceRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>[]
          }
          delete: {
            args: Prisma.ServiceRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>
          }
          update: {
            args: Prisma.ServiceRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>
          }
          deleteMany: {
            args: Prisma.ServiceRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ServiceRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>[]
          }
          upsert: {
            args: Prisma.ServiceRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServiceRequestPayload>
          }
          aggregate: {
            args: Prisma.ServiceRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServiceRequest>
          }
          groupBy: {
            args: Prisma.ServiceRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceRequestCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceRequestCountAggregateOutputType> | number
          }
        }
      }
      Service_ServiceItems: {
        payload: Prisma.$Service_ServiceItemsPayload<ExtArgs>
        fields: Prisma.Service_ServiceItemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Service_ServiceItemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Service_ServiceItemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>
          }
          findFirst: {
            args: Prisma.Service_ServiceItemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Service_ServiceItemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>
          }
          findMany: {
            args: Prisma.Service_ServiceItemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>[]
          }
          create: {
            args: Prisma.Service_ServiceItemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>
          }
          createMany: {
            args: Prisma.Service_ServiceItemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Service_ServiceItemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>[]
          }
          delete: {
            args: Prisma.Service_ServiceItemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>
          }
          update: {
            args: Prisma.Service_ServiceItemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>
          }
          deleteMany: {
            args: Prisma.Service_ServiceItemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Service_ServiceItemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Service_ServiceItemsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>[]
          }
          upsert: {
            args: Prisma.Service_ServiceItemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Service_ServiceItemsPayload>
          }
          aggregate: {
            args: Prisma.Service_ServiceItemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateService_ServiceItems>
          }
          groupBy: {
            args: Prisma.Service_ServiceItemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Service_ServiceItemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Service_ServiceItemsCountArgs<ExtArgs>
            result: $Utils.Optional<Service_ServiceItemsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    booking?: BookingOmit
    category?: CategoryOmit
    categoryTranslation?: CategoryTranslationOmit
    chatMessage?: ChatMessageOmit
    customerProfile?: CustomerProfileOmit
    device?: DeviceOmit
    language?: LanguageOmit
    notification?: NotificationOmit
    packageRecommendation?: PackageRecommendationOmit
    paymentTransaction?: PaymentTransactionOmit
    permission?: PermissionOmit
    recurringBooking?: RecurringBookingOmit
    refreshToken?: RefreshTokenOmit
    review?: ReviewOmit
    rewardPoint?: RewardPointOmit
    role?: RoleOmit
    service?: ServiceOmit
    serviceProvider?: ServiceProviderOmit
    serviceProviderTranslation?: ServiceProviderTranslationOmit
    serviceTranslation?: ServiceTranslationOmit
    staff?: StaffOmit
    staffCategory?: StaffCategoryOmit
    transaction?: TransactionOmit
    user?: UserOmit
    verificationCode?: VerificationCodeOmit
    workLog?: WorkLogOmit
    inspectionReport?: InspectionReportOmit
    proposedService?: ProposedServiceOmit
    serviceItem?: ServiceItemOmit
    serviceRequest?: ServiceRequestOmit
    service_ServiceItems?: Service_ServiceItemsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BookingCountOutputType
   */

  export type BookingCountOutputType = {
    ProposedService: number
    WorkLog: number
  }

  export type BookingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProposedService?: boolean | BookingCountOutputTypeCountProposedServiceArgs
    WorkLog?: boolean | BookingCountOutputTypeCountWorkLogArgs
  }

  // Custom InputTypes
  /**
   * BookingCountOutputType without action
   */
  export type BookingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BookingCountOutputType
     */
    select?: BookingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BookingCountOutputType without action
   */
  export type BookingCountOutputTypeCountProposedServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProposedServiceWhereInput
  }

  /**
   * BookingCountOutputType without action
   */
  export type BookingCountOutputTypeCountWorkLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkLogWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    other_Category: number
    CategoryTranslation: number
    Service: number
    ServiceRequest: number
    StaffCategory: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    other_Category?: boolean | CategoryCountOutputTypeCountOther_CategoryArgs
    CategoryTranslation?: boolean | CategoryCountOutputTypeCountCategoryTranslationArgs
    Service?: boolean | CategoryCountOutputTypeCountServiceArgs
    ServiceRequest?: boolean | CategoryCountOutputTypeCountServiceRequestArgs
    StaffCategory?: boolean | CategoryCountOutputTypeCountStaffCategoryArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountOther_CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountCategoryTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceRequestWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountStaffCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StaffCategoryWhereInput
  }


  /**
   * Count Type CustomerProfileCountOutputType
   */

  export type CustomerProfileCountOutputType = {
    Booking: number
    ChatMessage: number
    PackageRecommendation: number
    RecurringBooking: number
    Review: number
    RewardPoint: number
    ServiceRequest: number
  }

  export type CustomerProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | CustomerProfileCountOutputTypeCountBookingArgs
    ChatMessage?: boolean | CustomerProfileCountOutputTypeCountChatMessageArgs
    PackageRecommendation?: boolean | CustomerProfileCountOutputTypeCountPackageRecommendationArgs
    RecurringBooking?: boolean | CustomerProfileCountOutputTypeCountRecurringBookingArgs
    Review?: boolean | CustomerProfileCountOutputTypeCountReviewArgs
    RewardPoint?: boolean | CustomerProfileCountOutputTypeCountRewardPointArgs
    ServiceRequest?: boolean | CustomerProfileCountOutputTypeCountServiceRequestArgs
  }

  // Custom InputTypes
  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfileCountOutputType
     */
    select?: CustomerProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountBookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BookingWhereInput
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountChatMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMessageWhereInput
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountPackageRecommendationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PackageRecommendationWhereInput
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountRecurringBookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecurringBookingWhereInput
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountRewardPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RewardPointWhereInput
  }

  /**
   * CustomerProfileCountOutputType without action
   */
  export type CustomerProfileCountOutputTypeCountServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceRequestWhereInput
  }


  /**
   * Count Type DeviceCountOutputType
   */

  export type DeviceCountOutputType = {
    RefreshToken: number
  }

  export type DeviceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RefreshToken?: boolean | DeviceCountOutputTypeCountRefreshTokenArgs
  }

  // Custom InputTypes
  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceCountOutputType
     */
    select?: DeviceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountRefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type LanguageCountOutputType
   */

  export type LanguageCountOutputType = {
    CategoryTranslation: number
    ServiceProviderTranslation: number
    ServiceTranslation: number
  }

  export type LanguageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CategoryTranslation?: boolean | LanguageCountOutputTypeCountCategoryTranslationArgs
    ServiceProviderTranslation?: boolean | LanguageCountOutputTypeCountServiceProviderTranslationArgs
    ServiceTranslation?: boolean | LanguageCountOutputTypeCountServiceTranslationArgs
  }

  // Custom InputTypes
  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LanguageCountOutputType
     */
    select?: LanguageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountCategoryTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountServiceProviderTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceProviderTranslationWhereInput
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountServiceTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceTranslationWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    Role: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Role?: boolean | PermissionCountOutputTypeCountRoleArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    Permission: number
    User_UserRoles: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | RoleCountOutputTypeCountPermissionArgs
    User_UserRoles?: boolean | RoleCountOutputTypeCountUser_UserRolesArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountPermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUser_UserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type ServiceCountOutputType
   */

  export type ServiceCountOutputType = {
    ProposedService: number
    RecurringBooking: number
    Review: number
    ServiceTranslation: number
    Service_ServiceItems: number
  }

  export type ServiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProposedService?: boolean | ServiceCountOutputTypeCountProposedServiceArgs
    RecurringBooking?: boolean | ServiceCountOutputTypeCountRecurringBookingArgs
    Review?: boolean | ServiceCountOutputTypeCountReviewArgs
    ServiceTranslation?: boolean | ServiceCountOutputTypeCountServiceTranslationArgs
    Service_ServiceItems?: boolean | ServiceCountOutputTypeCountService_ServiceItemsArgs
  }

  // Custom InputTypes
  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCountOutputType
     */
    select?: ServiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountProposedServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProposedServiceWhereInput
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountRecurringBookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecurringBookingWhereInput
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountServiceTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceTranslationWhereInput
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountService_ServiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Service_ServiceItemsWhereInput
  }


  /**
   * Count Type ServiceProviderCountOutputType
   */

  export type ServiceProviderCountOutputType = {
    Booking: number
    Service: number
    ServiceItem: number
    ServiceProviderTranslation: number
    ServiceRequest: number
    Staff: number
  }

  export type ServiceProviderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | ServiceProviderCountOutputTypeCountBookingArgs
    Service?: boolean | ServiceProviderCountOutputTypeCountServiceArgs
    ServiceItem?: boolean | ServiceProviderCountOutputTypeCountServiceItemArgs
    ServiceProviderTranslation?: boolean | ServiceProviderCountOutputTypeCountServiceProviderTranslationArgs
    ServiceRequest?: boolean | ServiceProviderCountOutputTypeCountServiceRequestArgs
    Staff?: boolean | ServiceProviderCountOutputTypeCountStaffArgs
  }

  // Custom InputTypes
  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderCountOutputType
     */
    select?: ServiceProviderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeCountBookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BookingWhereInput
  }

  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeCountServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeCountServiceItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceItemWhereInput
  }

  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeCountServiceProviderTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceProviderTranslationWhereInput
  }

  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeCountServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceRequestWhereInput
  }

  /**
   * ServiceProviderCountOutputType without action
   */
  export type ServiceProviderCountOutputTypeCountStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StaffWhereInput
  }


  /**
   * Count Type StaffCountOutputType
   */

  export type StaffCountOutputType = {
    InspectionReport: number
    Review: number
    StaffCategory: number
    WorkLog: number
  }

  export type StaffCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InspectionReport?: boolean | StaffCountOutputTypeCountInspectionReportArgs
    Review?: boolean | StaffCountOutputTypeCountReviewArgs
    StaffCategory?: boolean | StaffCountOutputTypeCountStaffCategoryArgs
    WorkLog?: boolean | StaffCountOutputTypeCountWorkLogArgs
  }

  // Custom InputTypes
  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCountOutputType
     */
    select?: StaffCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountInspectionReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InspectionReportWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountStaffCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StaffCategoryWhereInput
  }

  /**
   * StaffCountOutputType without action
   */
  export type StaffCountOutputTypeCountWorkLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkLogWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    Category_Category_createdByIdToUser: number
    Category_Category_deletedByIdToUser: number
    Category_Category_updatedByIdToUser: number
    Device: number
    Language_Language_createdByIdToUser: number
    Language_Language_deletedByIdToUser: number
    Language_Language_updatedByIdToUser: number
    Notification: number
    Permission_Permission_createdByIdToUser: number
    Permission_Permission_deletedByIdToUser: number
    Permission_Permission_updatedByIdToUser: number
    RefreshToken: number
    Role_Role_createdByIdToUser: number
    Role_Role_deletedByIdToUser: number
    Role_Role_updatedByIdToUser: number
    Service_Service_createdByIdToUser: number
    Service_Service_deletedByIdToUser: number
    Service_Service_updatedByIdToUser: number
    ServiceProvider_ServiceProvider_verifiedByIdToUser: number
    other_User_User_createdByIdToUser: number
    other_User_User_deletedByIdToUser: number
    other_User_User_updatedByIdToUser: number
    Role_UserRoles: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category_Category_createdByIdToUser?: boolean | UserCountOutputTypeCountCategory_Category_createdByIdToUserArgs
    Category_Category_deletedByIdToUser?: boolean | UserCountOutputTypeCountCategory_Category_deletedByIdToUserArgs
    Category_Category_updatedByIdToUser?: boolean | UserCountOutputTypeCountCategory_Category_updatedByIdToUserArgs
    Device?: boolean | UserCountOutputTypeCountDeviceArgs
    Language_Language_createdByIdToUser?: boolean | UserCountOutputTypeCountLanguage_Language_createdByIdToUserArgs
    Language_Language_deletedByIdToUser?: boolean | UserCountOutputTypeCountLanguage_Language_deletedByIdToUserArgs
    Language_Language_updatedByIdToUser?: boolean | UserCountOutputTypeCountLanguage_Language_updatedByIdToUserArgs
    Notification?: boolean | UserCountOutputTypeCountNotificationArgs
    Permission_Permission_createdByIdToUser?: boolean | UserCountOutputTypeCountPermission_Permission_createdByIdToUserArgs
    Permission_Permission_deletedByIdToUser?: boolean | UserCountOutputTypeCountPermission_Permission_deletedByIdToUserArgs
    Permission_Permission_updatedByIdToUser?: boolean | UserCountOutputTypeCountPermission_Permission_updatedByIdToUserArgs
    RefreshToken?: boolean | UserCountOutputTypeCountRefreshTokenArgs
    Role_Role_createdByIdToUser?: boolean | UserCountOutputTypeCountRole_Role_createdByIdToUserArgs
    Role_Role_deletedByIdToUser?: boolean | UserCountOutputTypeCountRole_Role_deletedByIdToUserArgs
    Role_Role_updatedByIdToUser?: boolean | UserCountOutputTypeCountRole_Role_updatedByIdToUserArgs
    Service_Service_createdByIdToUser?: boolean | UserCountOutputTypeCountService_Service_createdByIdToUserArgs
    Service_Service_deletedByIdToUser?: boolean | UserCountOutputTypeCountService_Service_deletedByIdToUserArgs
    Service_Service_updatedByIdToUser?: boolean | UserCountOutputTypeCountService_Service_updatedByIdToUserArgs
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: boolean | UserCountOutputTypeCountServiceProvider_ServiceProvider_verifiedByIdToUserArgs
    other_User_User_createdByIdToUser?: boolean | UserCountOutputTypeCountOther_User_User_createdByIdToUserArgs
    other_User_User_deletedByIdToUser?: boolean | UserCountOutputTypeCountOther_User_User_deletedByIdToUserArgs
    other_User_User_updatedByIdToUser?: boolean | UserCountOutputTypeCountOther_User_User_updatedByIdToUserArgs
    Role_UserRoles?: boolean | UserCountOutputTypeCountRole_UserRolesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCategory_Category_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCategory_Category_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCategory_Category_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLanguage_Language_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLanguage_Language_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLanguage_Language_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPermission_Permission_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPermission_Permission_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPermission_Permission_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRole_Role_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRole_Role_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRole_Role_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountService_Service_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountService_Service_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountService_Service_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountServiceProvider_ServiceProvider_verifiedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceProviderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOther_User_User_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOther_User_User_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOther_User_User_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRole_UserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }


  /**
   * Count Type ServiceItemCountOutputType
   */

  export type ServiceItemCountOutputType = {
    Service_ServiceItems: number
  }

  export type ServiceItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Service_ServiceItems?: boolean | ServiceItemCountOutputTypeCountService_ServiceItemsArgs
  }

  // Custom InputTypes
  /**
   * ServiceItemCountOutputType without action
   */
  export type ServiceItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItemCountOutputType
     */
    select?: ServiceItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServiceItemCountOutputType without action
   */
  export type ServiceItemCountOutputTypeCountService_ServiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Service_ServiceItemsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Booking
   */

  export type AggregateBooking = {
    _count: BookingCountAggregateOutputType | null
    _avg: BookingAvgAggregateOutputType | null
    _sum: BookingSumAggregateOutputType | null
    _min: BookingMinAggregateOutputType | null
    _max: BookingMaxAggregateOutputType | null
  }

  export type BookingAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    staffId: number | null
    serviceRequestId: number | null
  }

  export type BookingSumAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    staffId: number | null
    serviceRequestId: number | null
  }

  export type BookingMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    status: $Enums.BookingStatus | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    staffId: number | null
    serviceRequestId: number | null
  }

  export type BookingMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    status: $Enums.BookingStatus | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    staffId: number | null
    serviceRequestId: number | null
  }

  export type BookingCountAggregateOutputType = {
    id: number
    customerId: number
    providerId: number
    status: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    staffId: number
    serviceRequestId: number
    _all: number
  }


  export type BookingAvgAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    staffId?: true
    serviceRequestId?: true
  }

  export type BookingSumAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    staffId?: true
    serviceRequestId?: true
  }

  export type BookingMinAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    status?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    staffId?: true
    serviceRequestId?: true
  }

  export type BookingMaxAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    status?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    staffId?: true
    serviceRequestId?: true
  }

  export type BookingCountAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    status?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    staffId?: true
    serviceRequestId?: true
    _all?: true
  }

  export type BookingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Booking to aggregate.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bookings
    **/
    _count?: true | BookingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BookingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BookingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BookingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BookingMaxAggregateInputType
  }

  export type GetBookingAggregateType<T extends BookingAggregateArgs> = {
        [P in keyof T & keyof AggregateBooking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBooking[P]>
      : GetScalarType<T[P], AggregateBooking[P]>
  }




  export type BookingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BookingWhereInput
    orderBy?: BookingOrderByWithAggregationInput | BookingOrderByWithAggregationInput[]
    by: BookingScalarFieldEnum[] | BookingScalarFieldEnum
    having?: BookingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BookingCountAggregateInputType | true
    _avg?: BookingAvgAggregateInputType
    _sum?: BookingSumAggregateInputType
    _min?: BookingMinAggregateInputType
    _max?: BookingMaxAggregateInputType
  }

  export type BookingGroupByOutputType = {
    id: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    staffId: number | null
    serviceRequestId: number | null
    _count: BookingCountAggregateOutputType | null
    _avg: BookingAvgAggregateOutputType | null
    _sum: BookingSumAggregateOutputType | null
    _min: BookingMinAggregateOutputType | null
    _max: BookingMaxAggregateOutputType | null
  }

  type GetBookingGroupByPayload<T extends BookingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BookingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BookingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BookingGroupByOutputType[P]>
            : GetScalarType<T[P], BookingGroupByOutputType[P]>
        }
      >
    >


  export type BookingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    status?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    staffId?: boolean
    serviceRequestId?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    ServiceRequest?: boolean | Booking$ServiceRequestArgs<ExtArgs>
    Staff_Booking_staffIdToStaff?: boolean | Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>
    InspectionReport?: boolean | Booking$InspectionReportArgs<ExtArgs>
    ProposedService?: boolean | Booking$ProposedServiceArgs<ExtArgs>
    Transaction?: boolean | Booking$TransactionArgs<ExtArgs>
    WorkLog?: boolean | Booking$WorkLogArgs<ExtArgs>
    _count?: boolean | BookingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["booking"]>

  export type BookingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    status?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    staffId?: boolean
    serviceRequestId?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    ServiceRequest?: boolean | Booking$ServiceRequestArgs<ExtArgs>
    Staff_Booking_staffIdToStaff?: boolean | Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>
  }, ExtArgs["result"]["booking"]>

  export type BookingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    status?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    staffId?: boolean
    serviceRequestId?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    ServiceRequest?: boolean | Booking$ServiceRequestArgs<ExtArgs>
    Staff_Booking_staffIdToStaff?: boolean | Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>
  }, ExtArgs["result"]["booking"]>

  export type BookingSelectScalar = {
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    status?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    staffId?: boolean
    serviceRequestId?: boolean
  }

  export type BookingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "providerId" | "status" | "deletedAt" | "createdAt" | "updatedAt" | "staffId" | "serviceRequestId", ExtArgs["result"]["booking"]>
  export type BookingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    ServiceRequest?: boolean | Booking$ServiceRequestArgs<ExtArgs>
    Staff_Booking_staffIdToStaff?: boolean | Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>
    InspectionReport?: boolean | Booking$InspectionReportArgs<ExtArgs>
    ProposedService?: boolean | Booking$ProposedServiceArgs<ExtArgs>
    Transaction?: boolean | Booking$TransactionArgs<ExtArgs>
    WorkLog?: boolean | Booking$WorkLogArgs<ExtArgs>
    _count?: boolean | BookingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BookingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    ServiceRequest?: boolean | Booking$ServiceRequestArgs<ExtArgs>
    Staff_Booking_staffIdToStaff?: boolean | Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>
  }
  export type BookingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    ServiceRequest?: boolean | Booking$ServiceRequestArgs<ExtArgs>
    Staff_Booking_staffIdToStaff?: boolean | Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>
  }

  export type $BookingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Booking"
    objects: {
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
      ServiceProvider: Prisma.$ServiceProviderPayload<ExtArgs>
      ServiceRequest: Prisma.$ServiceRequestPayload<ExtArgs> | null
      Staff_Booking_staffIdToStaff: Prisma.$StaffPayload<ExtArgs> | null
      InspectionReport: Prisma.$InspectionReportPayload<ExtArgs> | null
      ProposedService: Prisma.$ProposedServicePayload<ExtArgs>[]
      Transaction: Prisma.$TransactionPayload<ExtArgs> | null
      WorkLog: Prisma.$WorkLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      providerId: number
      status: $Enums.BookingStatus
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
      staffId: number | null
      serviceRequestId: number | null
    }, ExtArgs["result"]["booking"]>
    composites: {}
  }

  type BookingGetPayload<S extends boolean | null | undefined | BookingDefaultArgs> = $Result.GetResult<Prisma.$BookingPayload, S>

  type BookingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BookingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BookingCountAggregateInputType | true
    }

  export interface BookingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Booking'], meta: { name: 'Booking' } }
    /**
     * Find zero or one Booking that matches the filter.
     * @param {BookingFindUniqueArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BookingFindUniqueArgs>(args: SelectSubset<T, BookingFindUniqueArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Booking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BookingFindUniqueOrThrowArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BookingFindUniqueOrThrowArgs>(args: SelectSubset<T, BookingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Booking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingFindFirstArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BookingFindFirstArgs>(args?: SelectSubset<T, BookingFindFirstArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Booking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingFindFirstOrThrowArgs} args - Arguments to find a Booking
     * @example
     * // Get one Booking
     * const booking = await prisma.booking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BookingFindFirstOrThrowArgs>(args?: SelectSubset<T, BookingFindFirstOrThrowArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bookings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bookings
     * const bookings = await prisma.booking.findMany()
     * 
     * // Get first 10 Bookings
     * const bookings = await prisma.booking.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bookingWithIdOnly = await prisma.booking.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BookingFindManyArgs>(args?: SelectSubset<T, BookingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Booking.
     * @param {BookingCreateArgs} args - Arguments to create a Booking.
     * @example
     * // Create one Booking
     * const Booking = await prisma.booking.create({
     *   data: {
     *     // ... data to create a Booking
     *   }
     * })
     * 
     */
    create<T extends BookingCreateArgs>(args: SelectSubset<T, BookingCreateArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bookings.
     * @param {BookingCreateManyArgs} args - Arguments to create many Bookings.
     * @example
     * // Create many Bookings
     * const booking = await prisma.booking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BookingCreateManyArgs>(args?: SelectSubset<T, BookingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bookings and returns the data saved in the database.
     * @param {BookingCreateManyAndReturnArgs} args - Arguments to create many Bookings.
     * @example
     * // Create many Bookings
     * const booking = await prisma.booking.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bookings and only return the `id`
     * const bookingWithIdOnly = await prisma.booking.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BookingCreateManyAndReturnArgs>(args?: SelectSubset<T, BookingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Booking.
     * @param {BookingDeleteArgs} args - Arguments to delete one Booking.
     * @example
     * // Delete one Booking
     * const Booking = await prisma.booking.delete({
     *   where: {
     *     // ... filter to delete one Booking
     *   }
     * })
     * 
     */
    delete<T extends BookingDeleteArgs>(args: SelectSubset<T, BookingDeleteArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Booking.
     * @param {BookingUpdateArgs} args - Arguments to update one Booking.
     * @example
     * // Update one Booking
     * const booking = await prisma.booking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BookingUpdateArgs>(args: SelectSubset<T, BookingUpdateArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bookings.
     * @param {BookingDeleteManyArgs} args - Arguments to filter Bookings to delete.
     * @example
     * // Delete a few Bookings
     * const { count } = await prisma.booking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BookingDeleteManyArgs>(args?: SelectSubset<T, BookingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bookings
     * const booking = await prisma.booking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BookingUpdateManyArgs>(args: SelectSubset<T, BookingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookings and returns the data updated in the database.
     * @param {BookingUpdateManyAndReturnArgs} args - Arguments to update many Bookings.
     * @example
     * // Update many Bookings
     * const booking = await prisma.booking.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bookings and only return the `id`
     * const bookingWithIdOnly = await prisma.booking.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BookingUpdateManyAndReturnArgs>(args: SelectSubset<T, BookingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Booking.
     * @param {BookingUpsertArgs} args - Arguments to update or create a Booking.
     * @example
     * // Update or create a Booking
     * const booking = await prisma.booking.upsert({
     *   create: {
     *     // ... data to create a Booking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Booking we want to update
     *   }
     * })
     */
    upsert<T extends BookingUpsertArgs>(args: SelectSubset<T, BookingUpsertArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bookings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingCountArgs} args - Arguments to filter Bookings to count.
     * @example
     * // Count the number of Bookings
     * const count = await prisma.booking.count({
     *   where: {
     *     // ... the filter for the Bookings we want to count
     *   }
     * })
    **/
    count<T extends BookingCountArgs>(
      args?: Subset<T, BookingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BookingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Booking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BookingAggregateArgs>(args: Subset<T, BookingAggregateArgs>): Prisma.PrismaPromise<GetBookingAggregateType<T>>

    /**
     * Group by Booking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BookingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BookingGroupByArgs['orderBy'] }
        : { orderBy?: BookingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BookingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBookingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Booking model
   */
  readonly fields: BookingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Booking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BookingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ServiceProvider<T extends ServiceProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProviderDefaultArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ServiceRequest<T extends Booking$ServiceRequestArgs<ExtArgs> = {}>(args?: Subset<T, Booking$ServiceRequestArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Staff_Booking_staffIdToStaff<T extends Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs> = {}>(args?: Subset<T, Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    InspectionReport<T extends Booking$InspectionReportArgs<ExtArgs> = {}>(args?: Subset<T, Booking$InspectionReportArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ProposedService<T extends Booking$ProposedServiceArgs<ExtArgs> = {}>(args?: Subset<T, Booking$ProposedServiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Transaction<T extends Booking$TransactionArgs<ExtArgs> = {}>(args?: Subset<T, Booking$TransactionArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    WorkLog<T extends Booking$WorkLogArgs<ExtArgs> = {}>(args?: Subset<T, Booking$WorkLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Booking model
   */
  interface BookingFieldRefs {
    readonly id: FieldRef<"Booking", 'Int'>
    readonly customerId: FieldRef<"Booking", 'Int'>
    readonly providerId: FieldRef<"Booking", 'Int'>
    readonly status: FieldRef<"Booking", 'BookingStatus'>
    readonly deletedAt: FieldRef<"Booking", 'DateTime'>
    readonly createdAt: FieldRef<"Booking", 'DateTime'>
    readonly updatedAt: FieldRef<"Booking", 'DateTime'>
    readonly staffId: FieldRef<"Booking", 'Int'>
    readonly serviceRequestId: FieldRef<"Booking", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Booking findUnique
   */
  export type BookingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking findUniqueOrThrow
   */
  export type BookingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking findFirst
   */
  export type BookingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bookings.
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bookings.
     */
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * Booking findFirstOrThrow
   */
  export type BookingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * Filter, which Booking to fetch.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bookings.
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bookings.
     */
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * Booking findMany
   */
  export type BookingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * Filter, which Bookings to fetch.
     */
    where?: BookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bookings to fetch.
     */
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bookings.
     */
    cursor?: BookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bookings.
     */
    skip?: number
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * Booking create
   */
  export type BookingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * The data needed to create a Booking.
     */
    data: XOR<BookingCreateInput, BookingUncheckedCreateInput>
  }

  /**
   * Booking createMany
   */
  export type BookingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bookings.
     */
    data: BookingCreateManyInput | BookingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Booking createManyAndReturn
   */
  export type BookingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The data used to create many Bookings.
     */
    data: BookingCreateManyInput | BookingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Booking update
   */
  export type BookingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * The data needed to update a Booking.
     */
    data: XOR<BookingUpdateInput, BookingUncheckedUpdateInput>
    /**
     * Choose, which Booking to update.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking updateMany
   */
  export type BookingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bookings.
     */
    data: XOR<BookingUpdateManyMutationInput, BookingUncheckedUpdateManyInput>
    /**
     * Filter which Bookings to update
     */
    where?: BookingWhereInput
    /**
     * Limit how many Bookings to update.
     */
    limit?: number
  }

  /**
   * Booking updateManyAndReturn
   */
  export type BookingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * The data used to update Bookings.
     */
    data: XOR<BookingUpdateManyMutationInput, BookingUncheckedUpdateManyInput>
    /**
     * Filter which Bookings to update
     */
    where?: BookingWhereInput
    /**
     * Limit how many Bookings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Booking upsert
   */
  export type BookingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * The filter to search for the Booking to update in case it exists.
     */
    where: BookingWhereUniqueInput
    /**
     * In case the Booking found by the `where` argument doesn't exist, create a new Booking with this data.
     */
    create: XOR<BookingCreateInput, BookingUncheckedCreateInput>
    /**
     * In case the Booking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BookingUpdateInput, BookingUncheckedUpdateInput>
  }

  /**
   * Booking delete
   */
  export type BookingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    /**
     * Filter which Booking to delete.
     */
    where: BookingWhereUniqueInput
  }

  /**
   * Booking deleteMany
   */
  export type BookingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bookings to delete
     */
    where?: BookingWhereInput
    /**
     * Limit how many Bookings to delete.
     */
    limit?: number
  }

  /**
   * Booking.ServiceRequest
   */
  export type Booking$ServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    where?: ServiceRequestWhereInput
  }

  /**
   * Booking.Staff_Booking_staffIdToStaff
   */
  export type Booking$Staff_Booking_staffIdToStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    where?: StaffWhereInput
  }

  /**
   * Booking.InspectionReport
   */
  export type Booking$InspectionReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    where?: InspectionReportWhereInput
  }

  /**
   * Booking.ProposedService
   */
  export type Booking$ProposedServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    where?: ProposedServiceWhereInput
    orderBy?: ProposedServiceOrderByWithRelationInput | ProposedServiceOrderByWithRelationInput[]
    cursor?: ProposedServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProposedServiceScalarFieldEnum | ProposedServiceScalarFieldEnum[]
  }

  /**
   * Booking.Transaction
   */
  export type Booking$TransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
  }

  /**
   * Booking.WorkLog
   */
  export type Booking$WorkLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    where?: WorkLogWhereInput
    orderBy?: WorkLogOrderByWithRelationInput | WorkLogOrderByWithRelationInput[]
    cursor?: WorkLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WorkLogScalarFieldEnum | WorkLogScalarFieldEnum[]
  }

  /**
   * Booking without action
   */
  export type BookingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    id: number | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type CategorySumAggregateOutputType = {
    id: number | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    logo: string | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    logo: string | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    logo: number
    parentCategoryId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type CategorySumAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: number
    name: string
    logo: string | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Category_createdByIdToUser?: boolean | Category$User_Category_createdByIdToUserArgs<ExtArgs>
    User_Category_deletedByIdToUser?: boolean | Category$User_Category_deletedByIdToUserArgs<ExtArgs>
    Category?: boolean | Category$CategoryArgs<ExtArgs>
    other_Category?: boolean | Category$other_CategoryArgs<ExtArgs>
    User_Category_updatedByIdToUser?: boolean | Category$User_Category_updatedByIdToUserArgs<ExtArgs>
    CategoryTranslation?: boolean | Category$CategoryTranslationArgs<ExtArgs>
    Service?: boolean | Category$ServiceArgs<ExtArgs>
    ServiceRequest?: boolean | Category$ServiceRequestArgs<ExtArgs>
    StaffCategory?: boolean | Category$StaffCategoryArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Category_createdByIdToUser?: boolean | Category$User_Category_createdByIdToUserArgs<ExtArgs>
    User_Category_deletedByIdToUser?: boolean | Category$User_Category_deletedByIdToUserArgs<ExtArgs>
    Category?: boolean | Category$CategoryArgs<ExtArgs>
    User_Category_updatedByIdToUser?: boolean | Category$User_Category_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Category_createdByIdToUser?: boolean | Category$User_Category_createdByIdToUserArgs<ExtArgs>
    User_Category_deletedByIdToUser?: boolean | Category$User_Category_deletedByIdToUserArgs<ExtArgs>
    Category?: boolean | Category$CategoryArgs<ExtArgs>
    User_Category_updatedByIdToUser?: boolean | Category$User_Category_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    logo?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "logo" | "parentCategoryId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Category_createdByIdToUser?: boolean | Category$User_Category_createdByIdToUserArgs<ExtArgs>
    User_Category_deletedByIdToUser?: boolean | Category$User_Category_deletedByIdToUserArgs<ExtArgs>
    Category?: boolean | Category$CategoryArgs<ExtArgs>
    other_Category?: boolean | Category$other_CategoryArgs<ExtArgs>
    User_Category_updatedByIdToUser?: boolean | Category$User_Category_updatedByIdToUserArgs<ExtArgs>
    CategoryTranslation?: boolean | Category$CategoryTranslationArgs<ExtArgs>
    Service?: boolean | Category$ServiceArgs<ExtArgs>
    ServiceRequest?: boolean | Category$ServiceRequestArgs<ExtArgs>
    StaffCategory?: boolean | Category$StaffCategoryArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Category_createdByIdToUser?: boolean | Category$User_Category_createdByIdToUserArgs<ExtArgs>
    User_Category_deletedByIdToUser?: boolean | Category$User_Category_deletedByIdToUserArgs<ExtArgs>
    Category?: boolean | Category$CategoryArgs<ExtArgs>
    User_Category_updatedByIdToUser?: boolean | Category$User_Category_updatedByIdToUserArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Category_createdByIdToUser?: boolean | Category$User_Category_createdByIdToUserArgs<ExtArgs>
    User_Category_deletedByIdToUser?: boolean | Category$User_Category_deletedByIdToUserArgs<ExtArgs>
    Category?: boolean | Category$CategoryArgs<ExtArgs>
    User_Category_updatedByIdToUser?: boolean | Category$User_Category_updatedByIdToUserArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      User_Category_createdByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Category_deletedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      Category: Prisma.$CategoryPayload<ExtArgs> | null
      other_Category: Prisma.$CategoryPayload<ExtArgs>[]
      User_Category_updatedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      CategoryTranslation: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      Service: Prisma.$ServicePayload<ExtArgs>[]
      ServiceRequest: Prisma.$ServiceRequestPayload<ExtArgs>[]
      StaffCategory: Prisma.$StaffCategoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      logo: string | null
      parentCategoryId: number | null
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Category_createdByIdToUser<T extends Category$User_Category_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$User_Category_createdByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Category_deletedByIdToUser<T extends Category$User_Category_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$User_Category_deletedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Category<T extends Category$CategoryArgs<ExtArgs> = {}>(args?: Subset<T, Category$CategoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_Category<T extends Category$other_CategoryArgs<ExtArgs> = {}>(args?: Subset<T, Category$other_CategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_Category_updatedByIdToUser<T extends Category$User_Category_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$User_Category_updatedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    CategoryTranslation<T extends Category$CategoryTranslationArgs<ExtArgs> = {}>(args?: Subset<T, Category$CategoryTranslationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Service<T extends Category$ServiceArgs<ExtArgs> = {}>(args?: Subset<T, Category$ServiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceRequest<T extends Category$ServiceRequestArgs<ExtArgs> = {}>(args?: Subset<T, Category$ServiceRequestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    StaffCategory<T extends Category$StaffCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Category$StaffCategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'Int'>
    readonly name: FieldRef<"Category", 'String'>
    readonly logo: FieldRef<"Category", 'String'>
    readonly parentCategoryId: FieldRef<"Category", 'Int'>
    readonly createdById: FieldRef<"Category", 'Int'>
    readonly updatedById: FieldRef<"Category", 'Int'>
    readonly deletedById: FieldRef<"Category", 'Int'>
    readonly deletedAt: FieldRef<"Category", 'DateTime'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.User_Category_createdByIdToUser
   */
  export type Category$User_Category_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.User_Category_deletedByIdToUser
   */
  export type Category$User_Category_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.Category
   */
  export type Category$CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.other_Category
   */
  export type Category$other_CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.User_Category_updatedByIdToUser
   */
  export type Category$User_Category_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.CategoryTranslation
   */
  export type Category$CategoryTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * Category.Service
   */
  export type Category$ServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Category.ServiceRequest
   */
  export type Category$ServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    where?: ServiceRequestWhereInput
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    cursor?: ServiceRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceRequestScalarFieldEnum | ServiceRequestScalarFieldEnum[]
  }

  /**
   * Category.StaffCategory
   */
  export type Category$StaffCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    where?: StaffCategoryWhereInput
    orderBy?: StaffCategoryOrderByWithRelationInput | StaffCategoryOrderByWithRelationInput[]
    cursor?: StaffCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StaffCategoryScalarFieldEnum | StaffCategoryScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model CategoryTranslation
   */

  export type AggregateCategoryTranslation = {
    _count: CategoryTranslationCountAggregateOutputType | null
    _avg: CategoryTranslationAvgAggregateOutputType | null
    _sum: CategoryTranslationSumAggregateOutputType | null
    _min: CategoryTranslationMinAggregateOutputType | null
    _max: CategoryTranslationMaxAggregateOutputType | null
  }

  export type CategoryTranslationAvgAggregateOutputType = {
    id: number | null
    categoryId: number | null
  }

  export type CategoryTranslationSumAggregateOutputType = {
    id: number | null
    categoryId: number | null
  }

  export type CategoryTranslationMinAggregateOutputType = {
    id: number | null
    categoryId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type CategoryTranslationMaxAggregateOutputType = {
    id: number | null
    categoryId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type CategoryTranslationCountAggregateOutputType = {
    id: number
    categoryId: number
    languageId: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type CategoryTranslationAvgAggregateInputType = {
    id?: true
    categoryId?: true
  }

  export type CategoryTranslationSumAggregateInputType = {
    id?: true
    categoryId?: true
  }

  export type CategoryTranslationMinAggregateInputType = {
    id?: true
    categoryId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type CategoryTranslationMaxAggregateInputType = {
    id?: true
    categoryId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type CategoryTranslationCountAggregateInputType = {
    id?: true
    categoryId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type CategoryTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoryTranslation to aggregate.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoryTranslations
    **/
    _count?: true | CategoryTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoryTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryTranslationMaxAggregateInputType
  }

  export type GetCategoryTranslationAggregateType<T extends CategoryTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoryTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoryTranslation[P]>
      : GetScalarType<T[P], AggregateCategoryTranslation[P]>
  }




  export type CategoryTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithAggregationInput | CategoryTranslationOrderByWithAggregationInput[]
    by: CategoryTranslationScalarFieldEnum[] | CategoryTranslationScalarFieldEnum
    having?: CategoryTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryTranslationCountAggregateInputType | true
    _avg?: CategoryTranslationAvgAggregateInputType
    _sum?: CategoryTranslationSumAggregateInputType
    _min?: CategoryTranslationMinAggregateInputType
    _max?: CategoryTranslationMaxAggregateInputType
  }

  export type CategoryTranslationGroupByOutputType = {
    id: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: CategoryTranslationCountAggregateOutputType | null
    _avg: CategoryTranslationAvgAggregateOutputType | null
    _sum: CategoryTranslationSumAggregateOutputType | null
    _min: CategoryTranslationMinAggregateOutputType | null
    _max: CategoryTranslationMaxAggregateOutputType | null
  }

  type GetCategoryTranslationGroupByPayload<T extends CategoryTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryTranslationGroupByOutputType[P]>
        }
      >
    >


  export type CategoryTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectScalar = {
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type CategoryTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoryId" | "languageId" | "name" | "description" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["categoryTranslation"]>
  export type CategoryTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
  }
  export type CategoryTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
  }
  export type CategoryTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
  }

  export type $CategoryTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoryTranslation"
    objects: {
      Category: Prisma.$CategoryPayload<ExtArgs>
      Language: Prisma.$LanguagePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      categoryId: number
      languageId: string
      name: string
      description: string
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["categoryTranslation"]>
    composites: {}
  }

  type CategoryTranslationGetPayload<S extends boolean | null | undefined | CategoryTranslationDefaultArgs> = $Result.GetResult<Prisma.$CategoryTranslationPayload, S>

  type CategoryTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryTranslationCountAggregateInputType | true
    }

  export interface CategoryTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoryTranslation'], meta: { name: 'CategoryTranslation' } }
    /**
     * Find zero or one CategoryTranslation that matches the filter.
     * @param {CategoryTranslationFindUniqueArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryTranslationFindUniqueArgs>(args: SelectSubset<T, CategoryTranslationFindUniqueArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CategoryTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryTranslationFindUniqueOrThrowArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoryTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindFirstArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryTranslationFindFirstArgs>(args?: SelectSubset<T, CategoryTranslationFindFirstArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoryTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindFirstOrThrowArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CategoryTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoryTranslations
     * const categoryTranslations = await prisma.categoryTranslation.findMany()
     * 
     * // Get first 10 CategoryTranslations
     * const categoryTranslations = await prisma.categoryTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryTranslationFindManyArgs>(args?: SelectSubset<T, CategoryTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CategoryTranslation.
     * @param {CategoryTranslationCreateArgs} args - Arguments to create a CategoryTranslation.
     * @example
     * // Create one CategoryTranslation
     * const CategoryTranslation = await prisma.categoryTranslation.create({
     *   data: {
     *     // ... data to create a CategoryTranslation
     *   }
     * })
     * 
     */
    create<T extends CategoryTranslationCreateArgs>(args: SelectSubset<T, CategoryTranslationCreateArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CategoryTranslations.
     * @param {CategoryTranslationCreateManyArgs} args - Arguments to create many CategoryTranslations.
     * @example
     * // Create many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryTranslationCreateManyArgs>(args?: SelectSubset<T, CategoryTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoryTranslations and returns the data saved in the database.
     * @param {CategoryTranslationCreateManyAndReturnArgs} args - Arguments to create many CategoryTranslations.
     * @example
     * // Create many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoryTranslations and only return the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CategoryTranslation.
     * @param {CategoryTranslationDeleteArgs} args - Arguments to delete one CategoryTranslation.
     * @example
     * // Delete one CategoryTranslation
     * const CategoryTranslation = await prisma.categoryTranslation.delete({
     *   where: {
     *     // ... filter to delete one CategoryTranslation
     *   }
     * })
     * 
     */
    delete<T extends CategoryTranslationDeleteArgs>(args: SelectSubset<T, CategoryTranslationDeleteArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CategoryTranslation.
     * @param {CategoryTranslationUpdateArgs} args - Arguments to update one CategoryTranslation.
     * @example
     * // Update one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryTranslationUpdateArgs>(args: SelectSubset<T, CategoryTranslationUpdateArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CategoryTranslations.
     * @param {CategoryTranslationDeleteManyArgs} args - Arguments to filter CategoryTranslations to delete.
     * @example
     * // Delete a few CategoryTranslations
     * const { count } = await prisma.categoryTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryTranslationDeleteManyArgs>(args?: SelectSubset<T, CategoryTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryTranslationUpdateManyArgs>(args: SelectSubset<T, CategoryTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoryTranslations and returns the data updated in the database.
     * @param {CategoryTranslationUpdateManyAndReturnArgs} args - Arguments to update many CategoryTranslations.
     * @example
     * // Update many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CategoryTranslations and only return the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CategoryTranslation.
     * @param {CategoryTranslationUpsertArgs} args - Arguments to update or create a CategoryTranslation.
     * @example
     * // Update or create a CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.upsert({
     *   create: {
     *     // ... data to create a CategoryTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoryTranslation we want to update
     *   }
     * })
     */
    upsert<T extends CategoryTranslationUpsertArgs>(args: SelectSubset<T, CategoryTranslationUpsertArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationCountArgs} args - Arguments to filter CategoryTranslations to count.
     * @example
     * // Count the number of CategoryTranslations
     * const count = await prisma.categoryTranslation.count({
     *   where: {
     *     // ... the filter for the CategoryTranslations we want to count
     *   }
     * })
    **/
    count<T extends CategoryTranslationCountArgs>(
      args?: Subset<T, CategoryTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryTranslationAggregateArgs>(args: Subset<T, CategoryTranslationAggregateArgs>): Prisma.PrismaPromise<GetCategoryTranslationAggregateType<T>>

    /**
     * Group by CategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryTranslationGroupByArgs['orderBy'] }
        : { orderBy?: CategoryTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoryTranslation model
   */
  readonly fields: CategoryTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoryTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CategoryTranslation model
   */
  interface CategoryTranslationFieldRefs {
    readonly id: FieldRef<"CategoryTranslation", 'Int'>
    readonly categoryId: FieldRef<"CategoryTranslation", 'Int'>
    readonly languageId: FieldRef<"CategoryTranslation", 'String'>
    readonly name: FieldRef<"CategoryTranslation", 'String'>
    readonly description: FieldRef<"CategoryTranslation", 'String'>
    readonly createdAt: FieldRef<"CategoryTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"CategoryTranslation", 'DateTime'>
    readonly deletedAt: FieldRef<"CategoryTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CategoryTranslation findUnique
   */
  export type CategoryTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation findUniqueOrThrow
   */
  export type CategoryTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation findFirst
   */
  export type CategoryTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoryTranslations.
     */
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation findFirstOrThrow
   */
  export type CategoryTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoryTranslations.
     */
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation findMany
   */
  export type CategoryTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslations to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation create
   */
  export type CategoryTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoryTranslation.
     */
    data: XOR<CategoryTranslationCreateInput, CategoryTranslationUncheckedCreateInput>
  }

  /**
   * CategoryTranslation createMany
   */
  export type CategoryTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoryTranslations.
     */
    data: CategoryTranslationCreateManyInput | CategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoryTranslation createManyAndReturn
   */
  export type CategoryTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many CategoryTranslations.
     */
    data: CategoryTranslationCreateManyInput | CategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoryTranslation update
   */
  export type CategoryTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoryTranslation.
     */
    data: XOR<CategoryTranslationUpdateInput, CategoryTranslationUncheckedUpdateInput>
    /**
     * Choose, which CategoryTranslation to update.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation updateMany
   */
  export type CategoryTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoryTranslations.
     */
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which CategoryTranslations to update
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to update.
     */
    limit?: number
  }

  /**
   * CategoryTranslation updateManyAndReturn
   */
  export type CategoryTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to update CategoryTranslations.
     */
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which CategoryTranslations to update
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoryTranslation upsert
   */
  export type CategoryTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoryTranslation to update in case it exists.
     */
    where: CategoryTranslationWhereUniqueInput
    /**
     * In case the CategoryTranslation found by the `where` argument doesn't exist, create a new CategoryTranslation with this data.
     */
    create: XOR<CategoryTranslationCreateInput, CategoryTranslationUncheckedCreateInput>
    /**
     * In case the CategoryTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryTranslationUpdateInput, CategoryTranslationUncheckedUpdateInput>
  }

  /**
   * CategoryTranslation delete
   */
  export type CategoryTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter which CategoryTranslation to delete.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation deleteMany
   */
  export type CategoryTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoryTranslations to delete
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to delete.
     */
    limit?: number
  }

  /**
   * CategoryTranslation without action
   */
  export type CategoryTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
  }


  /**
   * Model ChatMessage
   */

  export type AggregateChatMessage = {
    _count: ChatMessageCountAggregateOutputType | null
    _avg: ChatMessageAvgAggregateOutputType | null
    _sum: ChatMessageSumAggregateOutputType | null
    _min: ChatMessageMinAggregateOutputType | null
    _max: ChatMessageMaxAggregateOutputType | null
  }

  export type ChatMessageAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
  }

  export type ChatMessageSumAggregateOutputType = {
    id: number | null
    customerId: number | null
  }

  export type ChatMessageMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    sender: string | null
    message: string | null
    sentAt: Date | null
    isRead: boolean | null
  }

  export type ChatMessageMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    sender: string | null
    message: string | null
    sentAt: Date | null
    isRead: boolean | null
  }

  export type ChatMessageCountAggregateOutputType = {
    id: number
    customerId: number
    sender: number
    message: number
    sentAt: number
    isRead: number
    _all: number
  }


  export type ChatMessageAvgAggregateInputType = {
    id?: true
    customerId?: true
  }

  export type ChatMessageSumAggregateInputType = {
    id?: true
    customerId?: true
  }

  export type ChatMessageMinAggregateInputType = {
    id?: true
    customerId?: true
    sender?: true
    message?: true
    sentAt?: true
    isRead?: true
  }

  export type ChatMessageMaxAggregateInputType = {
    id?: true
    customerId?: true
    sender?: true
    message?: true
    sentAt?: true
    isRead?: true
  }

  export type ChatMessageCountAggregateInputType = {
    id?: true
    customerId?: true
    sender?: true
    message?: true
    sentAt?: true
    isRead?: true
    _all?: true
  }

  export type ChatMessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatMessage to aggregate.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChatMessages
    **/
    _count?: true | ChatMessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatMessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatMessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatMessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatMessageMaxAggregateInputType
  }

  export type GetChatMessageAggregateType<T extends ChatMessageAggregateArgs> = {
        [P in keyof T & keyof AggregateChatMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChatMessage[P]>
      : GetScalarType<T[P], AggregateChatMessage[P]>
  }




  export type ChatMessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMessageWhereInput
    orderBy?: ChatMessageOrderByWithAggregationInput | ChatMessageOrderByWithAggregationInput[]
    by: ChatMessageScalarFieldEnum[] | ChatMessageScalarFieldEnum
    having?: ChatMessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatMessageCountAggregateInputType | true
    _avg?: ChatMessageAvgAggregateInputType
    _sum?: ChatMessageSumAggregateInputType
    _min?: ChatMessageMinAggregateInputType
    _max?: ChatMessageMaxAggregateInputType
  }

  export type ChatMessageGroupByOutputType = {
    id: number
    customerId: number
    sender: string
    message: string
    sentAt: Date
    isRead: boolean
    _count: ChatMessageCountAggregateOutputType | null
    _avg: ChatMessageAvgAggregateOutputType | null
    _sum: ChatMessageSumAggregateOutputType | null
    _min: ChatMessageMinAggregateOutputType | null
    _max: ChatMessageMaxAggregateOutputType | null
  }

  type GetChatMessageGroupByPayload<T extends ChatMessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatMessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatMessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatMessageGroupByOutputType[P]>
            : GetScalarType<T[P], ChatMessageGroupByOutputType[P]>
        }
      >
    >


  export type ChatMessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    sender?: boolean
    message?: boolean
    sentAt?: boolean
    isRead?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatMessage"]>

  export type ChatMessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    sender?: boolean
    message?: boolean
    sentAt?: boolean
    isRead?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatMessage"]>

  export type ChatMessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    sender?: boolean
    message?: boolean
    sentAt?: boolean
    isRead?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatMessage"]>

  export type ChatMessageSelectScalar = {
    id?: boolean
    customerId?: boolean
    sender?: boolean
    message?: boolean
    sentAt?: boolean
    isRead?: boolean
  }

  export type ChatMessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "sender" | "message" | "sentAt" | "isRead", ExtArgs["result"]["chatMessage"]>
  export type ChatMessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }
  export type ChatMessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }
  export type ChatMessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }

  export type $ChatMessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChatMessage"
    objects: {
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      sender: string
      message: string
      sentAt: Date
      isRead: boolean
    }, ExtArgs["result"]["chatMessage"]>
    composites: {}
  }

  type ChatMessageGetPayload<S extends boolean | null | undefined | ChatMessageDefaultArgs> = $Result.GetResult<Prisma.$ChatMessagePayload, S>

  type ChatMessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChatMessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChatMessageCountAggregateInputType | true
    }

  export interface ChatMessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChatMessage'], meta: { name: 'ChatMessage' } }
    /**
     * Find zero or one ChatMessage that matches the filter.
     * @param {ChatMessageFindUniqueArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatMessageFindUniqueArgs>(args: SelectSubset<T, ChatMessageFindUniqueArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChatMessage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChatMessageFindUniqueOrThrowArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatMessageFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatMessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatMessage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageFindFirstArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatMessageFindFirstArgs>(args?: SelectSubset<T, ChatMessageFindFirstArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatMessage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageFindFirstOrThrowArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatMessageFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatMessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChatMessages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChatMessages
     * const chatMessages = await prisma.chatMessage.findMany()
     * 
     * // Get first 10 ChatMessages
     * const chatMessages = await prisma.chatMessage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatMessageWithIdOnly = await prisma.chatMessage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChatMessageFindManyArgs>(args?: SelectSubset<T, ChatMessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChatMessage.
     * @param {ChatMessageCreateArgs} args - Arguments to create a ChatMessage.
     * @example
     * // Create one ChatMessage
     * const ChatMessage = await prisma.chatMessage.create({
     *   data: {
     *     // ... data to create a ChatMessage
     *   }
     * })
     * 
     */
    create<T extends ChatMessageCreateArgs>(args: SelectSubset<T, ChatMessageCreateArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChatMessages.
     * @param {ChatMessageCreateManyArgs} args - Arguments to create many ChatMessages.
     * @example
     * // Create many ChatMessages
     * const chatMessage = await prisma.chatMessage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatMessageCreateManyArgs>(args?: SelectSubset<T, ChatMessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChatMessages and returns the data saved in the database.
     * @param {ChatMessageCreateManyAndReturnArgs} args - Arguments to create many ChatMessages.
     * @example
     * // Create many ChatMessages
     * const chatMessage = await prisma.chatMessage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChatMessages and only return the `id`
     * const chatMessageWithIdOnly = await prisma.chatMessage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChatMessageCreateManyAndReturnArgs>(args?: SelectSubset<T, ChatMessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ChatMessage.
     * @param {ChatMessageDeleteArgs} args - Arguments to delete one ChatMessage.
     * @example
     * // Delete one ChatMessage
     * const ChatMessage = await prisma.chatMessage.delete({
     *   where: {
     *     // ... filter to delete one ChatMessage
     *   }
     * })
     * 
     */
    delete<T extends ChatMessageDeleteArgs>(args: SelectSubset<T, ChatMessageDeleteArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChatMessage.
     * @param {ChatMessageUpdateArgs} args - Arguments to update one ChatMessage.
     * @example
     * // Update one ChatMessage
     * const chatMessage = await prisma.chatMessage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatMessageUpdateArgs>(args: SelectSubset<T, ChatMessageUpdateArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChatMessages.
     * @param {ChatMessageDeleteManyArgs} args - Arguments to filter ChatMessages to delete.
     * @example
     * // Delete a few ChatMessages
     * const { count } = await prisma.chatMessage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatMessageDeleteManyArgs>(args?: SelectSubset<T, ChatMessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChatMessages
     * const chatMessage = await prisma.chatMessage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatMessageUpdateManyArgs>(args: SelectSubset<T, ChatMessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatMessages and returns the data updated in the database.
     * @param {ChatMessageUpdateManyAndReturnArgs} args - Arguments to update many ChatMessages.
     * @example
     * // Update many ChatMessages
     * const chatMessage = await prisma.chatMessage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ChatMessages and only return the `id`
     * const chatMessageWithIdOnly = await prisma.chatMessage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ChatMessageUpdateManyAndReturnArgs>(args: SelectSubset<T, ChatMessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ChatMessage.
     * @param {ChatMessageUpsertArgs} args - Arguments to update or create a ChatMessage.
     * @example
     * // Update or create a ChatMessage
     * const chatMessage = await prisma.chatMessage.upsert({
     *   create: {
     *     // ... data to create a ChatMessage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChatMessage we want to update
     *   }
     * })
     */
    upsert<T extends ChatMessageUpsertArgs>(args: SelectSubset<T, ChatMessageUpsertArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChatMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageCountArgs} args - Arguments to filter ChatMessages to count.
     * @example
     * // Count the number of ChatMessages
     * const count = await prisma.chatMessage.count({
     *   where: {
     *     // ... the filter for the ChatMessages we want to count
     *   }
     * })
    **/
    count<T extends ChatMessageCountArgs>(
      args?: Subset<T, ChatMessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatMessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChatMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatMessageAggregateArgs>(args: Subset<T, ChatMessageAggregateArgs>): Prisma.PrismaPromise<GetChatMessageAggregateType<T>>

    /**
     * Group by ChatMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatMessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatMessageGroupByArgs['orderBy'] }
        : { orderBy?: ChatMessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatMessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChatMessage model
   */
  readonly fields: ChatMessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChatMessage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatMessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChatMessage model
   */
  interface ChatMessageFieldRefs {
    readonly id: FieldRef<"ChatMessage", 'Int'>
    readonly customerId: FieldRef<"ChatMessage", 'Int'>
    readonly sender: FieldRef<"ChatMessage", 'String'>
    readonly message: FieldRef<"ChatMessage", 'String'>
    readonly sentAt: FieldRef<"ChatMessage", 'DateTime'>
    readonly isRead: FieldRef<"ChatMessage", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * ChatMessage findUnique
   */
  export type ChatMessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage findUniqueOrThrow
   */
  export type ChatMessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage findFirst
   */
  export type ChatMessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatMessages.
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatMessages.
     */
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatMessage findFirstOrThrow
   */
  export type ChatMessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatMessages.
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatMessages.
     */
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatMessage findMany
   */
  export type ChatMessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessages to fetch.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChatMessages.
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatMessage create
   */
  export type ChatMessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * The data needed to create a ChatMessage.
     */
    data: XOR<ChatMessageCreateInput, ChatMessageUncheckedCreateInput>
  }

  /**
   * ChatMessage createMany
   */
  export type ChatMessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChatMessages.
     */
    data: ChatMessageCreateManyInput | ChatMessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChatMessage createManyAndReturn
   */
  export type ChatMessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * The data used to create many ChatMessages.
     */
    data: ChatMessageCreateManyInput | ChatMessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChatMessage update
   */
  export type ChatMessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * The data needed to update a ChatMessage.
     */
    data: XOR<ChatMessageUpdateInput, ChatMessageUncheckedUpdateInput>
    /**
     * Choose, which ChatMessage to update.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage updateMany
   */
  export type ChatMessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChatMessages.
     */
    data: XOR<ChatMessageUpdateManyMutationInput, ChatMessageUncheckedUpdateManyInput>
    /**
     * Filter which ChatMessages to update
     */
    where?: ChatMessageWhereInput
    /**
     * Limit how many ChatMessages to update.
     */
    limit?: number
  }

  /**
   * ChatMessage updateManyAndReturn
   */
  export type ChatMessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * The data used to update ChatMessages.
     */
    data: XOR<ChatMessageUpdateManyMutationInput, ChatMessageUncheckedUpdateManyInput>
    /**
     * Filter which ChatMessages to update
     */
    where?: ChatMessageWhereInput
    /**
     * Limit how many ChatMessages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChatMessage upsert
   */
  export type ChatMessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * The filter to search for the ChatMessage to update in case it exists.
     */
    where: ChatMessageWhereUniqueInput
    /**
     * In case the ChatMessage found by the `where` argument doesn't exist, create a new ChatMessage with this data.
     */
    create: XOR<ChatMessageCreateInput, ChatMessageUncheckedCreateInput>
    /**
     * In case the ChatMessage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatMessageUpdateInput, ChatMessageUncheckedUpdateInput>
  }

  /**
   * ChatMessage delete
   */
  export type ChatMessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter which ChatMessage to delete.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage deleteMany
   */
  export type ChatMessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatMessages to delete
     */
    where?: ChatMessageWhereInput
    /**
     * Limit how many ChatMessages to delete.
     */
    limit?: number
  }

  /**
   * ChatMessage without action
   */
  export type ChatMessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
  }


  /**
   * Model CustomerProfile
   */

  export type AggregateCustomerProfile = {
    _count: CustomerProfileCountAggregateOutputType | null
    _avg: CustomerProfileAvgAggregateOutputType | null
    _sum: CustomerProfileSumAggregateOutputType | null
    _min: CustomerProfileMinAggregateOutputType | null
    _max: CustomerProfileMaxAggregateOutputType | null
  }

  export type CustomerProfileAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type CustomerProfileSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type CustomerProfileMinAggregateOutputType = {
    id: number | null
    userId: number | null
    address: string | null
    dateOfBirth: Date | null
    gender: $Enums.Gender | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerProfileMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    address: string | null
    dateOfBirth: Date | null
    gender: $Enums.Gender | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerProfileCountAggregateOutputType = {
    id: number
    userId: number
    address: number
    dateOfBirth: number
    gender: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomerProfileAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type CustomerProfileSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type CustomerProfileMinAggregateInputType = {
    id?: true
    userId?: true
    address?: true
    dateOfBirth?: true
    gender?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerProfileMaxAggregateInputType = {
    id?: true
    userId?: true
    address?: true
    dateOfBirth?: true
    gender?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerProfileCountAggregateInputType = {
    id?: true
    userId?: true
    address?: true
    dateOfBirth?: true
    gender?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomerProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerProfile to aggregate.
     */
    where?: CustomerProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerProfiles to fetch.
     */
    orderBy?: CustomerProfileOrderByWithRelationInput | CustomerProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomerProfiles
    **/
    _count?: true | CustomerProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerProfileMaxAggregateInputType
  }

  export type GetCustomerProfileAggregateType<T extends CustomerProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomerProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomerProfile[P]>
      : GetScalarType<T[P], AggregateCustomerProfile[P]>
  }




  export type CustomerProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerProfileWhereInput
    orderBy?: CustomerProfileOrderByWithAggregationInput | CustomerProfileOrderByWithAggregationInput[]
    by: CustomerProfileScalarFieldEnum[] | CustomerProfileScalarFieldEnum
    having?: CustomerProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerProfileCountAggregateInputType | true
    _avg?: CustomerProfileAvgAggregateInputType
    _sum?: CustomerProfileSumAggregateInputType
    _min?: CustomerProfileMinAggregateInputType
    _max?: CustomerProfileMaxAggregateInputType
  }

  export type CustomerProfileGroupByOutputType = {
    id: number
    userId: number
    address: string | null
    dateOfBirth: Date | null
    gender: $Enums.Gender | null
    createdAt: Date
    updatedAt: Date
    _count: CustomerProfileCountAggregateOutputType | null
    _avg: CustomerProfileAvgAggregateOutputType | null
    _sum: CustomerProfileSumAggregateOutputType | null
    _min: CustomerProfileMinAggregateOutputType | null
    _max: CustomerProfileMaxAggregateOutputType | null
  }

  type GetCustomerProfileGroupByPayload<T extends CustomerProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerProfileGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerProfileGroupByOutputType[P]>
        }
      >
    >


  export type CustomerProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    address?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Booking?: boolean | CustomerProfile$BookingArgs<ExtArgs>
    ChatMessage?: boolean | CustomerProfile$ChatMessageArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    PackageRecommendation?: boolean | CustomerProfile$PackageRecommendationArgs<ExtArgs>
    RecurringBooking?: boolean | CustomerProfile$RecurringBookingArgs<ExtArgs>
    Review?: boolean | CustomerProfile$ReviewArgs<ExtArgs>
    RewardPoint?: boolean | CustomerProfile$RewardPointArgs<ExtArgs>
    ServiceRequest?: boolean | CustomerProfile$ServiceRequestArgs<ExtArgs>
    _count?: boolean | CustomerProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerProfile"]>

  export type CustomerProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    address?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerProfile"]>

  export type CustomerProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    address?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerProfile"]>

  export type CustomerProfileSelectScalar = {
    id?: boolean
    userId?: boolean
    address?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomerProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "address" | "dateOfBirth" | "gender" | "createdAt" | "updatedAt", ExtArgs["result"]["customerProfile"]>
  export type CustomerProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | CustomerProfile$BookingArgs<ExtArgs>
    ChatMessage?: boolean | CustomerProfile$ChatMessageArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    PackageRecommendation?: boolean | CustomerProfile$PackageRecommendationArgs<ExtArgs>
    RecurringBooking?: boolean | CustomerProfile$RecurringBookingArgs<ExtArgs>
    Review?: boolean | CustomerProfile$ReviewArgs<ExtArgs>
    RewardPoint?: boolean | CustomerProfile$RewardPointArgs<ExtArgs>
    ServiceRequest?: boolean | CustomerProfile$ServiceRequestArgs<ExtArgs>
    _count?: boolean | CustomerProfileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomerProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CustomerProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CustomerProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomerProfile"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs>[]
      ChatMessage: Prisma.$ChatMessagePayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>
      PackageRecommendation: Prisma.$PackageRecommendationPayload<ExtArgs>[]
      RecurringBooking: Prisma.$RecurringBookingPayload<ExtArgs>[]
      Review: Prisma.$ReviewPayload<ExtArgs>[]
      RewardPoint: Prisma.$RewardPointPayload<ExtArgs>[]
      ServiceRequest: Prisma.$ServiceRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      address: string | null
      dateOfBirth: Date | null
      gender: $Enums.Gender | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customerProfile"]>
    composites: {}
  }

  type CustomerProfileGetPayload<S extends boolean | null | undefined | CustomerProfileDefaultArgs> = $Result.GetResult<Prisma.$CustomerProfilePayload, S>

  type CustomerProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerProfileCountAggregateInputType | true
    }

  export interface CustomerProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomerProfile'], meta: { name: 'CustomerProfile' } }
    /**
     * Find zero or one CustomerProfile that matches the filter.
     * @param {CustomerProfileFindUniqueArgs} args - Arguments to find a CustomerProfile
     * @example
     * // Get one CustomerProfile
     * const customerProfile = await prisma.customerProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerProfileFindUniqueArgs>(args: SelectSubset<T, CustomerProfileFindUniqueArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CustomerProfile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerProfileFindUniqueOrThrowArgs} args - Arguments to find a CustomerProfile
     * @example
     * // Get one CustomerProfile
     * const customerProfile = await prisma.customerProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomerProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileFindFirstArgs} args - Arguments to find a CustomerProfile
     * @example
     * // Get one CustomerProfile
     * const customerProfile = await prisma.customerProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerProfileFindFirstArgs>(args?: SelectSubset<T, CustomerProfileFindFirstArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CustomerProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileFindFirstOrThrowArgs} args - Arguments to find a CustomerProfile
     * @example
     * // Get one CustomerProfile
     * const customerProfile = await prisma.customerProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CustomerProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomerProfiles
     * const customerProfiles = await prisma.customerProfile.findMany()
     * 
     * // Get first 10 CustomerProfiles
     * const customerProfiles = await prisma.customerProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerProfileWithIdOnly = await prisma.customerProfile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerProfileFindManyArgs>(args?: SelectSubset<T, CustomerProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CustomerProfile.
     * @param {CustomerProfileCreateArgs} args - Arguments to create a CustomerProfile.
     * @example
     * // Create one CustomerProfile
     * const CustomerProfile = await prisma.customerProfile.create({
     *   data: {
     *     // ... data to create a CustomerProfile
     *   }
     * })
     * 
     */
    create<T extends CustomerProfileCreateArgs>(args: SelectSubset<T, CustomerProfileCreateArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CustomerProfiles.
     * @param {CustomerProfileCreateManyArgs} args - Arguments to create many CustomerProfiles.
     * @example
     * // Create many CustomerProfiles
     * const customerProfile = await prisma.customerProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerProfileCreateManyArgs>(args?: SelectSubset<T, CustomerProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CustomerProfiles and returns the data saved in the database.
     * @param {CustomerProfileCreateManyAndReturnArgs} args - Arguments to create many CustomerProfiles.
     * @example
     * // Create many CustomerProfiles
     * const customerProfile = await prisma.customerProfile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CustomerProfiles and only return the `id`
     * const customerProfileWithIdOnly = await prisma.customerProfile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CustomerProfile.
     * @param {CustomerProfileDeleteArgs} args - Arguments to delete one CustomerProfile.
     * @example
     * // Delete one CustomerProfile
     * const CustomerProfile = await prisma.customerProfile.delete({
     *   where: {
     *     // ... filter to delete one CustomerProfile
     *   }
     * })
     * 
     */
    delete<T extends CustomerProfileDeleteArgs>(args: SelectSubset<T, CustomerProfileDeleteArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CustomerProfile.
     * @param {CustomerProfileUpdateArgs} args - Arguments to update one CustomerProfile.
     * @example
     * // Update one CustomerProfile
     * const customerProfile = await prisma.customerProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerProfileUpdateArgs>(args: SelectSubset<T, CustomerProfileUpdateArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CustomerProfiles.
     * @param {CustomerProfileDeleteManyArgs} args - Arguments to filter CustomerProfiles to delete.
     * @example
     * // Delete a few CustomerProfiles
     * const { count } = await prisma.customerProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerProfileDeleteManyArgs>(args?: SelectSubset<T, CustomerProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomerProfiles
     * const customerProfile = await prisma.customerProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerProfileUpdateManyArgs>(args: SelectSubset<T, CustomerProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerProfiles and returns the data updated in the database.
     * @param {CustomerProfileUpdateManyAndReturnArgs} args - Arguments to update many CustomerProfiles.
     * @example
     * // Update many CustomerProfiles
     * const customerProfile = await prisma.customerProfile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CustomerProfiles and only return the `id`
     * const customerProfileWithIdOnly = await prisma.customerProfile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomerProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomerProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CustomerProfile.
     * @param {CustomerProfileUpsertArgs} args - Arguments to update or create a CustomerProfile.
     * @example
     * // Update or create a CustomerProfile
     * const customerProfile = await prisma.customerProfile.upsert({
     *   create: {
     *     // ... data to create a CustomerProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomerProfile we want to update
     *   }
     * })
     */
    upsert<T extends CustomerProfileUpsertArgs>(args: SelectSubset<T, CustomerProfileUpsertArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CustomerProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileCountArgs} args - Arguments to filter CustomerProfiles to count.
     * @example
     * // Count the number of CustomerProfiles
     * const count = await prisma.customerProfile.count({
     *   where: {
     *     // ... the filter for the CustomerProfiles we want to count
     *   }
     * })
    **/
    count<T extends CustomerProfileCountArgs>(
      args?: Subset<T, CustomerProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomerProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerProfileAggregateArgs>(args: Subset<T, CustomerProfileAggregateArgs>): Prisma.PrismaPromise<GetCustomerProfileAggregateType<T>>

    /**
     * Group by CustomerProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerProfileGroupByArgs['orderBy'] }
        : { orderBy?: CustomerProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomerProfile model
   */
  readonly fields: CustomerProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomerProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends CustomerProfile$BookingArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$BookingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ChatMessage<T extends CustomerProfile$ChatMessageArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$ChatMessageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    PackageRecommendation<T extends CustomerProfile$PackageRecommendationArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$PackageRecommendationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RecurringBooking<T extends CustomerProfile$RecurringBookingArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$RecurringBookingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Review<T extends CustomerProfile$ReviewArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$ReviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RewardPoint<T extends CustomerProfile$RewardPointArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$RewardPointArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceRequest<T extends CustomerProfile$ServiceRequestArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfile$ServiceRequestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomerProfile model
   */
  interface CustomerProfileFieldRefs {
    readonly id: FieldRef<"CustomerProfile", 'Int'>
    readonly userId: FieldRef<"CustomerProfile", 'Int'>
    readonly address: FieldRef<"CustomerProfile", 'String'>
    readonly dateOfBirth: FieldRef<"CustomerProfile", 'DateTime'>
    readonly gender: FieldRef<"CustomerProfile", 'Gender'>
    readonly createdAt: FieldRef<"CustomerProfile", 'DateTime'>
    readonly updatedAt: FieldRef<"CustomerProfile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CustomerProfile findUnique
   */
  export type CustomerProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * Filter, which CustomerProfile to fetch.
     */
    where: CustomerProfileWhereUniqueInput
  }

  /**
   * CustomerProfile findUniqueOrThrow
   */
  export type CustomerProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * Filter, which CustomerProfile to fetch.
     */
    where: CustomerProfileWhereUniqueInput
  }

  /**
   * CustomerProfile findFirst
   */
  export type CustomerProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * Filter, which CustomerProfile to fetch.
     */
    where?: CustomerProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerProfiles to fetch.
     */
    orderBy?: CustomerProfileOrderByWithRelationInput | CustomerProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerProfiles.
     */
    cursor?: CustomerProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerProfiles.
     */
    distinct?: CustomerProfileScalarFieldEnum | CustomerProfileScalarFieldEnum[]
  }

  /**
   * CustomerProfile findFirstOrThrow
   */
  export type CustomerProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * Filter, which CustomerProfile to fetch.
     */
    where?: CustomerProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerProfiles to fetch.
     */
    orderBy?: CustomerProfileOrderByWithRelationInput | CustomerProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerProfiles.
     */
    cursor?: CustomerProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerProfiles.
     */
    distinct?: CustomerProfileScalarFieldEnum | CustomerProfileScalarFieldEnum[]
  }

  /**
   * CustomerProfile findMany
   */
  export type CustomerProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * Filter, which CustomerProfiles to fetch.
     */
    where?: CustomerProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerProfiles to fetch.
     */
    orderBy?: CustomerProfileOrderByWithRelationInput | CustomerProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomerProfiles.
     */
    cursor?: CustomerProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerProfiles.
     */
    skip?: number
    distinct?: CustomerProfileScalarFieldEnum | CustomerProfileScalarFieldEnum[]
  }

  /**
   * CustomerProfile create
   */
  export type CustomerProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomerProfile.
     */
    data: XOR<CustomerProfileCreateInput, CustomerProfileUncheckedCreateInput>
  }

  /**
   * CustomerProfile createMany
   */
  export type CustomerProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomerProfiles.
     */
    data: CustomerProfileCreateManyInput | CustomerProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomerProfile createManyAndReturn
   */
  export type CustomerProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * The data used to create many CustomerProfiles.
     */
    data: CustomerProfileCreateManyInput | CustomerProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerProfile update
   */
  export type CustomerProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomerProfile.
     */
    data: XOR<CustomerProfileUpdateInput, CustomerProfileUncheckedUpdateInput>
    /**
     * Choose, which CustomerProfile to update.
     */
    where: CustomerProfileWhereUniqueInput
  }

  /**
   * CustomerProfile updateMany
   */
  export type CustomerProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomerProfiles.
     */
    data: XOR<CustomerProfileUpdateManyMutationInput, CustomerProfileUncheckedUpdateManyInput>
    /**
     * Filter which CustomerProfiles to update
     */
    where?: CustomerProfileWhereInput
    /**
     * Limit how many CustomerProfiles to update.
     */
    limit?: number
  }

  /**
   * CustomerProfile updateManyAndReturn
   */
  export type CustomerProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * The data used to update CustomerProfiles.
     */
    data: XOR<CustomerProfileUpdateManyMutationInput, CustomerProfileUncheckedUpdateManyInput>
    /**
     * Filter which CustomerProfiles to update
     */
    where?: CustomerProfileWhereInput
    /**
     * Limit how many CustomerProfiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CustomerProfile upsert
   */
  export type CustomerProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomerProfile to update in case it exists.
     */
    where: CustomerProfileWhereUniqueInput
    /**
     * In case the CustomerProfile found by the `where` argument doesn't exist, create a new CustomerProfile with this data.
     */
    create: XOR<CustomerProfileCreateInput, CustomerProfileUncheckedCreateInput>
    /**
     * In case the CustomerProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerProfileUpdateInput, CustomerProfileUncheckedUpdateInput>
  }

  /**
   * CustomerProfile delete
   */
  export type CustomerProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    /**
     * Filter which CustomerProfile to delete.
     */
    where: CustomerProfileWhereUniqueInput
  }

  /**
   * CustomerProfile deleteMany
   */
  export type CustomerProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerProfiles to delete
     */
    where?: CustomerProfileWhereInput
    /**
     * Limit how many CustomerProfiles to delete.
     */
    limit?: number
  }

  /**
   * CustomerProfile.Booking
   */
  export type CustomerProfile$BookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    where?: BookingWhereInput
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    cursor?: BookingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * CustomerProfile.ChatMessage
   */
  export type CustomerProfile$ChatMessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    where?: ChatMessageWhereInput
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    cursor?: ChatMessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * CustomerProfile.PackageRecommendation
   */
  export type CustomerProfile$PackageRecommendationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    where?: PackageRecommendationWhereInput
    orderBy?: PackageRecommendationOrderByWithRelationInput | PackageRecommendationOrderByWithRelationInput[]
    cursor?: PackageRecommendationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PackageRecommendationScalarFieldEnum | PackageRecommendationScalarFieldEnum[]
  }

  /**
   * CustomerProfile.RecurringBooking
   */
  export type CustomerProfile$RecurringBookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    where?: RecurringBookingWhereInput
    orderBy?: RecurringBookingOrderByWithRelationInput | RecurringBookingOrderByWithRelationInput[]
    cursor?: RecurringBookingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecurringBookingScalarFieldEnum | RecurringBookingScalarFieldEnum[]
  }

  /**
   * CustomerProfile.Review
   */
  export type CustomerProfile$ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * CustomerProfile.RewardPoint
   */
  export type CustomerProfile$RewardPointArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    where?: RewardPointWhereInput
    orderBy?: RewardPointOrderByWithRelationInput | RewardPointOrderByWithRelationInput[]
    cursor?: RewardPointWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RewardPointScalarFieldEnum | RewardPointScalarFieldEnum[]
  }

  /**
   * CustomerProfile.ServiceRequest
   */
  export type CustomerProfile$ServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    where?: ServiceRequestWhereInput
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    cursor?: ServiceRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceRequestScalarFieldEnum | ServiceRequestScalarFieldEnum[]
  }

  /**
   * CustomerProfile without action
   */
  export type CustomerProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
  }


  /**
   * Model Device
   */

  export type AggregateDevice = {
    _count: DeviceCountAggregateOutputType | null
    _avg: DeviceAvgAggregateOutputType | null
    _sum: DeviceSumAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  export type DeviceAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type DeviceSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type DeviceMinAggregateOutputType = {
    id: number | null
    userId: number | null
    userAgent: string | null
    ip: string | null
    lastActive: Date | null
    createdAt: Date | null
    isActive: boolean | null
  }

  export type DeviceMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    userAgent: string | null
    ip: string | null
    lastActive: Date | null
    createdAt: Date | null
    isActive: boolean | null
  }

  export type DeviceCountAggregateOutputType = {
    id: number
    userId: number
    userAgent: number
    ip: number
    lastActive: number
    createdAt: number
    isActive: number
    _all: number
  }


  export type DeviceAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type DeviceSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type DeviceMinAggregateInputType = {
    id?: true
    userId?: true
    userAgent?: true
    ip?: true
    lastActive?: true
    createdAt?: true
    isActive?: true
  }

  export type DeviceMaxAggregateInputType = {
    id?: true
    userId?: true
    userAgent?: true
    ip?: true
    lastActive?: true
    createdAt?: true
    isActive?: true
  }

  export type DeviceCountAggregateInputType = {
    id?: true
    userId?: true
    userAgent?: true
    ip?: true
    lastActive?: true
    createdAt?: true
    isActive?: true
    _all?: true
  }

  export type DeviceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Device to aggregate.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Devices
    **/
    _count?: true | DeviceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeviceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeviceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeviceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeviceMaxAggregateInputType
  }

  export type GetDeviceAggregateType<T extends DeviceAggregateArgs> = {
        [P in keyof T & keyof AggregateDevice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevice[P]>
      : GetScalarType<T[P], AggregateDevice[P]>
  }




  export type DeviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceWhereInput
    orderBy?: DeviceOrderByWithAggregationInput | DeviceOrderByWithAggregationInput[]
    by: DeviceScalarFieldEnum[] | DeviceScalarFieldEnum
    having?: DeviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeviceCountAggregateInputType | true
    _avg?: DeviceAvgAggregateInputType
    _sum?: DeviceSumAggregateInputType
    _min?: DeviceMinAggregateInputType
    _max?: DeviceMaxAggregateInputType
  }

  export type DeviceGroupByOutputType = {
    id: number
    userId: number
    userAgent: string
    ip: string
    lastActive: Date
    createdAt: Date
    isActive: boolean
    _count: DeviceCountAggregateOutputType | null
    _avg: DeviceAvgAggregateOutputType | null
    _sum: DeviceSumAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  type GetDeviceGroupByPayload<T extends DeviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeviceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeviceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeviceGroupByOutputType[P]>
            : GetScalarType<T[P], DeviceGroupByOutputType[P]>
        }
      >
    >


  export type DeviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    RefreshToken?: boolean | Device$RefreshTokenArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectScalar = {
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
  }

  export type DeviceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "userAgent" | "ip" | "lastActive" | "createdAt" | "isActive", ExtArgs["result"]["device"]>
  export type DeviceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    RefreshToken?: boolean | Device$RefreshTokenArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DeviceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DeviceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DevicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Device"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      RefreshToken: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      userAgent: string
      ip: string
      lastActive: Date
      createdAt: Date
      isActive: boolean
    }, ExtArgs["result"]["device"]>
    composites: {}
  }

  type DeviceGetPayload<S extends boolean | null | undefined | DeviceDefaultArgs> = $Result.GetResult<Prisma.$DevicePayload, S>

  type DeviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeviceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeviceCountAggregateInputType | true
    }

  export interface DeviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Device'], meta: { name: 'Device' } }
    /**
     * Find zero or one Device that matches the filter.
     * @param {DeviceFindUniqueArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeviceFindUniqueArgs>(args: SelectSubset<T, DeviceFindUniqueArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Device that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeviceFindUniqueOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeviceFindUniqueOrThrowArgs>(args: SelectSubset<T, DeviceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Device that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindFirstArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeviceFindFirstArgs>(args?: SelectSubset<T, DeviceFindFirstArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Device that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindFirstOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeviceFindFirstOrThrowArgs>(args?: SelectSubset<T, DeviceFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Devices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Devices
     * const devices = await prisma.device.findMany()
     * 
     * // Get first 10 Devices
     * const devices = await prisma.device.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deviceWithIdOnly = await prisma.device.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeviceFindManyArgs>(args?: SelectSubset<T, DeviceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Device.
     * @param {DeviceCreateArgs} args - Arguments to create a Device.
     * @example
     * // Create one Device
     * const Device = await prisma.device.create({
     *   data: {
     *     // ... data to create a Device
     *   }
     * })
     * 
     */
    create<T extends DeviceCreateArgs>(args: SelectSubset<T, DeviceCreateArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Devices.
     * @param {DeviceCreateManyArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeviceCreateManyArgs>(args?: SelectSubset<T, DeviceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Devices and returns the data saved in the database.
     * @param {DeviceCreateManyAndReturnArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeviceCreateManyAndReturnArgs>(args?: SelectSubset<T, DeviceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Device.
     * @param {DeviceDeleteArgs} args - Arguments to delete one Device.
     * @example
     * // Delete one Device
     * const Device = await prisma.device.delete({
     *   where: {
     *     // ... filter to delete one Device
     *   }
     * })
     * 
     */
    delete<T extends DeviceDeleteArgs>(args: SelectSubset<T, DeviceDeleteArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Device.
     * @param {DeviceUpdateArgs} args - Arguments to update one Device.
     * @example
     * // Update one Device
     * const device = await prisma.device.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeviceUpdateArgs>(args: SelectSubset<T, DeviceUpdateArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Devices.
     * @param {DeviceDeleteManyArgs} args - Arguments to filter Devices to delete.
     * @example
     * // Delete a few Devices
     * const { count } = await prisma.device.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeviceDeleteManyArgs>(args?: SelectSubset<T, DeviceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeviceUpdateManyArgs>(args: SelectSubset<T, DeviceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices and returns the data updated in the database.
     * @param {DeviceUpdateManyAndReturnArgs} args - Arguments to update many Devices.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DeviceUpdateManyAndReturnArgs>(args: SelectSubset<T, DeviceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Device.
     * @param {DeviceUpsertArgs} args - Arguments to update or create a Device.
     * @example
     * // Update or create a Device
     * const device = await prisma.device.upsert({
     *   create: {
     *     // ... data to create a Device
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Device we want to update
     *   }
     * })
     */
    upsert<T extends DeviceUpsertArgs>(args: SelectSubset<T, DeviceUpsertArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceCountArgs} args - Arguments to filter Devices to count.
     * @example
     * // Count the number of Devices
     * const count = await prisma.device.count({
     *   where: {
     *     // ... the filter for the Devices we want to count
     *   }
     * })
    **/
    count<T extends DeviceCountArgs>(
      args?: Subset<T, DeviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeviceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeviceAggregateArgs>(args: Subset<T, DeviceAggregateArgs>): Prisma.PrismaPromise<GetDeviceAggregateType<T>>

    /**
     * Group by Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeviceGroupByArgs['orderBy'] }
        : { orderBy?: DeviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeviceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Device model
   */
  readonly fields: DeviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Device.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    RefreshToken<T extends Device$RefreshTokenArgs<ExtArgs> = {}>(args?: Subset<T, Device$RefreshTokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Device model
   */
  interface DeviceFieldRefs {
    readonly id: FieldRef<"Device", 'Int'>
    readonly userId: FieldRef<"Device", 'Int'>
    readonly userAgent: FieldRef<"Device", 'String'>
    readonly ip: FieldRef<"Device", 'String'>
    readonly lastActive: FieldRef<"Device", 'DateTime'>
    readonly createdAt: FieldRef<"Device", 'DateTime'>
    readonly isActive: FieldRef<"Device", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Device findUnique
   */
  export type DeviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device findUniqueOrThrow
   */
  export type DeviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device findFirst
   */
  export type DeviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device findFirstOrThrow
   */
  export type DeviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device findMany
   */
  export type DeviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Devices to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device create
   */
  export type DeviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The data needed to create a Device.
     */
    data: XOR<DeviceCreateInput, DeviceUncheckedCreateInput>
  }

  /**
   * Device createMany
   */
  export type DeviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Devices.
     */
    data: DeviceCreateManyInput | DeviceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Device createManyAndReturn
   */
  export type DeviceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * The data used to create many Devices.
     */
    data: DeviceCreateManyInput | DeviceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Device update
   */
  export type DeviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The data needed to update a Device.
     */
    data: XOR<DeviceUpdateInput, DeviceUncheckedUpdateInput>
    /**
     * Choose, which Device to update.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device updateMany
   */
  export type DeviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Devices.
     */
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyInput>
    /**
     * Filter which Devices to update
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to update.
     */
    limit?: number
  }

  /**
   * Device updateManyAndReturn
   */
  export type DeviceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * The data used to update Devices.
     */
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyInput>
    /**
     * Filter which Devices to update
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Device upsert
   */
  export type DeviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The filter to search for the Device to update in case it exists.
     */
    where: DeviceWhereUniqueInput
    /**
     * In case the Device found by the `where` argument doesn't exist, create a new Device with this data.
     */
    create: XOR<DeviceCreateInput, DeviceUncheckedCreateInput>
    /**
     * In case the Device was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeviceUpdateInput, DeviceUncheckedUpdateInput>
  }

  /**
   * Device delete
   */
  export type DeviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter which Device to delete.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device deleteMany
   */
  export type DeviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devices to delete
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to delete.
     */
    limit?: number
  }

  /**
   * Device.RefreshToken
   */
  export type Device$RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * Device without action
   */
  export type DeviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
  }


  /**
   * Model Language
   */

  export type AggregateLanguage = {
    _count: LanguageCountAggregateOutputType | null
    _avg: LanguageAvgAggregateOutputType | null
    _sum: LanguageSumAggregateOutputType | null
    _min: LanguageMinAggregateOutputType | null
    _max: LanguageMaxAggregateOutputType | null
  }

  export type LanguageAvgAggregateOutputType = {
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type LanguageSumAggregateOutputType = {
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type LanguageMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LanguageMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LanguageCountAggregateOutputType = {
    id: number
    name: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type LanguageAvgAggregateInputType = {
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type LanguageSumAggregateInputType = {
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type LanguageMinAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LanguageMaxAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LanguageCountAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type LanguageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Language to aggregate.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Languages
    **/
    _count?: true | LanguageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LanguageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LanguageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LanguageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LanguageMaxAggregateInputType
  }

  export type GetLanguageAggregateType<T extends LanguageAggregateArgs> = {
        [P in keyof T & keyof AggregateLanguage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLanguage[P]>
      : GetScalarType<T[P], AggregateLanguage[P]>
  }




  export type LanguageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithAggregationInput | LanguageOrderByWithAggregationInput[]
    by: LanguageScalarFieldEnum[] | LanguageScalarFieldEnum
    having?: LanguageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LanguageCountAggregateInputType | true
    _avg?: LanguageAvgAggregateInputType
    _sum?: LanguageSumAggregateInputType
    _min?: LanguageMinAggregateInputType
    _max?: LanguageMaxAggregateInputType
  }

  export type LanguageGroupByOutputType = {
    id: string
    name: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: LanguageCountAggregateOutputType | null
    _avg: LanguageAvgAggregateOutputType | null
    _sum: LanguageSumAggregateOutputType | null
    _min: LanguageMinAggregateOutputType | null
    _max: LanguageMaxAggregateOutputType | null
  }

  type GetLanguageGroupByPayload<T extends LanguageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LanguageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LanguageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LanguageGroupByOutputType[P]>
            : GetScalarType<T[P], LanguageGroupByOutputType[P]>
        }
      >
    >


  export type LanguageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CategoryTranslation?: boolean | Language$CategoryTranslationArgs<ExtArgs>
    User_Language_createdByIdToUser?: boolean | Language$User_Language_createdByIdToUserArgs<ExtArgs>
    User_Language_deletedByIdToUser?: boolean | Language$User_Language_deletedByIdToUserArgs<ExtArgs>
    User_Language_updatedByIdToUser?: boolean | Language$User_Language_updatedByIdToUserArgs<ExtArgs>
    ServiceProviderTranslation?: boolean | Language$ServiceProviderTranslationArgs<ExtArgs>
    ServiceTranslation?: boolean | Language$ServiceTranslationArgs<ExtArgs>
    _count?: boolean | LanguageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Language_createdByIdToUser?: boolean | Language$User_Language_createdByIdToUserArgs<ExtArgs>
    User_Language_deletedByIdToUser?: boolean | Language$User_Language_deletedByIdToUserArgs<ExtArgs>
    User_Language_updatedByIdToUser?: boolean | Language$User_Language_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Language_createdByIdToUser?: boolean | Language$User_Language_createdByIdToUserArgs<ExtArgs>
    User_Language_deletedByIdToUser?: boolean | Language$User_Language_deletedByIdToUserArgs<ExtArgs>
    User_Language_updatedByIdToUser?: boolean | Language$User_Language_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectScalar = {
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type LanguageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["language"]>
  export type LanguageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CategoryTranslation?: boolean | Language$CategoryTranslationArgs<ExtArgs>
    User_Language_createdByIdToUser?: boolean | Language$User_Language_createdByIdToUserArgs<ExtArgs>
    User_Language_deletedByIdToUser?: boolean | Language$User_Language_deletedByIdToUserArgs<ExtArgs>
    User_Language_updatedByIdToUser?: boolean | Language$User_Language_updatedByIdToUserArgs<ExtArgs>
    ServiceProviderTranslation?: boolean | Language$ServiceProviderTranslationArgs<ExtArgs>
    ServiceTranslation?: boolean | Language$ServiceTranslationArgs<ExtArgs>
    _count?: boolean | LanguageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LanguageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Language_createdByIdToUser?: boolean | Language$User_Language_createdByIdToUserArgs<ExtArgs>
    User_Language_deletedByIdToUser?: boolean | Language$User_Language_deletedByIdToUserArgs<ExtArgs>
    User_Language_updatedByIdToUser?: boolean | Language$User_Language_updatedByIdToUserArgs<ExtArgs>
  }
  export type LanguageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Language_createdByIdToUser?: boolean | Language$User_Language_createdByIdToUserArgs<ExtArgs>
    User_Language_deletedByIdToUser?: boolean | Language$User_Language_deletedByIdToUserArgs<ExtArgs>
    User_Language_updatedByIdToUser?: boolean | Language$User_Language_updatedByIdToUserArgs<ExtArgs>
  }

  export type $LanguagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Language"
    objects: {
      CategoryTranslation: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      User_Language_createdByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Language_deletedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Language_updatedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      ServiceProviderTranslation: Prisma.$ServiceProviderTranslationPayload<ExtArgs>[]
      ServiceTranslation: Prisma.$ServiceTranslationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["language"]>
    composites: {}
  }

  type LanguageGetPayload<S extends boolean | null | undefined | LanguageDefaultArgs> = $Result.GetResult<Prisma.$LanguagePayload, S>

  type LanguageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LanguageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LanguageCountAggregateInputType | true
    }

  export interface LanguageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Language'], meta: { name: 'Language' } }
    /**
     * Find zero or one Language that matches the filter.
     * @param {LanguageFindUniqueArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LanguageFindUniqueArgs>(args: SelectSubset<T, LanguageFindUniqueArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Language that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LanguageFindUniqueOrThrowArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LanguageFindUniqueOrThrowArgs>(args: SelectSubset<T, LanguageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Language that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindFirstArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LanguageFindFirstArgs>(args?: SelectSubset<T, LanguageFindFirstArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Language that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindFirstOrThrowArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LanguageFindFirstOrThrowArgs>(args?: SelectSubset<T, LanguageFindFirstOrThrowArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Languages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Languages
     * const languages = await prisma.language.findMany()
     * 
     * // Get first 10 Languages
     * const languages = await prisma.language.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const languageWithIdOnly = await prisma.language.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LanguageFindManyArgs>(args?: SelectSubset<T, LanguageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Language.
     * @param {LanguageCreateArgs} args - Arguments to create a Language.
     * @example
     * // Create one Language
     * const Language = await prisma.language.create({
     *   data: {
     *     // ... data to create a Language
     *   }
     * })
     * 
     */
    create<T extends LanguageCreateArgs>(args: SelectSubset<T, LanguageCreateArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Languages.
     * @param {LanguageCreateManyArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const language = await prisma.language.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LanguageCreateManyArgs>(args?: SelectSubset<T, LanguageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Languages and returns the data saved in the database.
     * @param {LanguageCreateManyAndReturnArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const language = await prisma.language.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Languages and only return the `id`
     * const languageWithIdOnly = await prisma.language.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LanguageCreateManyAndReturnArgs>(args?: SelectSubset<T, LanguageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Language.
     * @param {LanguageDeleteArgs} args - Arguments to delete one Language.
     * @example
     * // Delete one Language
     * const Language = await prisma.language.delete({
     *   where: {
     *     // ... filter to delete one Language
     *   }
     * })
     * 
     */
    delete<T extends LanguageDeleteArgs>(args: SelectSubset<T, LanguageDeleteArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Language.
     * @param {LanguageUpdateArgs} args - Arguments to update one Language.
     * @example
     * // Update one Language
     * const language = await prisma.language.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LanguageUpdateArgs>(args: SelectSubset<T, LanguageUpdateArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Languages.
     * @param {LanguageDeleteManyArgs} args - Arguments to filter Languages to delete.
     * @example
     * // Delete a few Languages
     * const { count } = await prisma.language.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LanguageDeleteManyArgs>(args?: SelectSubset<T, LanguageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Languages
     * const language = await prisma.language.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LanguageUpdateManyArgs>(args: SelectSubset<T, LanguageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages and returns the data updated in the database.
     * @param {LanguageUpdateManyAndReturnArgs} args - Arguments to update many Languages.
     * @example
     * // Update many Languages
     * const language = await prisma.language.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Languages and only return the `id`
     * const languageWithIdOnly = await prisma.language.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LanguageUpdateManyAndReturnArgs>(args: SelectSubset<T, LanguageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Language.
     * @param {LanguageUpsertArgs} args - Arguments to update or create a Language.
     * @example
     * // Update or create a Language
     * const language = await prisma.language.upsert({
     *   create: {
     *     // ... data to create a Language
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Language we want to update
     *   }
     * })
     */
    upsert<T extends LanguageUpsertArgs>(args: SelectSubset<T, LanguageUpsertArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageCountArgs} args - Arguments to filter Languages to count.
     * @example
     * // Count the number of Languages
     * const count = await prisma.language.count({
     *   where: {
     *     // ... the filter for the Languages we want to count
     *   }
     * })
    **/
    count<T extends LanguageCountArgs>(
      args?: Subset<T, LanguageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LanguageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Language.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LanguageAggregateArgs>(args: Subset<T, LanguageAggregateArgs>): Prisma.PrismaPromise<GetLanguageAggregateType<T>>

    /**
     * Group by Language.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LanguageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LanguageGroupByArgs['orderBy'] }
        : { orderBy?: LanguageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LanguageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLanguageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Language model
   */
  readonly fields: LanguageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Language.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LanguageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CategoryTranslation<T extends Language$CategoryTranslationArgs<ExtArgs> = {}>(args?: Subset<T, Language$CategoryTranslationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_Language_createdByIdToUser<T extends Language$User_Language_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Language$User_Language_createdByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Language_deletedByIdToUser<T extends Language$User_Language_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Language$User_Language_deletedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Language_updatedByIdToUser<T extends Language$User_Language_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Language$User_Language_updatedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ServiceProviderTranslation<T extends Language$ServiceProviderTranslationArgs<ExtArgs> = {}>(args?: Subset<T, Language$ServiceProviderTranslationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceTranslation<T extends Language$ServiceTranslationArgs<ExtArgs> = {}>(args?: Subset<T, Language$ServiceTranslationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Language model
   */
  interface LanguageFieldRefs {
    readonly id: FieldRef<"Language", 'String'>
    readonly name: FieldRef<"Language", 'String'>
    readonly createdById: FieldRef<"Language", 'Int'>
    readonly updatedById: FieldRef<"Language", 'Int'>
    readonly deletedById: FieldRef<"Language", 'Int'>
    readonly deletedAt: FieldRef<"Language", 'DateTime'>
    readonly createdAt: FieldRef<"Language", 'DateTime'>
    readonly updatedAt: FieldRef<"Language", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Language findUnique
   */
  export type LanguageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language findUniqueOrThrow
   */
  export type LanguageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language findFirst
   */
  export type LanguageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Languages.
     */
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language findFirstOrThrow
   */
  export type LanguageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Languages.
     */
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language findMany
   */
  export type LanguageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Languages to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language create
   */
  export type LanguageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The data needed to create a Language.
     */
    data: XOR<LanguageCreateInput, LanguageUncheckedCreateInput>
  }

  /**
   * Language createMany
   */
  export type LanguageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Languages.
     */
    data: LanguageCreateManyInput | LanguageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Language createManyAndReturn
   */
  export type LanguageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * The data used to create many Languages.
     */
    data: LanguageCreateManyInput | LanguageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Language update
   */
  export type LanguageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The data needed to update a Language.
     */
    data: XOR<LanguageUpdateInput, LanguageUncheckedUpdateInput>
    /**
     * Choose, which Language to update.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language updateMany
   */
  export type LanguageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Languages.
     */
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyInput>
    /**
     * Filter which Languages to update
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to update.
     */
    limit?: number
  }

  /**
   * Language updateManyAndReturn
   */
  export type LanguageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * The data used to update Languages.
     */
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyInput>
    /**
     * Filter which Languages to update
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Language upsert
   */
  export type LanguageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The filter to search for the Language to update in case it exists.
     */
    where: LanguageWhereUniqueInput
    /**
     * In case the Language found by the `where` argument doesn't exist, create a new Language with this data.
     */
    create: XOR<LanguageCreateInput, LanguageUncheckedCreateInput>
    /**
     * In case the Language was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LanguageUpdateInput, LanguageUncheckedUpdateInput>
  }

  /**
   * Language delete
   */
  export type LanguageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter which Language to delete.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language deleteMany
   */
  export type LanguageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Languages to delete
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to delete.
     */
    limit?: number
  }

  /**
   * Language.CategoryTranslation
   */
  export type Language$CategoryTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * Language.User_Language_createdByIdToUser
   */
  export type Language$User_Language_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Language.User_Language_deletedByIdToUser
   */
  export type Language$User_Language_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Language.User_Language_updatedByIdToUser
   */
  export type Language$User_Language_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Language.ServiceProviderTranslation
   */
  export type Language$ServiceProviderTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    where?: ServiceProviderTranslationWhereInput
    orderBy?: ServiceProviderTranslationOrderByWithRelationInput | ServiceProviderTranslationOrderByWithRelationInput[]
    cursor?: ServiceProviderTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceProviderTranslationScalarFieldEnum | ServiceProviderTranslationScalarFieldEnum[]
  }

  /**
   * Language.ServiceTranslation
   */
  export type Language$ServiceTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    where?: ServiceTranslationWhereInput
    orderBy?: ServiceTranslationOrderByWithRelationInput | ServiceTranslationOrderByWithRelationInput[]
    cursor?: ServiceTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceTranslationScalarFieldEnum | ServiceTranslationScalarFieldEnum[]
  }

  /**
   * Language without action
   */
  export type LanguageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type NotificationSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: number | null
    userId: number | null
    content: string | null
    isRead: boolean | null
    createdAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    content: string | null
    isRead: boolean | null
    createdAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    content: number
    isRead: number
    createdAt: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type NotificationSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    content?: true
    isRead?: true
    createdAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    content?: true
    isRead?: true
    createdAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    content?: true
    isRead?: true
    createdAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: number
    userId: number
    content: string
    isRead: boolean
    createdAt: Date
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    content?: boolean
    isRead?: boolean
    createdAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    content?: boolean
    isRead?: boolean
    createdAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    content?: boolean
    isRead?: boolean
    createdAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    content?: boolean
    isRead?: boolean
    createdAt?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "content" | "isRead" | "createdAt", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      content: string
      isRead: boolean
      createdAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'Int'>
    readonly userId: FieldRef<"Notification", 'Int'>
    readonly content: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model PackageRecommendation
   */

  export type AggregatePackageRecommendation = {
    _count: PackageRecommendationCountAggregateOutputType | null
    _avg: PackageRecommendationAvgAggregateOutputType | null
    _sum: PackageRecommendationSumAggregateOutputType | null
    _min: PackageRecommendationMinAggregateOutputType | null
    _max: PackageRecommendationMaxAggregateOutputType | null
  }

  export type PackageRecommendationAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
    packageId: number | null
  }

  export type PackageRecommendationSumAggregateOutputType = {
    id: number | null
    customerId: number | null
    packageId: number | null
  }

  export type PackageRecommendationMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    packageId: number | null
    reason: string | null
    accepted: boolean | null
    recommendedAt: Date | null
    acceptedAt: Date | null
  }

  export type PackageRecommendationMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    packageId: number | null
    reason: string | null
    accepted: boolean | null
    recommendedAt: Date | null
    acceptedAt: Date | null
  }

  export type PackageRecommendationCountAggregateOutputType = {
    id: number
    customerId: number
    packageId: number
    reason: number
    accepted: number
    recommendedAt: number
    acceptedAt: number
    _all: number
  }


  export type PackageRecommendationAvgAggregateInputType = {
    id?: true
    customerId?: true
    packageId?: true
  }

  export type PackageRecommendationSumAggregateInputType = {
    id?: true
    customerId?: true
    packageId?: true
  }

  export type PackageRecommendationMinAggregateInputType = {
    id?: true
    customerId?: true
    packageId?: true
    reason?: true
    accepted?: true
    recommendedAt?: true
    acceptedAt?: true
  }

  export type PackageRecommendationMaxAggregateInputType = {
    id?: true
    customerId?: true
    packageId?: true
    reason?: true
    accepted?: true
    recommendedAt?: true
    acceptedAt?: true
  }

  export type PackageRecommendationCountAggregateInputType = {
    id?: true
    customerId?: true
    packageId?: true
    reason?: true
    accepted?: true
    recommendedAt?: true
    acceptedAt?: true
    _all?: true
  }

  export type PackageRecommendationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PackageRecommendation to aggregate.
     */
    where?: PackageRecommendationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackageRecommendations to fetch.
     */
    orderBy?: PackageRecommendationOrderByWithRelationInput | PackageRecommendationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PackageRecommendationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackageRecommendations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackageRecommendations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PackageRecommendations
    **/
    _count?: true | PackageRecommendationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PackageRecommendationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PackageRecommendationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PackageRecommendationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PackageRecommendationMaxAggregateInputType
  }

  export type GetPackageRecommendationAggregateType<T extends PackageRecommendationAggregateArgs> = {
        [P in keyof T & keyof AggregatePackageRecommendation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePackageRecommendation[P]>
      : GetScalarType<T[P], AggregatePackageRecommendation[P]>
  }




  export type PackageRecommendationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PackageRecommendationWhereInput
    orderBy?: PackageRecommendationOrderByWithAggregationInput | PackageRecommendationOrderByWithAggregationInput[]
    by: PackageRecommendationScalarFieldEnum[] | PackageRecommendationScalarFieldEnum
    having?: PackageRecommendationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PackageRecommendationCountAggregateInputType | true
    _avg?: PackageRecommendationAvgAggregateInputType
    _sum?: PackageRecommendationSumAggregateInputType
    _min?: PackageRecommendationMinAggregateInputType
    _max?: PackageRecommendationMaxAggregateInputType
  }

  export type PackageRecommendationGroupByOutputType = {
    id: number
    customerId: number
    packageId: number
    reason: string | null
    accepted: boolean
    recommendedAt: Date
    acceptedAt: Date | null
    _count: PackageRecommendationCountAggregateOutputType | null
    _avg: PackageRecommendationAvgAggregateOutputType | null
    _sum: PackageRecommendationSumAggregateOutputType | null
    _min: PackageRecommendationMinAggregateOutputType | null
    _max: PackageRecommendationMaxAggregateOutputType | null
  }

  type GetPackageRecommendationGroupByPayload<T extends PackageRecommendationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PackageRecommendationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PackageRecommendationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PackageRecommendationGroupByOutputType[P]>
            : GetScalarType<T[P], PackageRecommendationGroupByOutputType[P]>
        }
      >
    >


  export type PackageRecommendationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    packageId?: boolean
    reason?: boolean
    accepted?: boolean
    recommendedAt?: boolean
    acceptedAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packageRecommendation"]>

  export type PackageRecommendationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    packageId?: boolean
    reason?: boolean
    accepted?: boolean
    recommendedAt?: boolean
    acceptedAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packageRecommendation"]>

  export type PackageRecommendationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    packageId?: boolean
    reason?: boolean
    accepted?: boolean
    recommendedAt?: boolean
    acceptedAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["packageRecommendation"]>

  export type PackageRecommendationSelectScalar = {
    id?: boolean
    customerId?: boolean
    packageId?: boolean
    reason?: boolean
    accepted?: boolean
    recommendedAt?: boolean
    acceptedAt?: boolean
  }

  export type PackageRecommendationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "packageId" | "reason" | "accepted" | "recommendedAt" | "acceptedAt", ExtArgs["result"]["packageRecommendation"]>
  export type PackageRecommendationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }
  export type PackageRecommendationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }
  export type PackageRecommendationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }

  export type $PackageRecommendationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PackageRecommendation"
    objects: {
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      packageId: number
      reason: string | null
      accepted: boolean
      recommendedAt: Date
      acceptedAt: Date | null
    }, ExtArgs["result"]["packageRecommendation"]>
    composites: {}
  }

  type PackageRecommendationGetPayload<S extends boolean | null | undefined | PackageRecommendationDefaultArgs> = $Result.GetResult<Prisma.$PackageRecommendationPayload, S>

  type PackageRecommendationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PackageRecommendationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PackageRecommendationCountAggregateInputType | true
    }

  export interface PackageRecommendationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PackageRecommendation'], meta: { name: 'PackageRecommendation' } }
    /**
     * Find zero or one PackageRecommendation that matches the filter.
     * @param {PackageRecommendationFindUniqueArgs} args - Arguments to find a PackageRecommendation
     * @example
     * // Get one PackageRecommendation
     * const packageRecommendation = await prisma.packageRecommendation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PackageRecommendationFindUniqueArgs>(args: SelectSubset<T, PackageRecommendationFindUniqueArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PackageRecommendation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PackageRecommendationFindUniqueOrThrowArgs} args - Arguments to find a PackageRecommendation
     * @example
     * // Get one PackageRecommendation
     * const packageRecommendation = await prisma.packageRecommendation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PackageRecommendationFindUniqueOrThrowArgs>(args: SelectSubset<T, PackageRecommendationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PackageRecommendation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationFindFirstArgs} args - Arguments to find a PackageRecommendation
     * @example
     * // Get one PackageRecommendation
     * const packageRecommendation = await prisma.packageRecommendation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PackageRecommendationFindFirstArgs>(args?: SelectSubset<T, PackageRecommendationFindFirstArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PackageRecommendation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationFindFirstOrThrowArgs} args - Arguments to find a PackageRecommendation
     * @example
     * // Get one PackageRecommendation
     * const packageRecommendation = await prisma.packageRecommendation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PackageRecommendationFindFirstOrThrowArgs>(args?: SelectSubset<T, PackageRecommendationFindFirstOrThrowArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PackageRecommendations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PackageRecommendations
     * const packageRecommendations = await prisma.packageRecommendation.findMany()
     * 
     * // Get first 10 PackageRecommendations
     * const packageRecommendations = await prisma.packageRecommendation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const packageRecommendationWithIdOnly = await prisma.packageRecommendation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PackageRecommendationFindManyArgs>(args?: SelectSubset<T, PackageRecommendationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PackageRecommendation.
     * @param {PackageRecommendationCreateArgs} args - Arguments to create a PackageRecommendation.
     * @example
     * // Create one PackageRecommendation
     * const PackageRecommendation = await prisma.packageRecommendation.create({
     *   data: {
     *     // ... data to create a PackageRecommendation
     *   }
     * })
     * 
     */
    create<T extends PackageRecommendationCreateArgs>(args: SelectSubset<T, PackageRecommendationCreateArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PackageRecommendations.
     * @param {PackageRecommendationCreateManyArgs} args - Arguments to create many PackageRecommendations.
     * @example
     * // Create many PackageRecommendations
     * const packageRecommendation = await prisma.packageRecommendation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PackageRecommendationCreateManyArgs>(args?: SelectSubset<T, PackageRecommendationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PackageRecommendations and returns the data saved in the database.
     * @param {PackageRecommendationCreateManyAndReturnArgs} args - Arguments to create many PackageRecommendations.
     * @example
     * // Create many PackageRecommendations
     * const packageRecommendation = await prisma.packageRecommendation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PackageRecommendations and only return the `id`
     * const packageRecommendationWithIdOnly = await prisma.packageRecommendation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PackageRecommendationCreateManyAndReturnArgs>(args?: SelectSubset<T, PackageRecommendationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PackageRecommendation.
     * @param {PackageRecommendationDeleteArgs} args - Arguments to delete one PackageRecommendation.
     * @example
     * // Delete one PackageRecommendation
     * const PackageRecommendation = await prisma.packageRecommendation.delete({
     *   where: {
     *     // ... filter to delete one PackageRecommendation
     *   }
     * })
     * 
     */
    delete<T extends PackageRecommendationDeleteArgs>(args: SelectSubset<T, PackageRecommendationDeleteArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PackageRecommendation.
     * @param {PackageRecommendationUpdateArgs} args - Arguments to update one PackageRecommendation.
     * @example
     * // Update one PackageRecommendation
     * const packageRecommendation = await prisma.packageRecommendation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PackageRecommendationUpdateArgs>(args: SelectSubset<T, PackageRecommendationUpdateArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PackageRecommendations.
     * @param {PackageRecommendationDeleteManyArgs} args - Arguments to filter PackageRecommendations to delete.
     * @example
     * // Delete a few PackageRecommendations
     * const { count } = await prisma.packageRecommendation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PackageRecommendationDeleteManyArgs>(args?: SelectSubset<T, PackageRecommendationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PackageRecommendations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PackageRecommendations
     * const packageRecommendation = await prisma.packageRecommendation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PackageRecommendationUpdateManyArgs>(args: SelectSubset<T, PackageRecommendationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PackageRecommendations and returns the data updated in the database.
     * @param {PackageRecommendationUpdateManyAndReturnArgs} args - Arguments to update many PackageRecommendations.
     * @example
     * // Update many PackageRecommendations
     * const packageRecommendation = await prisma.packageRecommendation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PackageRecommendations and only return the `id`
     * const packageRecommendationWithIdOnly = await prisma.packageRecommendation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PackageRecommendationUpdateManyAndReturnArgs>(args: SelectSubset<T, PackageRecommendationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PackageRecommendation.
     * @param {PackageRecommendationUpsertArgs} args - Arguments to update or create a PackageRecommendation.
     * @example
     * // Update or create a PackageRecommendation
     * const packageRecommendation = await prisma.packageRecommendation.upsert({
     *   create: {
     *     // ... data to create a PackageRecommendation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PackageRecommendation we want to update
     *   }
     * })
     */
    upsert<T extends PackageRecommendationUpsertArgs>(args: SelectSubset<T, PackageRecommendationUpsertArgs<ExtArgs>>): Prisma__PackageRecommendationClient<$Result.GetResult<Prisma.$PackageRecommendationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PackageRecommendations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationCountArgs} args - Arguments to filter PackageRecommendations to count.
     * @example
     * // Count the number of PackageRecommendations
     * const count = await prisma.packageRecommendation.count({
     *   where: {
     *     // ... the filter for the PackageRecommendations we want to count
     *   }
     * })
    **/
    count<T extends PackageRecommendationCountArgs>(
      args?: Subset<T, PackageRecommendationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PackageRecommendationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PackageRecommendation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PackageRecommendationAggregateArgs>(args: Subset<T, PackageRecommendationAggregateArgs>): Prisma.PrismaPromise<GetPackageRecommendationAggregateType<T>>

    /**
     * Group by PackageRecommendation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PackageRecommendationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PackageRecommendationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PackageRecommendationGroupByArgs['orderBy'] }
        : { orderBy?: PackageRecommendationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PackageRecommendationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPackageRecommendationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PackageRecommendation model
   */
  readonly fields: PackageRecommendationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PackageRecommendation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PackageRecommendationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PackageRecommendation model
   */
  interface PackageRecommendationFieldRefs {
    readonly id: FieldRef<"PackageRecommendation", 'Int'>
    readonly customerId: FieldRef<"PackageRecommendation", 'Int'>
    readonly packageId: FieldRef<"PackageRecommendation", 'Int'>
    readonly reason: FieldRef<"PackageRecommendation", 'String'>
    readonly accepted: FieldRef<"PackageRecommendation", 'Boolean'>
    readonly recommendedAt: FieldRef<"PackageRecommendation", 'DateTime'>
    readonly acceptedAt: FieldRef<"PackageRecommendation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PackageRecommendation findUnique
   */
  export type PackageRecommendationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * Filter, which PackageRecommendation to fetch.
     */
    where: PackageRecommendationWhereUniqueInput
  }

  /**
   * PackageRecommendation findUniqueOrThrow
   */
  export type PackageRecommendationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * Filter, which PackageRecommendation to fetch.
     */
    where: PackageRecommendationWhereUniqueInput
  }

  /**
   * PackageRecommendation findFirst
   */
  export type PackageRecommendationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * Filter, which PackageRecommendation to fetch.
     */
    where?: PackageRecommendationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackageRecommendations to fetch.
     */
    orderBy?: PackageRecommendationOrderByWithRelationInput | PackageRecommendationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PackageRecommendations.
     */
    cursor?: PackageRecommendationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackageRecommendations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackageRecommendations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PackageRecommendations.
     */
    distinct?: PackageRecommendationScalarFieldEnum | PackageRecommendationScalarFieldEnum[]
  }

  /**
   * PackageRecommendation findFirstOrThrow
   */
  export type PackageRecommendationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * Filter, which PackageRecommendation to fetch.
     */
    where?: PackageRecommendationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackageRecommendations to fetch.
     */
    orderBy?: PackageRecommendationOrderByWithRelationInput | PackageRecommendationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PackageRecommendations.
     */
    cursor?: PackageRecommendationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackageRecommendations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackageRecommendations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PackageRecommendations.
     */
    distinct?: PackageRecommendationScalarFieldEnum | PackageRecommendationScalarFieldEnum[]
  }

  /**
   * PackageRecommendation findMany
   */
  export type PackageRecommendationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * Filter, which PackageRecommendations to fetch.
     */
    where?: PackageRecommendationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PackageRecommendations to fetch.
     */
    orderBy?: PackageRecommendationOrderByWithRelationInput | PackageRecommendationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PackageRecommendations.
     */
    cursor?: PackageRecommendationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PackageRecommendations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PackageRecommendations.
     */
    skip?: number
    distinct?: PackageRecommendationScalarFieldEnum | PackageRecommendationScalarFieldEnum[]
  }

  /**
   * PackageRecommendation create
   */
  export type PackageRecommendationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * The data needed to create a PackageRecommendation.
     */
    data: XOR<PackageRecommendationCreateInput, PackageRecommendationUncheckedCreateInput>
  }

  /**
   * PackageRecommendation createMany
   */
  export type PackageRecommendationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PackageRecommendations.
     */
    data: PackageRecommendationCreateManyInput | PackageRecommendationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PackageRecommendation createManyAndReturn
   */
  export type PackageRecommendationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * The data used to create many PackageRecommendations.
     */
    data: PackageRecommendationCreateManyInput | PackageRecommendationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PackageRecommendation update
   */
  export type PackageRecommendationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * The data needed to update a PackageRecommendation.
     */
    data: XOR<PackageRecommendationUpdateInput, PackageRecommendationUncheckedUpdateInput>
    /**
     * Choose, which PackageRecommendation to update.
     */
    where: PackageRecommendationWhereUniqueInput
  }

  /**
   * PackageRecommendation updateMany
   */
  export type PackageRecommendationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PackageRecommendations.
     */
    data: XOR<PackageRecommendationUpdateManyMutationInput, PackageRecommendationUncheckedUpdateManyInput>
    /**
     * Filter which PackageRecommendations to update
     */
    where?: PackageRecommendationWhereInput
    /**
     * Limit how many PackageRecommendations to update.
     */
    limit?: number
  }

  /**
   * PackageRecommendation updateManyAndReturn
   */
  export type PackageRecommendationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * The data used to update PackageRecommendations.
     */
    data: XOR<PackageRecommendationUpdateManyMutationInput, PackageRecommendationUncheckedUpdateManyInput>
    /**
     * Filter which PackageRecommendations to update
     */
    where?: PackageRecommendationWhereInput
    /**
     * Limit how many PackageRecommendations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PackageRecommendation upsert
   */
  export type PackageRecommendationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * The filter to search for the PackageRecommendation to update in case it exists.
     */
    where: PackageRecommendationWhereUniqueInput
    /**
     * In case the PackageRecommendation found by the `where` argument doesn't exist, create a new PackageRecommendation with this data.
     */
    create: XOR<PackageRecommendationCreateInput, PackageRecommendationUncheckedCreateInput>
    /**
     * In case the PackageRecommendation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PackageRecommendationUpdateInput, PackageRecommendationUncheckedUpdateInput>
  }

  /**
   * PackageRecommendation delete
   */
  export type PackageRecommendationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
    /**
     * Filter which PackageRecommendation to delete.
     */
    where: PackageRecommendationWhereUniqueInput
  }

  /**
   * PackageRecommendation deleteMany
   */
  export type PackageRecommendationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PackageRecommendations to delete
     */
    where?: PackageRecommendationWhereInput
    /**
     * Limit how many PackageRecommendations to delete.
     */
    limit?: number
  }

  /**
   * PackageRecommendation without action
   */
  export type PackageRecommendationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PackageRecommendation
     */
    select?: PackageRecommendationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PackageRecommendation
     */
    omit?: PackageRecommendationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PackageRecommendationInclude<ExtArgs> | null
  }


  /**
   * Model PaymentTransaction
   */

  export type AggregatePaymentTransaction = {
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  export type PaymentTransactionAvgAggregateOutputType = {
    id: number | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
  }

  export type PaymentTransactionSumAggregateOutputType = {
    id: number | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
  }

  export type PaymentTransactionMinAggregateOutputType = {
    id: number | null
    gateway: string | null
    transactionDate: Date | null
    accountNumber: string | null
    subAccount: string | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
    referenceNumber: string | null
    transactionContent: string | null
    body: string | null
    createdAt: Date | null
  }

  export type PaymentTransactionMaxAggregateOutputType = {
    id: number | null
    gateway: string | null
    transactionDate: Date | null
    accountNumber: string | null
    subAccount: string | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
    referenceNumber: string | null
    transactionContent: string | null
    body: string | null
    createdAt: Date | null
  }

  export type PaymentTransactionCountAggregateOutputType = {
    id: number
    gateway: number
    transactionDate: number
    accountNumber: number
    subAccount: number
    amountIn: number
    amountOut: number
    accumulated: number
    referenceNumber: number
    transactionContent: number
    body: number
    createdAt: number
    _all: number
  }


  export type PaymentTransactionAvgAggregateInputType = {
    id?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
  }

  export type PaymentTransactionSumAggregateInputType = {
    id?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
  }

  export type PaymentTransactionMinAggregateInputType = {
    id?: true
    gateway?: true
    transactionDate?: true
    accountNumber?: true
    subAccount?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
    referenceNumber?: true
    transactionContent?: true
    body?: true
    createdAt?: true
  }

  export type PaymentTransactionMaxAggregateInputType = {
    id?: true
    gateway?: true
    transactionDate?: true
    accountNumber?: true
    subAccount?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
    referenceNumber?: true
    transactionContent?: true
    body?: true
    createdAt?: true
  }

  export type PaymentTransactionCountAggregateInputType = {
    id?: true
    gateway?: true
    transactionDate?: true
    accountNumber?: true
    subAccount?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
    referenceNumber?: true
    transactionContent?: true
    body?: true
    createdAt?: true
    _all?: true
  }

  export type PaymentTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransaction to aggregate.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentTransactions
    **/
    _count?: true | PaymentTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type GetPaymentTransactionAggregateType<T extends PaymentTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentTransaction[P]>
      : GetScalarType<T[P], AggregatePaymentTransaction[P]>
  }




  export type PaymentTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentTransactionWhereInput
    orderBy?: PaymentTransactionOrderByWithAggregationInput | PaymentTransactionOrderByWithAggregationInput[]
    by: PaymentTransactionScalarFieldEnum[] | PaymentTransactionScalarFieldEnum
    having?: PaymentTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentTransactionCountAggregateInputType | true
    _avg?: PaymentTransactionAvgAggregateInputType
    _sum?: PaymentTransactionSumAggregateInputType
    _min?: PaymentTransactionMinAggregateInputType
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type PaymentTransactionGroupByOutputType = {
    id: number
    gateway: string
    transactionDate: Date
    accountNumber: string | null
    subAccount: string | null
    amountIn: number
    amountOut: number
    accumulated: number
    referenceNumber: string | null
    transactionContent: string | null
    body: string | null
    createdAt: Date
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  type GetPaymentTransactionGroupByPayload<T extends PaymentTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
        }
      >
    >


  export type PaymentTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    referenceNumber?: boolean
    transactionContent?: boolean
    body?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    referenceNumber?: boolean
    transactionContent?: boolean
    body?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    referenceNumber?: boolean
    transactionContent?: boolean
    body?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectScalar = {
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    referenceNumber?: boolean
    transactionContent?: boolean
    body?: boolean
    createdAt?: boolean
  }

  export type PaymentTransactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "gateway" | "transactionDate" | "accountNumber" | "subAccount" | "amountIn" | "amountOut" | "accumulated" | "referenceNumber" | "transactionContent" | "body" | "createdAt", ExtArgs["result"]["paymentTransaction"]>

  export type $PaymentTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentTransaction"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      gateway: string
      transactionDate: Date
      accountNumber: string | null
      subAccount: string | null
      amountIn: number
      amountOut: number
      accumulated: number
      referenceNumber: string | null
      transactionContent: string | null
      body: string | null
      createdAt: Date
    }, ExtArgs["result"]["paymentTransaction"]>
    composites: {}
  }

  type PaymentTransactionGetPayload<S extends boolean | null | undefined | PaymentTransactionDefaultArgs> = $Result.GetResult<Prisma.$PaymentTransactionPayload, S>

  type PaymentTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentTransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentTransactionCountAggregateInputType | true
    }

  export interface PaymentTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentTransaction'], meta: { name: 'PaymentTransaction' } }
    /**
     * Find zero or one PaymentTransaction that matches the filter.
     * @param {PaymentTransactionFindUniqueArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentTransactionFindUniqueArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentTransaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentTransactionFindUniqueOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentTransactionFindFirstArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany()
     * 
     * // Get first 10 PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentTransactionFindManyArgs>(args?: SelectSubset<T, PaymentTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentTransaction.
     * @param {PaymentTransactionCreateArgs} args - Arguments to create a PaymentTransaction.
     * @example
     * // Create one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.create({
     *   data: {
     *     // ... data to create a PaymentTransaction
     *   }
     * })
     * 
     */
    create<T extends PaymentTransactionCreateArgs>(args: SelectSubset<T, PaymentTransactionCreateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentTransactions.
     * @param {PaymentTransactionCreateManyArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentTransactionCreateManyArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentTransactions and returns the data saved in the database.
     * @param {PaymentTransactionCreateManyAndReturnArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentTransactions and only return the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentTransaction.
     * @param {PaymentTransactionDeleteArgs} args - Arguments to delete one PaymentTransaction.
     * @example
     * // Delete one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.delete({
     *   where: {
     *     // ... filter to delete one PaymentTransaction
     *   }
     * })
     * 
     */
    delete<T extends PaymentTransactionDeleteArgs>(args: SelectSubset<T, PaymentTransactionDeleteArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentTransaction.
     * @param {PaymentTransactionUpdateArgs} args - Arguments to update one PaymentTransaction.
     * @example
     * // Update one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentTransactionUpdateArgs>(args: SelectSubset<T, PaymentTransactionUpdateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentTransactions.
     * @param {PaymentTransactionDeleteManyArgs} args - Arguments to filter PaymentTransactions to delete.
     * @example
     * // Delete a few PaymentTransactions
     * const { count } = await prisma.paymentTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentTransactionDeleteManyArgs>(args?: SelectSubset<T, PaymentTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentTransactionUpdateManyArgs>(args: SelectSubset<T, PaymentTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentTransactions and returns the data updated in the database.
     * @param {PaymentTransactionUpdateManyAndReturnArgs} args - Arguments to update many PaymentTransactions.
     * @example
     * // Update many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentTransactions and only return the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentTransactionUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentTransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentTransaction.
     * @param {PaymentTransactionUpsertArgs} args - Arguments to update or create a PaymentTransaction.
     * @example
     * // Update or create a PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.upsert({
     *   create: {
     *     // ... data to create a PaymentTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentTransaction we want to update
     *   }
     * })
     */
    upsert<T extends PaymentTransactionUpsertArgs>(args: SelectSubset<T, PaymentTransactionUpsertArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionCountArgs} args - Arguments to filter PaymentTransactions to count.
     * @example
     * // Count the number of PaymentTransactions
     * const count = await prisma.paymentTransaction.count({
     *   where: {
     *     // ... the filter for the PaymentTransactions we want to count
     *   }
     * })
    **/
    count<T extends PaymentTransactionCountArgs>(
      args?: Subset<T, PaymentTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentTransactionAggregateArgs>(args: Subset<T, PaymentTransactionAggregateArgs>): Prisma.PrismaPromise<GetPaymentTransactionAggregateType<T>>

    /**
     * Group by PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentTransactionGroupByArgs['orderBy'] }
        : { orderBy?: PaymentTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentTransaction model
   */
  readonly fields: PaymentTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentTransaction model
   */
  interface PaymentTransactionFieldRefs {
    readonly id: FieldRef<"PaymentTransaction", 'Int'>
    readonly gateway: FieldRef<"PaymentTransaction", 'String'>
    readonly transactionDate: FieldRef<"PaymentTransaction", 'DateTime'>
    readonly accountNumber: FieldRef<"PaymentTransaction", 'String'>
    readonly subAccount: FieldRef<"PaymentTransaction", 'String'>
    readonly amountIn: FieldRef<"PaymentTransaction", 'Int'>
    readonly amountOut: FieldRef<"PaymentTransaction", 'Int'>
    readonly accumulated: FieldRef<"PaymentTransaction", 'Int'>
    readonly referenceNumber: FieldRef<"PaymentTransaction", 'String'>
    readonly transactionContent: FieldRef<"PaymentTransaction", 'String'>
    readonly body: FieldRef<"PaymentTransaction", 'String'>
    readonly createdAt: FieldRef<"PaymentTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentTransaction findUnique
   */
  export type PaymentTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findUniqueOrThrow
   */
  export type PaymentTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findFirst
   */
  export type PaymentTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findFirstOrThrow
   */
  export type PaymentTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findMany
   */
  export type PaymentTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransactions to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction create
   */
  export type PaymentTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentTransaction.
     */
    data: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
  }

  /**
   * PaymentTransaction createMany
   */
  export type PaymentTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentTransaction createManyAndReturn
   */
  export type PaymentTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentTransaction update
   */
  export type PaymentTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentTransaction.
     */
    data: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
    /**
     * Choose, which PaymentTransaction to update.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction updateMany
   */
  export type PaymentTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentTransactions.
     */
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentTransactions to update
     */
    where?: PaymentTransactionWhereInput
    /**
     * Limit how many PaymentTransactions to update.
     */
    limit?: number
  }

  /**
   * PaymentTransaction updateManyAndReturn
   */
  export type PaymentTransactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data used to update PaymentTransactions.
     */
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentTransactions to update
     */
    where?: PaymentTransactionWhereInput
    /**
     * Limit how many PaymentTransactions to update.
     */
    limit?: number
  }

  /**
   * PaymentTransaction upsert
   */
  export type PaymentTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentTransaction to update in case it exists.
     */
    where: PaymentTransactionWhereUniqueInput
    /**
     * In case the PaymentTransaction found by the `where` argument doesn't exist, create a new PaymentTransaction with this data.
     */
    create: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
    /**
     * In case the PaymentTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
  }

  /**
   * PaymentTransaction delete
   */
  export type PaymentTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter which PaymentTransaction to delete.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction deleteMany
   */
  export type PaymentTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransactions to delete
     */
    where?: PaymentTransactionWhereInput
    /**
     * Limit how many PaymentTransactions to delete.
     */
    limit?: number
  }

  /**
   * PaymentTransaction without action
   */
  export type PaymentTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
  }


  /**
   * Model Permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionAvgAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type PermissionSumAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type PermissionMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    path: string | null
    method: $Enums.HTTPMethod | null
    module: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    path: string | null
    method: $Enums.HTTPMethod | null
    module: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    name: number
    description: number
    path: number
    method: number
    module: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PermissionAvgAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type PermissionSumAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type PermissionMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    path?: true
    method?: true
    module?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    path?: true
    method?: true
    module?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    path?: true
    method?: true
    module?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permission to aggregate.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type PermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithAggregationInput | PermissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: PermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _avg?: PermissionAvgAggregateInputType
    _sum?: PermissionSumAggregateInputType
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: number
    name: string
    description: string | null
    path: string
    method: $Enums.HTTPMethod
    module: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends PermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type PermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Permission_createdByIdToUser?: boolean | Permission$User_Permission_createdByIdToUserArgs<ExtArgs>
    User_Permission_deletedByIdToUser?: boolean | Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>
    User_Permission_updatedByIdToUser?: boolean | Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>
    Role?: boolean | Permission$RoleArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Permission_createdByIdToUser?: boolean | Permission$User_Permission_createdByIdToUserArgs<ExtArgs>
    User_Permission_deletedByIdToUser?: boolean | Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>
    User_Permission_updatedByIdToUser?: boolean | Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Permission_createdByIdToUser?: boolean | Permission$User_Permission_createdByIdToUserArgs<ExtArgs>
    User_Permission_deletedByIdToUser?: boolean | Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>
    User_Permission_updatedByIdToUser?: boolean | Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "path" | "method" | "module" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["permission"]>
  export type PermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Permission_createdByIdToUser?: boolean | Permission$User_Permission_createdByIdToUserArgs<ExtArgs>
    User_Permission_deletedByIdToUser?: boolean | Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>
    User_Permission_updatedByIdToUser?: boolean | Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>
    Role?: boolean | Permission$RoleArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Permission_createdByIdToUser?: boolean | Permission$User_Permission_createdByIdToUserArgs<ExtArgs>
    User_Permission_deletedByIdToUser?: boolean | Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>
    User_Permission_updatedByIdToUser?: boolean | Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>
  }
  export type PermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Permission_createdByIdToUser?: boolean | Permission$User_Permission_createdByIdToUserArgs<ExtArgs>
    User_Permission_deletedByIdToUser?: boolean | Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>
    User_Permission_updatedByIdToUser?: boolean | Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>
  }

  export type $PermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permission"
    objects: {
      User_Permission_createdByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Permission_deletedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Permission_updatedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      Role: Prisma.$RolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      path: string
      method: $Enums.HTTPMethod
      module: string | null
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type PermissionGetPayload<S extends boolean | null | undefined | PermissionDefaultArgs> = $Result.GetResult<Prisma.$PermissionPayload, S>

  type PermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface PermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permission'], meta: { name: 'Permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {PermissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissionFindUniqueArgs>(args: SelectSubset<T, PermissionFindUniqueArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissionFindFirstArgs>(args?: SelectSubset<T, PermissionFindFirstArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissionFindManyArgs>(args?: SelectSubset<T, PermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {PermissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends PermissionCreateArgs>(args: SelectSubset<T, PermissionCreateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {PermissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissionCreateManyArgs>(args?: SelectSubset<T, PermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {PermissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permission.
     * @param {PermissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends PermissionDeleteArgs>(args: SelectSubset<T, PermissionDeleteArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {PermissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissionUpdateArgs>(args: SelectSubset<T, PermissionUpdateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {PermissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissionDeleteManyArgs>(args?: SelectSubset<T, PermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissionUpdateManyArgs>(args: SelectSubset<T, PermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {PermissionUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permission.
     * @param {PermissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends PermissionUpsertArgs>(args: SelectSubset<T, PermissionUpsertArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends PermissionCountArgs>(
      args?: Subset<T, PermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionGroupByArgs['orderBy'] }
        : { orderBy?: PermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permission model
   */
  readonly fields: PermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Permission_createdByIdToUser<T extends Permission$User_Permission_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Permission$User_Permission_createdByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Permission_deletedByIdToUser<T extends Permission$User_Permission_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Permission$User_Permission_deletedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Permission_updatedByIdToUser<T extends Permission$User_Permission_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Permission$User_Permission_updatedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Role<T extends Permission$RoleArgs<ExtArgs> = {}>(args?: Subset<T, Permission$RoleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permission model
   */
  interface PermissionFieldRefs {
    readonly id: FieldRef<"Permission", 'Int'>
    readonly name: FieldRef<"Permission", 'String'>
    readonly description: FieldRef<"Permission", 'String'>
    readonly path: FieldRef<"Permission", 'String'>
    readonly method: FieldRef<"Permission", 'HTTPMethod'>
    readonly module: FieldRef<"Permission", 'String'>
    readonly createdById: FieldRef<"Permission", 'Int'>
    readonly updatedById: FieldRef<"Permission", 'Int'>
    readonly deletedById: FieldRef<"Permission", 'Int'>
    readonly deletedAt: FieldRef<"Permission", 'DateTime'>
    readonly createdAt: FieldRef<"Permission", 'DateTime'>
    readonly updatedAt: FieldRef<"Permission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Permission findUnique
   */
  export type PermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findUniqueOrThrow
   */
  export type PermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findFirst
   */
  export type PermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findFirstOrThrow
   */
  export type PermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findMany
   */
  export type PermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permissions to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission create
   */
  export type PermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Permission.
     */
    data: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
  }

  /**
   * Permission createMany
   */
  export type PermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission createManyAndReturn
   */
  export type PermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permission update
   */
  export type PermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Permission.
     */
    data: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
    /**
     * Choose, which Permission to update.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission updateMany
   */
  export type PermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission updateManyAndReturn
   */
  export type PermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permission upsert
   */
  export type PermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Permission to update in case it exists.
     */
    where: PermissionWhereUniqueInput
    /**
     * In case the Permission found by the `where` argument doesn't exist, create a new Permission with this data.
     */
    create: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
    /**
     * In case the Permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
  }

  /**
   * Permission delete
   */
  export type PermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter which Permission to delete.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission deleteMany
   */
  export type PermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissions to delete
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to delete.
     */
    limit?: number
  }

  /**
   * Permission.User_Permission_createdByIdToUser
   */
  export type Permission$User_Permission_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Permission.User_Permission_deletedByIdToUser
   */
  export type Permission$User_Permission_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Permission.User_Permission_updatedByIdToUser
   */
  export type Permission$User_Permission_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Permission.Role
   */
  export type Permission$RoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Permission without action
   */
  export type PermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
  }


  /**
   * Model RecurringBooking
   */

  export type AggregateRecurringBooking = {
    _count: RecurringBookingCountAggregateOutputType | null
    _avg: RecurringBookingAvgAggregateOutputType | null
    _sum: RecurringBookingSumAggregateOutputType | null
    _min: RecurringBookingMinAggregateOutputType | null
    _max: RecurringBookingMaxAggregateOutputType | null
  }

  export type RecurringBookingAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
    serviceId: number | null
  }

  export type RecurringBookingSumAggregateOutputType = {
    id: number | null
    customerId: number | null
    serviceId: number | null
  }

  export type RecurringBookingMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    serviceId: number | null
    interval: string | null
    nextRunDate: Date | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RecurringBookingMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    serviceId: number | null
    interval: string | null
    nextRunDate: Date | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RecurringBookingCountAggregateOutputType = {
    id: number
    customerId: number
    serviceId: number
    interval: number
    nextRunDate: number
    active: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RecurringBookingAvgAggregateInputType = {
    id?: true
    customerId?: true
    serviceId?: true
  }

  export type RecurringBookingSumAggregateInputType = {
    id?: true
    customerId?: true
    serviceId?: true
  }

  export type RecurringBookingMinAggregateInputType = {
    id?: true
    customerId?: true
    serviceId?: true
    interval?: true
    nextRunDate?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RecurringBookingMaxAggregateInputType = {
    id?: true
    customerId?: true
    serviceId?: true
    interval?: true
    nextRunDate?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RecurringBookingCountAggregateInputType = {
    id?: true
    customerId?: true
    serviceId?: true
    interval?: true
    nextRunDate?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RecurringBookingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RecurringBooking to aggregate.
     */
    where?: RecurringBookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecurringBookings to fetch.
     */
    orderBy?: RecurringBookingOrderByWithRelationInput | RecurringBookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RecurringBookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecurringBookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecurringBookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RecurringBookings
    **/
    _count?: true | RecurringBookingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RecurringBookingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RecurringBookingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RecurringBookingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RecurringBookingMaxAggregateInputType
  }

  export type GetRecurringBookingAggregateType<T extends RecurringBookingAggregateArgs> = {
        [P in keyof T & keyof AggregateRecurringBooking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRecurringBooking[P]>
      : GetScalarType<T[P], AggregateRecurringBooking[P]>
  }




  export type RecurringBookingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecurringBookingWhereInput
    orderBy?: RecurringBookingOrderByWithAggregationInput | RecurringBookingOrderByWithAggregationInput[]
    by: RecurringBookingScalarFieldEnum[] | RecurringBookingScalarFieldEnum
    having?: RecurringBookingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RecurringBookingCountAggregateInputType | true
    _avg?: RecurringBookingAvgAggregateInputType
    _sum?: RecurringBookingSumAggregateInputType
    _min?: RecurringBookingMinAggregateInputType
    _max?: RecurringBookingMaxAggregateInputType
  }

  export type RecurringBookingGroupByOutputType = {
    id: number
    customerId: number
    serviceId: number
    interval: string
    nextRunDate: Date
    active: boolean
    createdAt: Date
    updatedAt: Date
    _count: RecurringBookingCountAggregateOutputType | null
    _avg: RecurringBookingAvgAggregateOutputType | null
    _sum: RecurringBookingSumAggregateOutputType | null
    _min: RecurringBookingMinAggregateOutputType | null
    _max: RecurringBookingMaxAggregateOutputType | null
  }

  type GetRecurringBookingGroupByPayload<T extends RecurringBookingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RecurringBookingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RecurringBookingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RecurringBookingGroupByOutputType[P]>
            : GetScalarType<T[P], RecurringBookingGroupByOutputType[P]>
        }
      >
    >


  export type RecurringBookingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    serviceId?: boolean
    interval?: boolean
    nextRunDate?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recurringBooking"]>

  export type RecurringBookingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    serviceId?: boolean
    interval?: boolean
    nextRunDate?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recurringBooking"]>

  export type RecurringBookingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    serviceId?: boolean
    interval?: boolean
    nextRunDate?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recurringBooking"]>

  export type RecurringBookingSelectScalar = {
    id?: boolean
    customerId?: boolean
    serviceId?: boolean
    interval?: boolean
    nextRunDate?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RecurringBookingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "serviceId" | "interval" | "nextRunDate" | "active" | "createdAt" | "updatedAt", ExtArgs["result"]["recurringBooking"]>
  export type RecurringBookingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }
  export type RecurringBookingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }
  export type RecurringBookingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }

  export type $RecurringBookingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RecurringBooking"
    objects: {
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
      Service: Prisma.$ServicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      serviceId: number
      interval: string
      nextRunDate: Date
      active: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["recurringBooking"]>
    composites: {}
  }

  type RecurringBookingGetPayload<S extends boolean | null | undefined | RecurringBookingDefaultArgs> = $Result.GetResult<Prisma.$RecurringBookingPayload, S>

  type RecurringBookingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RecurringBookingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RecurringBookingCountAggregateInputType | true
    }

  export interface RecurringBookingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RecurringBooking'], meta: { name: 'RecurringBooking' } }
    /**
     * Find zero or one RecurringBooking that matches the filter.
     * @param {RecurringBookingFindUniqueArgs} args - Arguments to find a RecurringBooking
     * @example
     * // Get one RecurringBooking
     * const recurringBooking = await prisma.recurringBooking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RecurringBookingFindUniqueArgs>(args: SelectSubset<T, RecurringBookingFindUniqueArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RecurringBooking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RecurringBookingFindUniqueOrThrowArgs} args - Arguments to find a RecurringBooking
     * @example
     * // Get one RecurringBooking
     * const recurringBooking = await prisma.recurringBooking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RecurringBookingFindUniqueOrThrowArgs>(args: SelectSubset<T, RecurringBookingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RecurringBooking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingFindFirstArgs} args - Arguments to find a RecurringBooking
     * @example
     * // Get one RecurringBooking
     * const recurringBooking = await prisma.recurringBooking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RecurringBookingFindFirstArgs>(args?: SelectSubset<T, RecurringBookingFindFirstArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RecurringBooking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingFindFirstOrThrowArgs} args - Arguments to find a RecurringBooking
     * @example
     * // Get one RecurringBooking
     * const recurringBooking = await prisma.recurringBooking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RecurringBookingFindFirstOrThrowArgs>(args?: SelectSubset<T, RecurringBookingFindFirstOrThrowArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RecurringBookings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RecurringBookings
     * const recurringBookings = await prisma.recurringBooking.findMany()
     * 
     * // Get first 10 RecurringBookings
     * const recurringBookings = await prisma.recurringBooking.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const recurringBookingWithIdOnly = await prisma.recurringBooking.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RecurringBookingFindManyArgs>(args?: SelectSubset<T, RecurringBookingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RecurringBooking.
     * @param {RecurringBookingCreateArgs} args - Arguments to create a RecurringBooking.
     * @example
     * // Create one RecurringBooking
     * const RecurringBooking = await prisma.recurringBooking.create({
     *   data: {
     *     // ... data to create a RecurringBooking
     *   }
     * })
     * 
     */
    create<T extends RecurringBookingCreateArgs>(args: SelectSubset<T, RecurringBookingCreateArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RecurringBookings.
     * @param {RecurringBookingCreateManyArgs} args - Arguments to create many RecurringBookings.
     * @example
     * // Create many RecurringBookings
     * const recurringBooking = await prisma.recurringBooking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RecurringBookingCreateManyArgs>(args?: SelectSubset<T, RecurringBookingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RecurringBookings and returns the data saved in the database.
     * @param {RecurringBookingCreateManyAndReturnArgs} args - Arguments to create many RecurringBookings.
     * @example
     * // Create many RecurringBookings
     * const recurringBooking = await prisma.recurringBooking.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RecurringBookings and only return the `id`
     * const recurringBookingWithIdOnly = await prisma.recurringBooking.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RecurringBookingCreateManyAndReturnArgs>(args?: SelectSubset<T, RecurringBookingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RecurringBooking.
     * @param {RecurringBookingDeleteArgs} args - Arguments to delete one RecurringBooking.
     * @example
     * // Delete one RecurringBooking
     * const RecurringBooking = await prisma.recurringBooking.delete({
     *   where: {
     *     // ... filter to delete one RecurringBooking
     *   }
     * })
     * 
     */
    delete<T extends RecurringBookingDeleteArgs>(args: SelectSubset<T, RecurringBookingDeleteArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RecurringBooking.
     * @param {RecurringBookingUpdateArgs} args - Arguments to update one RecurringBooking.
     * @example
     * // Update one RecurringBooking
     * const recurringBooking = await prisma.recurringBooking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RecurringBookingUpdateArgs>(args: SelectSubset<T, RecurringBookingUpdateArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RecurringBookings.
     * @param {RecurringBookingDeleteManyArgs} args - Arguments to filter RecurringBookings to delete.
     * @example
     * // Delete a few RecurringBookings
     * const { count } = await prisma.recurringBooking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RecurringBookingDeleteManyArgs>(args?: SelectSubset<T, RecurringBookingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RecurringBookings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RecurringBookings
     * const recurringBooking = await prisma.recurringBooking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RecurringBookingUpdateManyArgs>(args: SelectSubset<T, RecurringBookingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RecurringBookings and returns the data updated in the database.
     * @param {RecurringBookingUpdateManyAndReturnArgs} args - Arguments to update many RecurringBookings.
     * @example
     * // Update many RecurringBookings
     * const recurringBooking = await prisma.recurringBooking.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RecurringBookings and only return the `id`
     * const recurringBookingWithIdOnly = await prisma.recurringBooking.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RecurringBookingUpdateManyAndReturnArgs>(args: SelectSubset<T, RecurringBookingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RecurringBooking.
     * @param {RecurringBookingUpsertArgs} args - Arguments to update or create a RecurringBooking.
     * @example
     * // Update or create a RecurringBooking
     * const recurringBooking = await prisma.recurringBooking.upsert({
     *   create: {
     *     // ... data to create a RecurringBooking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RecurringBooking we want to update
     *   }
     * })
     */
    upsert<T extends RecurringBookingUpsertArgs>(args: SelectSubset<T, RecurringBookingUpsertArgs<ExtArgs>>): Prisma__RecurringBookingClient<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RecurringBookings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingCountArgs} args - Arguments to filter RecurringBookings to count.
     * @example
     * // Count the number of RecurringBookings
     * const count = await prisma.recurringBooking.count({
     *   where: {
     *     // ... the filter for the RecurringBookings we want to count
     *   }
     * })
    **/
    count<T extends RecurringBookingCountArgs>(
      args?: Subset<T, RecurringBookingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RecurringBookingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RecurringBooking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RecurringBookingAggregateArgs>(args: Subset<T, RecurringBookingAggregateArgs>): Prisma.PrismaPromise<GetRecurringBookingAggregateType<T>>

    /**
     * Group by RecurringBooking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecurringBookingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RecurringBookingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RecurringBookingGroupByArgs['orderBy'] }
        : { orderBy?: RecurringBookingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RecurringBookingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRecurringBookingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RecurringBooking model
   */
  readonly fields: RecurringBookingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RecurringBooking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RecurringBookingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RecurringBooking model
   */
  interface RecurringBookingFieldRefs {
    readonly id: FieldRef<"RecurringBooking", 'Int'>
    readonly customerId: FieldRef<"RecurringBooking", 'Int'>
    readonly serviceId: FieldRef<"RecurringBooking", 'Int'>
    readonly interval: FieldRef<"RecurringBooking", 'String'>
    readonly nextRunDate: FieldRef<"RecurringBooking", 'DateTime'>
    readonly active: FieldRef<"RecurringBooking", 'Boolean'>
    readonly createdAt: FieldRef<"RecurringBooking", 'DateTime'>
    readonly updatedAt: FieldRef<"RecurringBooking", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RecurringBooking findUnique
   */
  export type RecurringBookingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * Filter, which RecurringBooking to fetch.
     */
    where: RecurringBookingWhereUniqueInput
  }

  /**
   * RecurringBooking findUniqueOrThrow
   */
  export type RecurringBookingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * Filter, which RecurringBooking to fetch.
     */
    where: RecurringBookingWhereUniqueInput
  }

  /**
   * RecurringBooking findFirst
   */
  export type RecurringBookingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * Filter, which RecurringBooking to fetch.
     */
    where?: RecurringBookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecurringBookings to fetch.
     */
    orderBy?: RecurringBookingOrderByWithRelationInput | RecurringBookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RecurringBookings.
     */
    cursor?: RecurringBookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecurringBookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecurringBookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RecurringBookings.
     */
    distinct?: RecurringBookingScalarFieldEnum | RecurringBookingScalarFieldEnum[]
  }

  /**
   * RecurringBooking findFirstOrThrow
   */
  export type RecurringBookingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * Filter, which RecurringBooking to fetch.
     */
    where?: RecurringBookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecurringBookings to fetch.
     */
    orderBy?: RecurringBookingOrderByWithRelationInput | RecurringBookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RecurringBookings.
     */
    cursor?: RecurringBookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecurringBookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecurringBookings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RecurringBookings.
     */
    distinct?: RecurringBookingScalarFieldEnum | RecurringBookingScalarFieldEnum[]
  }

  /**
   * RecurringBooking findMany
   */
  export type RecurringBookingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * Filter, which RecurringBookings to fetch.
     */
    where?: RecurringBookingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RecurringBookings to fetch.
     */
    orderBy?: RecurringBookingOrderByWithRelationInput | RecurringBookingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RecurringBookings.
     */
    cursor?: RecurringBookingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RecurringBookings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RecurringBookings.
     */
    skip?: number
    distinct?: RecurringBookingScalarFieldEnum | RecurringBookingScalarFieldEnum[]
  }

  /**
   * RecurringBooking create
   */
  export type RecurringBookingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * The data needed to create a RecurringBooking.
     */
    data: XOR<RecurringBookingCreateInput, RecurringBookingUncheckedCreateInput>
  }

  /**
   * RecurringBooking createMany
   */
  export type RecurringBookingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RecurringBookings.
     */
    data: RecurringBookingCreateManyInput | RecurringBookingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RecurringBooking createManyAndReturn
   */
  export type RecurringBookingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * The data used to create many RecurringBookings.
     */
    data: RecurringBookingCreateManyInput | RecurringBookingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RecurringBooking update
   */
  export type RecurringBookingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * The data needed to update a RecurringBooking.
     */
    data: XOR<RecurringBookingUpdateInput, RecurringBookingUncheckedUpdateInput>
    /**
     * Choose, which RecurringBooking to update.
     */
    where: RecurringBookingWhereUniqueInput
  }

  /**
   * RecurringBooking updateMany
   */
  export type RecurringBookingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RecurringBookings.
     */
    data: XOR<RecurringBookingUpdateManyMutationInput, RecurringBookingUncheckedUpdateManyInput>
    /**
     * Filter which RecurringBookings to update
     */
    where?: RecurringBookingWhereInput
    /**
     * Limit how many RecurringBookings to update.
     */
    limit?: number
  }

  /**
   * RecurringBooking updateManyAndReturn
   */
  export type RecurringBookingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * The data used to update RecurringBookings.
     */
    data: XOR<RecurringBookingUpdateManyMutationInput, RecurringBookingUncheckedUpdateManyInput>
    /**
     * Filter which RecurringBookings to update
     */
    where?: RecurringBookingWhereInput
    /**
     * Limit how many RecurringBookings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RecurringBooking upsert
   */
  export type RecurringBookingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * The filter to search for the RecurringBooking to update in case it exists.
     */
    where: RecurringBookingWhereUniqueInput
    /**
     * In case the RecurringBooking found by the `where` argument doesn't exist, create a new RecurringBooking with this data.
     */
    create: XOR<RecurringBookingCreateInput, RecurringBookingUncheckedCreateInput>
    /**
     * In case the RecurringBooking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RecurringBookingUpdateInput, RecurringBookingUncheckedUpdateInput>
  }

  /**
   * RecurringBooking delete
   */
  export type RecurringBookingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    /**
     * Filter which RecurringBooking to delete.
     */
    where: RecurringBookingWhereUniqueInput
  }

  /**
   * RecurringBooking deleteMany
   */
  export type RecurringBookingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RecurringBookings to delete
     */
    where?: RecurringBookingWhereInput
    /**
     * Limit how many RecurringBookings to delete.
     */
    limit?: number
  }

  /**
   * RecurringBooking without action
   */
  export type RecurringBookingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _avg: RefreshTokenAvgAggregateOutputType | null
    _sum: RefreshTokenSumAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    deviceId: number | null
  }

  export type RefreshTokenSumAggregateOutputType = {
    id: number | null
    userId: number | null
    deviceId: number | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: number | null
    token: string | null
    userId: number | null
    deviceId: number | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: number | null
    token: string | null
    userId: number | null
    deviceId: number | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    deviceId: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type RefreshTokenAvgAggregateInputType = {
    id?: true
    userId?: true
    deviceId?: true
  }

  export type RefreshTokenSumAggregateInputType = {
    id?: true
    userId?: true
    deviceId?: true
  }

  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    deviceId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    deviceId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    deviceId?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RefreshTokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RefreshTokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _avg?: RefreshTokenAvgAggregateInputType
    _sum?: RefreshTokenSumAggregateInputType
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: number
    token: string
    userId: number
    deviceId: number
    expiresAt: Date
    createdAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _avg: RefreshTokenAvgAggregateOutputType | null
    _sum: RefreshTokenSumAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    Device?: boolean | DeviceDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    Device?: boolean | DeviceDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    Device?: boolean | DeviceDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type RefreshTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "userId" | "deviceId" | "expiresAt" | "createdAt", ExtArgs["result"]["refreshToken"]>
  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Device?: boolean | DeviceDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Device?: boolean | DeviceDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Device?: boolean | DeviceDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      Device: Prisma.$DevicePayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token: string
      userId: number
      deviceId: number
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens and returns the data updated in the database.
     * @param {RefreshTokenUpdateManyAndReturnArgs} args - Arguments to update many RefreshTokens.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RefreshTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, RefreshTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Device<T extends DeviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DeviceDefaultArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'Int'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'Int'>
    readonly deviceId: FieldRef<"RefreshToken", 'Int'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
  }

  /**
   * RefreshToken updateManyAndReturn
   */
  export type RefreshTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to delete.
     */
    limit?: number
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
    staffId: number | null
    serviceId: number | null
    rating: number | null
  }

  export type ReviewSumAggregateOutputType = {
    id: number | null
    customerId: number | null
    staffId: number | null
    serviceId: number | null
    rating: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    staffId: number | null
    serviceId: number | null
    rating: number | null
    comment: string | null
    createdAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    staffId: number | null
    serviceId: number | null
    rating: number | null
    comment: string | null
    createdAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    customerId: number
    staffId: number
    serviceId: number
    rating: number
    comment: number
    createdAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    id?: true
    customerId?: true
    staffId?: true
    serviceId?: true
    rating?: true
  }

  export type ReviewSumAggregateInputType = {
    id?: true
    customerId?: true
    staffId?: true
    serviceId?: true
    rating?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    customerId?: true
    staffId?: true
    serviceId?: true
    rating?: true
    comment?: true
    createdAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    customerId?: true
    staffId?: true
    serviceId?: true
    rating?: true
    comment?: true
    createdAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    customerId?: true
    staffId?: true
    serviceId?: true
    rating?: true
    comment?: true
    createdAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: number
    customerId: number
    staffId: number
    serviceId: number
    rating: number
    comment: string
    createdAt: Date
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    staffId?: boolean
    serviceId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    staffId?: boolean
    serviceId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    staffId?: boolean
    serviceId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    customerId?: boolean
    staffId?: boolean
    serviceId?: boolean
    rating?: boolean
    comment?: boolean
    createdAt?: boolean
  }

  export type ReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "staffId" | "serviceId" | "rating" | "comment" | "createdAt", ExtArgs["result"]["review"]>
  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
      Service: Prisma.$ServicePayload<ExtArgs>
      Staff: Prisma.$StaffPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      staffId: number
      serviceId: number
      rating: number
      comment: string
      createdAt: Date
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews and returns the data updated in the database.
     * @param {ReviewUpdateManyAndReturnArgs} args - Arguments to update many Reviews.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, ReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Staff<T extends StaffDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StaffDefaultArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'Int'>
    readonly customerId: FieldRef<"Review", 'Int'>
    readonly staffId: FieldRef<"Review", 'Int'>
    readonly serviceId: FieldRef<"Review", 'Int'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly comment: FieldRef<"Review", 'String'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
  }

  /**
   * Review updateManyAndReturn
   */
  export type ReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to delete.
     */
    limit?: number
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model RewardPoint
   */

  export type AggregateRewardPoint = {
    _count: RewardPointCountAggregateOutputType | null
    _avg: RewardPointAvgAggregateOutputType | null
    _sum: RewardPointSumAggregateOutputType | null
    _min: RewardPointMinAggregateOutputType | null
    _max: RewardPointMaxAggregateOutputType | null
  }

  export type RewardPointAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
    points: number | null
  }

  export type RewardPointSumAggregateOutputType = {
    id: number | null
    customerId: number | null
    points: number | null
  }

  export type RewardPointMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    points: number | null
    reason: string | null
    createdAt: Date | null
  }

  export type RewardPointMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    points: number | null
    reason: string | null
    createdAt: Date | null
  }

  export type RewardPointCountAggregateOutputType = {
    id: number
    customerId: number
    points: number
    reason: number
    createdAt: number
    _all: number
  }


  export type RewardPointAvgAggregateInputType = {
    id?: true
    customerId?: true
    points?: true
  }

  export type RewardPointSumAggregateInputType = {
    id?: true
    customerId?: true
    points?: true
  }

  export type RewardPointMinAggregateInputType = {
    id?: true
    customerId?: true
    points?: true
    reason?: true
    createdAt?: true
  }

  export type RewardPointMaxAggregateInputType = {
    id?: true
    customerId?: true
    points?: true
    reason?: true
    createdAt?: true
  }

  export type RewardPointCountAggregateInputType = {
    id?: true
    customerId?: true
    points?: true
    reason?: true
    createdAt?: true
    _all?: true
  }

  export type RewardPointAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RewardPoint to aggregate.
     */
    where?: RewardPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RewardPoints to fetch.
     */
    orderBy?: RewardPointOrderByWithRelationInput | RewardPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RewardPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RewardPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RewardPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RewardPoints
    **/
    _count?: true | RewardPointCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RewardPointAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RewardPointSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RewardPointMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RewardPointMaxAggregateInputType
  }

  export type GetRewardPointAggregateType<T extends RewardPointAggregateArgs> = {
        [P in keyof T & keyof AggregateRewardPoint]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRewardPoint[P]>
      : GetScalarType<T[P], AggregateRewardPoint[P]>
  }




  export type RewardPointGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RewardPointWhereInput
    orderBy?: RewardPointOrderByWithAggregationInput | RewardPointOrderByWithAggregationInput[]
    by: RewardPointScalarFieldEnum[] | RewardPointScalarFieldEnum
    having?: RewardPointScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RewardPointCountAggregateInputType | true
    _avg?: RewardPointAvgAggregateInputType
    _sum?: RewardPointSumAggregateInputType
    _min?: RewardPointMinAggregateInputType
    _max?: RewardPointMaxAggregateInputType
  }

  export type RewardPointGroupByOutputType = {
    id: number
    customerId: number
    points: number
    reason: string | null
    createdAt: Date
    _count: RewardPointCountAggregateOutputType | null
    _avg: RewardPointAvgAggregateOutputType | null
    _sum: RewardPointSumAggregateOutputType | null
    _min: RewardPointMinAggregateOutputType | null
    _max: RewardPointMaxAggregateOutputType | null
  }

  type GetRewardPointGroupByPayload<T extends RewardPointGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RewardPointGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RewardPointGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RewardPointGroupByOutputType[P]>
            : GetScalarType<T[P], RewardPointGroupByOutputType[P]>
        }
      >
    >


  export type RewardPointSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    points?: boolean
    reason?: boolean
    createdAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rewardPoint"]>

  export type RewardPointSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    points?: boolean
    reason?: boolean
    createdAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rewardPoint"]>

  export type RewardPointSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    points?: boolean
    reason?: boolean
    createdAt?: boolean
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rewardPoint"]>

  export type RewardPointSelectScalar = {
    id?: boolean
    customerId?: boolean
    points?: boolean
    reason?: boolean
    createdAt?: boolean
  }

  export type RewardPointOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "points" | "reason" | "createdAt", ExtArgs["result"]["rewardPoint"]>
  export type RewardPointInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }
  export type RewardPointIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }
  export type RewardPointIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
  }

  export type $RewardPointPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RewardPoint"
    objects: {
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      points: number
      reason: string | null
      createdAt: Date
    }, ExtArgs["result"]["rewardPoint"]>
    composites: {}
  }

  type RewardPointGetPayload<S extends boolean | null | undefined | RewardPointDefaultArgs> = $Result.GetResult<Prisma.$RewardPointPayload, S>

  type RewardPointCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RewardPointFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RewardPointCountAggregateInputType | true
    }

  export interface RewardPointDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RewardPoint'], meta: { name: 'RewardPoint' } }
    /**
     * Find zero or one RewardPoint that matches the filter.
     * @param {RewardPointFindUniqueArgs} args - Arguments to find a RewardPoint
     * @example
     * // Get one RewardPoint
     * const rewardPoint = await prisma.rewardPoint.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RewardPointFindUniqueArgs>(args: SelectSubset<T, RewardPointFindUniqueArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RewardPoint that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RewardPointFindUniqueOrThrowArgs} args - Arguments to find a RewardPoint
     * @example
     * // Get one RewardPoint
     * const rewardPoint = await prisma.rewardPoint.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RewardPointFindUniqueOrThrowArgs>(args: SelectSubset<T, RewardPointFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RewardPoint that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointFindFirstArgs} args - Arguments to find a RewardPoint
     * @example
     * // Get one RewardPoint
     * const rewardPoint = await prisma.rewardPoint.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RewardPointFindFirstArgs>(args?: SelectSubset<T, RewardPointFindFirstArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RewardPoint that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointFindFirstOrThrowArgs} args - Arguments to find a RewardPoint
     * @example
     * // Get one RewardPoint
     * const rewardPoint = await prisma.rewardPoint.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RewardPointFindFirstOrThrowArgs>(args?: SelectSubset<T, RewardPointFindFirstOrThrowArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RewardPoints that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RewardPoints
     * const rewardPoints = await prisma.rewardPoint.findMany()
     * 
     * // Get first 10 RewardPoints
     * const rewardPoints = await prisma.rewardPoint.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rewardPointWithIdOnly = await prisma.rewardPoint.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RewardPointFindManyArgs>(args?: SelectSubset<T, RewardPointFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RewardPoint.
     * @param {RewardPointCreateArgs} args - Arguments to create a RewardPoint.
     * @example
     * // Create one RewardPoint
     * const RewardPoint = await prisma.rewardPoint.create({
     *   data: {
     *     // ... data to create a RewardPoint
     *   }
     * })
     * 
     */
    create<T extends RewardPointCreateArgs>(args: SelectSubset<T, RewardPointCreateArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RewardPoints.
     * @param {RewardPointCreateManyArgs} args - Arguments to create many RewardPoints.
     * @example
     * // Create many RewardPoints
     * const rewardPoint = await prisma.rewardPoint.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RewardPointCreateManyArgs>(args?: SelectSubset<T, RewardPointCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RewardPoints and returns the data saved in the database.
     * @param {RewardPointCreateManyAndReturnArgs} args - Arguments to create many RewardPoints.
     * @example
     * // Create many RewardPoints
     * const rewardPoint = await prisma.rewardPoint.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RewardPoints and only return the `id`
     * const rewardPointWithIdOnly = await prisma.rewardPoint.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RewardPointCreateManyAndReturnArgs>(args?: SelectSubset<T, RewardPointCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RewardPoint.
     * @param {RewardPointDeleteArgs} args - Arguments to delete one RewardPoint.
     * @example
     * // Delete one RewardPoint
     * const RewardPoint = await prisma.rewardPoint.delete({
     *   where: {
     *     // ... filter to delete one RewardPoint
     *   }
     * })
     * 
     */
    delete<T extends RewardPointDeleteArgs>(args: SelectSubset<T, RewardPointDeleteArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RewardPoint.
     * @param {RewardPointUpdateArgs} args - Arguments to update one RewardPoint.
     * @example
     * // Update one RewardPoint
     * const rewardPoint = await prisma.rewardPoint.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RewardPointUpdateArgs>(args: SelectSubset<T, RewardPointUpdateArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RewardPoints.
     * @param {RewardPointDeleteManyArgs} args - Arguments to filter RewardPoints to delete.
     * @example
     * // Delete a few RewardPoints
     * const { count } = await prisma.rewardPoint.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RewardPointDeleteManyArgs>(args?: SelectSubset<T, RewardPointDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RewardPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RewardPoints
     * const rewardPoint = await prisma.rewardPoint.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RewardPointUpdateManyArgs>(args: SelectSubset<T, RewardPointUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RewardPoints and returns the data updated in the database.
     * @param {RewardPointUpdateManyAndReturnArgs} args - Arguments to update many RewardPoints.
     * @example
     * // Update many RewardPoints
     * const rewardPoint = await prisma.rewardPoint.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RewardPoints and only return the `id`
     * const rewardPointWithIdOnly = await prisma.rewardPoint.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RewardPointUpdateManyAndReturnArgs>(args: SelectSubset<T, RewardPointUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RewardPoint.
     * @param {RewardPointUpsertArgs} args - Arguments to update or create a RewardPoint.
     * @example
     * // Update or create a RewardPoint
     * const rewardPoint = await prisma.rewardPoint.upsert({
     *   create: {
     *     // ... data to create a RewardPoint
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RewardPoint we want to update
     *   }
     * })
     */
    upsert<T extends RewardPointUpsertArgs>(args: SelectSubset<T, RewardPointUpsertArgs<ExtArgs>>): Prisma__RewardPointClient<$Result.GetResult<Prisma.$RewardPointPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RewardPoints.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointCountArgs} args - Arguments to filter RewardPoints to count.
     * @example
     * // Count the number of RewardPoints
     * const count = await prisma.rewardPoint.count({
     *   where: {
     *     // ... the filter for the RewardPoints we want to count
     *   }
     * })
    **/
    count<T extends RewardPointCountArgs>(
      args?: Subset<T, RewardPointCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RewardPointCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RewardPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RewardPointAggregateArgs>(args: Subset<T, RewardPointAggregateArgs>): Prisma.PrismaPromise<GetRewardPointAggregateType<T>>

    /**
     * Group by RewardPoint.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RewardPointGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RewardPointGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RewardPointGroupByArgs['orderBy'] }
        : { orderBy?: RewardPointGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RewardPointGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRewardPointGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RewardPoint model
   */
  readonly fields: RewardPointFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RewardPoint.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RewardPointClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RewardPoint model
   */
  interface RewardPointFieldRefs {
    readonly id: FieldRef<"RewardPoint", 'Int'>
    readonly customerId: FieldRef<"RewardPoint", 'Int'>
    readonly points: FieldRef<"RewardPoint", 'Int'>
    readonly reason: FieldRef<"RewardPoint", 'String'>
    readonly createdAt: FieldRef<"RewardPoint", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RewardPoint findUnique
   */
  export type RewardPointFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * Filter, which RewardPoint to fetch.
     */
    where: RewardPointWhereUniqueInput
  }

  /**
   * RewardPoint findUniqueOrThrow
   */
  export type RewardPointFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * Filter, which RewardPoint to fetch.
     */
    where: RewardPointWhereUniqueInput
  }

  /**
   * RewardPoint findFirst
   */
  export type RewardPointFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * Filter, which RewardPoint to fetch.
     */
    where?: RewardPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RewardPoints to fetch.
     */
    orderBy?: RewardPointOrderByWithRelationInput | RewardPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RewardPoints.
     */
    cursor?: RewardPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RewardPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RewardPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RewardPoints.
     */
    distinct?: RewardPointScalarFieldEnum | RewardPointScalarFieldEnum[]
  }

  /**
   * RewardPoint findFirstOrThrow
   */
  export type RewardPointFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * Filter, which RewardPoint to fetch.
     */
    where?: RewardPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RewardPoints to fetch.
     */
    orderBy?: RewardPointOrderByWithRelationInput | RewardPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RewardPoints.
     */
    cursor?: RewardPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RewardPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RewardPoints.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RewardPoints.
     */
    distinct?: RewardPointScalarFieldEnum | RewardPointScalarFieldEnum[]
  }

  /**
   * RewardPoint findMany
   */
  export type RewardPointFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * Filter, which RewardPoints to fetch.
     */
    where?: RewardPointWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RewardPoints to fetch.
     */
    orderBy?: RewardPointOrderByWithRelationInput | RewardPointOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RewardPoints.
     */
    cursor?: RewardPointWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RewardPoints from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RewardPoints.
     */
    skip?: number
    distinct?: RewardPointScalarFieldEnum | RewardPointScalarFieldEnum[]
  }

  /**
   * RewardPoint create
   */
  export type RewardPointCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * The data needed to create a RewardPoint.
     */
    data: XOR<RewardPointCreateInput, RewardPointUncheckedCreateInput>
  }

  /**
   * RewardPoint createMany
   */
  export type RewardPointCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RewardPoints.
     */
    data: RewardPointCreateManyInput | RewardPointCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RewardPoint createManyAndReturn
   */
  export type RewardPointCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * The data used to create many RewardPoints.
     */
    data: RewardPointCreateManyInput | RewardPointCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RewardPoint update
   */
  export type RewardPointUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * The data needed to update a RewardPoint.
     */
    data: XOR<RewardPointUpdateInput, RewardPointUncheckedUpdateInput>
    /**
     * Choose, which RewardPoint to update.
     */
    where: RewardPointWhereUniqueInput
  }

  /**
   * RewardPoint updateMany
   */
  export type RewardPointUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RewardPoints.
     */
    data: XOR<RewardPointUpdateManyMutationInput, RewardPointUncheckedUpdateManyInput>
    /**
     * Filter which RewardPoints to update
     */
    where?: RewardPointWhereInput
    /**
     * Limit how many RewardPoints to update.
     */
    limit?: number
  }

  /**
   * RewardPoint updateManyAndReturn
   */
  export type RewardPointUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * The data used to update RewardPoints.
     */
    data: XOR<RewardPointUpdateManyMutationInput, RewardPointUncheckedUpdateManyInput>
    /**
     * Filter which RewardPoints to update
     */
    where?: RewardPointWhereInput
    /**
     * Limit how many RewardPoints to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RewardPoint upsert
   */
  export type RewardPointUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * The filter to search for the RewardPoint to update in case it exists.
     */
    where: RewardPointWhereUniqueInput
    /**
     * In case the RewardPoint found by the `where` argument doesn't exist, create a new RewardPoint with this data.
     */
    create: XOR<RewardPointCreateInput, RewardPointUncheckedCreateInput>
    /**
     * In case the RewardPoint was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RewardPointUpdateInput, RewardPointUncheckedUpdateInput>
  }

  /**
   * RewardPoint delete
   */
  export type RewardPointDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
    /**
     * Filter which RewardPoint to delete.
     */
    where: RewardPointWhereUniqueInput
  }

  /**
   * RewardPoint deleteMany
   */
  export type RewardPointDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RewardPoints to delete
     */
    where?: RewardPointWhereInput
    /**
     * Limit how many RewardPoints to delete.
     */
    limit?: number
  }

  /**
   * RewardPoint without action
   */
  export type RewardPointDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RewardPoint
     */
    select?: RewardPointSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RewardPoint
     */
    omit?: RewardPointOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RewardPointInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Role_createdByIdToUser?: boolean | Role$User_Role_createdByIdToUserArgs<ExtArgs>
    User_Role_deletedByIdToUser?: boolean | Role$User_Role_deletedByIdToUserArgs<ExtArgs>
    User_Role_updatedByIdToUser?: boolean | Role$User_Role_updatedByIdToUserArgs<ExtArgs>
    Permission?: boolean | Role$PermissionArgs<ExtArgs>
    User_UserRoles?: boolean | Role$User_UserRolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Role_createdByIdToUser?: boolean | Role$User_Role_createdByIdToUserArgs<ExtArgs>
    User_Role_deletedByIdToUser?: boolean | Role$User_Role_deletedByIdToUserArgs<ExtArgs>
    User_Role_updatedByIdToUser?: boolean | Role$User_Role_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_Role_createdByIdToUser?: boolean | Role$User_Role_createdByIdToUserArgs<ExtArgs>
    User_Role_deletedByIdToUser?: boolean | Role$User_Role_deletedByIdToUserArgs<ExtArgs>
    User_Role_updatedByIdToUser?: boolean | Role$User_Role_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Role_createdByIdToUser?: boolean | Role$User_Role_createdByIdToUserArgs<ExtArgs>
    User_Role_deletedByIdToUser?: boolean | Role$User_Role_deletedByIdToUserArgs<ExtArgs>
    User_Role_updatedByIdToUser?: boolean | Role$User_Role_updatedByIdToUserArgs<ExtArgs>
    Permission?: boolean | Role$PermissionArgs<ExtArgs>
    User_UserRoles?: boolean | Role$User_UserRolesArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Role_createdByIdToUser?: boolean | Role$User_Role_createdByIdToUserArgs<ExtArgs>
    User_Role_deletedByIdToUser?: boolean | Role$User_Role_deletedByIdToUserArgs<ExtArgs>
    User_Role_updatedByIdToUser?: boolean | Role$User_Role_updatedByIdToUserArgs<ExtArgs>
  }
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_Role_createdByIdToUser?: boolean | Role$User_Role_createdByIdToUserArgs<ExtArgs>
    User_Role_deletedByIdToUser?: boolean | Role$User_Role_deletedByIdToUserArgs<ExtArgs>
    User_Role_updatedByIdToUser?: boolean | Role$User_Role_updatedByIdToUserArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      User_Role_createdByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Role_deletedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Role_updatedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      Permission: Prisma.$PermissionPayload<ExtArgs>[]
      User_UserRoles: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User_Role_createdByIdToUser<T extends Role$User_Role_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Role$User_Role_createdByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Role_deletedByIdToUser<T extends Role$User_Role_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Role$User_Role_deletedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Role_updatedByIdToUser<T extends Role$User_Role_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Role$User_Role_updatedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Permission<T extends Role$PermissionArgs<ExtArgs> = {}>(args?: Subset<T, Role$PermissionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_UserRoles<T extends Role$User_UserRolesArgs<ExtArgs> = {}>(args?: Subset<T, Role$User_UserRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
    readonly createdById: FieldRef<"Role", 'Int'>
    readonly updatedById: FieldRef<"Role", 'Int'>
    readonly deletedById: FieldRef<"Role", 'Int'>
    readonly deletedAt: FieldRef<"Role", 'DateTime'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.User_Role_createdByIdToUser
   */
  export type Role$User_Role_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Role.User_Role_deletedByIdToUser
   */
  export type Role$User_Role_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Role.User_Role_updatedByIdToUser
   */
  export type Role$User_Role_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Role.Permission
   */
  export type Role$PermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Role.User_UserRoles
   */
  export type Role$User_UserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Service
   */

  export type AggregateService = {
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  export type ServiceAvgAggregateOutputType = {
    id: number | null
    basePrice: number | null
    virtualPrice: number | null
    durationMinutes: number | null
    providerId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    categoryId: number | null
  }

  export type ServiceSumAggregateOutputType = {
    id: number | null
    basePrice: number | null
    virtualPrice: number | null
    durationMinutes: number | null
    providerId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    categoryId: number | null
  }

  export type ServiceMinAggregateOutputType = {
    id: number | null
    basePrice: number | null
    virtualPrice: number | null
    durationMinutes: number | null
    providerId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    publishedAt: Date | null
    description: string | null
    categoryId: number | null
    unit: $Enums.Unit | null
  }

  export type ServiceMaxAggregateOutputType = {
    id: number | null
    basePrice: number | null
    virtualPrice: number | null
    durationMinutes: number | null
    providerId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    name: string | null
    publishedAt: Date | null
    description: string | null
    categoryId: number | null
    unit: $Enums.Unit | null
  }

  export type ServiceCountAggregateOutputType = {
    id: number
    basePrice: number
    virtualPrice: number
    images: number
    durationMinutes: number
    providerId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    name: number
    publishedAt: number
    description: number
    categoryId: number
    unit: number
    _all: number
  }


  export type ServiceAvgAggregateInputType = {
    id?: true
    basePrice?: true
    virtualPrice?: true
    durationMinutes?: true
    providerId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    categoryId?: true
  }

  export type ServiceSumAggregateInputType = {
    id?: true
    basePrice?: true
    virtualPrice?: true
    durationMinutes?: true
    providerId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    categoryId?: true
  }

  export type ServiceMinAggregateInputType = {
    id?: true
    basePrice?: true
    virtualPrice?: true
    durationMinutes?: true
    providerId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    publishedAt?: true
    description?: true
    categoryId?: true
    unit?: true
  }

  export type ServiceMaxAggregateInputType = {
    id?: true
    basePrice?: true
    virtualPrice?: true
    durationMinutes?: true
    providerId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    publishedAt?: true
    description?: true
    categoryId?: true
    unit?: true
  }

  export type ServiceCountAggregateInputType = {
    id?: true
    basePrice?: true
    virtualPrice?: true
    images?: true
    durationMinutes?: true
    providerId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    name?: true
    publishedAt?: true
    description?: true
    categoryId?: true
    unit?: true
    _all?: true
  }

  export type ServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Service to aggregate.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Services
    **/
    _count?: true | ServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceMaxAggregateInputType
  }

  export type GetServiceAggregateType<T extends ServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService[P]>
      : GetScalarType<T[P], AggregateService[P]>
  }




  export type ServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithAggregationInput | ServiceOrderByWithAggregationInput[]
    by: ServiceScalarFieldEnum[] | ServiceScalarFieldEnum
    having?: ServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceCountAggregateInputType | true
    _avg?: ServiceAvgAggregateInputType
    _sum?: ServiceSumAggregateInputType
    _min?: ServiceMinAggregateInputType
    _max?: ServiceMaxAggregateInputType
  }

  export type ServiceGroupByOutputType = {
    id: number
    basePrice: number
    virtualPrice: number
    images: string[]
    durationMinutes: number
    providerId: number
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    name: string
    publishedAt: Date | null
    description: string
    categoryId: number
    unit: $Enums.Unit
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  type GetServiceGroupByPayload<T extends ServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceGroupByOutputType[P]>
        }
      >
    >


  export type ServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    basePrice?: boolean
    virtualPrice?: boolean
    images?: boolean
    durationMinutes?: boolean
    providerId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    publishedAt?: boolean
    description?: boolean
    categoryId?: boolean
    unit?: boolean
    ProposedService?: boolean | Service$ProposedServiceArgs<ExtArgs>
    RecurringBooking?: boolean | Service$RecurringBookingArgs<ExtArgs>
    Review?: boolean | Service$ReviewArgs<ExtArgs>
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    User_Service_createdByIdToUser?: boolean | Service$User_Service_createdByIdToUserArgs<ExtArgs>
    User_Service_deletedByIdToUser?: boolean | Service$User_Service_deletedByIdToUserArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User_Service_updatedByIdToUser?: boolean | Service$User_Service_updatedByIdToUserArgs<ExtArgs>
    ServiceTranslation?: boolean | Service$ServiceTranslationArgs<ExtArgs>
    Service_ServiceItems?: boolean | Service$Service_ServiceItemsArgs<ExtArgs>
    _count?: boolean | ServiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type ServiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    basePrice?: boolean
    virtualPrice?: boolean
    images?: boolean
    durationMinutes?: boolean
    providerId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    publishedAt?: boolean
    description?: boolean
    categoryId?: boolean
    unit?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    User_Service_createdByIdToUser?: boolean | Service$User_Service_createdByIdToUserArgs<ExtArgs>
    User_Service_deletedByIdToUser?: boolean | Service$User_Service_deletedByIdToUserArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User_Service_updatedByIdToUser?: boolean | Service$User_Service_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type ServiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    basePrice?: boolean
    virtualPrice?: boolean
    images?: boolean
    durationMinutes?: boolean
    providerId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    publishedAt?: boolean
    description?: boolean
    categoryId?: boolean
    unit?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    User_Service_createdByIdToUser?: boolean | Service$User_Service_createdByIdToUserArgs<ExtArgs>
    User_Service_deletedByIdToUser?: boolean | Service$User_Service_deletedByIdToUserArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User_Service_updatedByIdToUser?: boolean | Service$User_Service_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>

  export type ServiceSelectScalar = {
    id?: boolean
    basePrice?: boolean
    virtualPrice?: boolean
    images?: boolean
    durationMinutes?: boolean
    providerId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    name?: boolean
    publishedAt?: boolean
    description?: boolean
    categoryId?: boolean
    unit?: boolean
  }

  export type ServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "basePrice" | "virtualPrice" | "images" | "durationMinutes" | "providerId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt" | "name" | "publishedAt" | "description" | "categoryId" | "unit", ExtArgs["result"]["service"]>
  export type ServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProposedService?: boolean | Service$ProposedServiceArgs<ExtArgs>
    RecurringBooking?: boolean | Service$RecurringBookingArgs<ExtArgs>
    Review?: boolean | Service$ReviewArgs<ExtArgs>
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    User_Service_createdByIdToUser?: boolean | Service$User_Service_createdByIdToUserArgs<ExtArgs>
    User_Service_deletedByIdToUser?: boolean | Service$User_Service_deletedByIdToUserArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User_Service_updatedByIdToUser?: boolean | Service$User_Service_updatedByIdToUserArgs<ExtArgs>
    ServiceTranslation?: boolean | Service$ServiceTranslationArgs<ExtArgs>
    Service_ServiceItems?: boolean | Service$Service_ServiceItemsArgs<ExtArgs>
    _count?: boolean | ServiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ServiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    User_Service_createdByIdToUser?: boolean | Service$User_Service_createdByIdToUserArgs<ExtArgs>
    User_Service_deletedByIdToUser?: boolean | Service$User_Service_deletedByIdToUserArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User_Service_updatedByIdToUser?: boolean | Service$User_Service_updatedByIdToUserArgs<ExtArgs>
  }
  export type ServiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    User_Service_createdByIdToUser?: boolean | Service$User_Service_createdByIdToUserArgs<ExtArgs>
    User_Service_deletedByIdToUser?: boolean | Service$User_Service_deletedByIdToUserArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User_Service_updatedByIdToUser?: boolean | Service$User_Service_updatedByIdToUserArgs<ExtArgs>
  }

  export type $ServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Service"
    objects: {
      ProposedService: Prisma.$ProposedServicePayload<ExtArgs>[]
      RecurringBooking: Prisma.$RecurringBookingPayload<ExtArgs>[]
      Review: Prisma.$ReviewPayload<ExtArgs>[]
      Category: Prisma.$CategoryPayload<ExtArgs>
      User_Service_createdByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      User_Service_deletedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      ServiceProvider: Prisma.$ServiceProviderPayload<ExtArgs>
      User_Service_updatedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      ServiceTranslation: Prisma.$ServiceTranslationPayload<ExtArgs>[]
      Service_ServiceItems: Prisma.$Service_ServiceItemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      basePrice: number
      virtualPrice: number
      images: string[]
      durationMinutes: number
      providerId: number
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
      name: string
      publishedAt: Date | null
      description: string
      categoryId: number
      unit: $Enums.Unit
    }, ExtArgs["result"]["service"]>
    composites: {}
  }

  type ServiceGetPayload<S extends boolean | null | undefined | ServiceDefaultArgs> = $Result.GetResult<Prisma.$ServicePayload, S>

  type ServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceCountAggregateInputType | true
    }

  export interface ServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Service'], meta: { name: 'Service' } }
    /**
     * Find zero or one Service that matches the filter.
     * @param {ServiceFindUniqueArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceFindUniqueArgs>(args: SelectSubset<T, ServiceFindUniqueArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Service that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceFindUniqueOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindFirstArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceFindFirstArgs>(args?: SelectSubset<T, ServiceFindFirstArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindFirstOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services
     * const services = await prisma.service.findMany()
     * 
     * // Get first 10 Services
     * const services = await prisma.service.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceWithIdOnly = await prisma.service.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceFindManyArgs>(args?: SelectSubset<T, ServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Service.
     * @param {ServiceCreateArgs} args - Arguments to create a Service.
     * @example
     * // Create one Service
     * const Service = await prisma.service.create({
     *   data: {
     *     // ... data to create a Service
     *   }
     * })
     * 
     */
    create<T extends ServiceCreateArgs>(args: SelectSubset<T, ServiceCreateArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Services.
     * @param {ServiceCreateManyArgs} args - Arguments to create many Services.
     * @example
     * // Create many Services
     * const service = await prisma.service.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceCreateManyArgs>(args?: SelectSubset<T, ServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Services and returns the data saved in the database.
     * @param {ServiceCreateManyAndReturnArgs} args - Arguments to create many Services.
     * @example
     * // Create many Services
     * const service = await prisma.service.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Services and only return the `id`
     * const serviceWithIdOnly = await prisma.service.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Service.
     * @param {ServiceDeleteArgs} args - Arguments to delete one Service.
     * @example
     * // Delete one Service
     * const Service = await prisma.service.delete({
     *   where: {
     *     // ... filter to delete one Service
     *   }
     * })
     * 
     */
    delete<T extends ServiceDeleteArgs>(args: SelectSubset<T, ServiceDeleteArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Service.
     * @param {ServiceUpdateArgs} args - Arguments to update one Service.
     * @example
     * // Update one Service
     * const service = await prisma.service.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceUpdateArgs>(args: SelectSubset<T, ServiceUpdateArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Services.
     * @param {ServiceDeleteManyArgs} args - Arguments to filter Services to delete.
     * @example
     * // Delete a few Services
     * const { count } = await prisma.service.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceDeleteManyArgs>(args?: SelectSubset<T, ServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceUpdateManyArgs>(args: SelectSubset<T, ServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services and returns the data updated in the database.
     * @param {ServiceUpdateManyAndReturnArgs} args - Arguments to update many Services.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Services and only return the `id`
     * const serviceWithIdOnly = await prisma.service.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Service.
     * @param {ServiceUpsertArgs} args - Arguments to update or create a Service.
     * @example
     * // Update or create a Service
     * const service = await prisma.service.upsert({
     *   create: {
     *     // ... data to create a Service
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service we want to update
     *   }
     * })
     */
    upsert<T extends ServiceUpsertArgs>(args: SelectSubset<T, ServiceUpsertArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCountArgs} args - Arguments to filter Services to count.
     * @example
     * // Count the number of Services
     * const count = await prisma.service.count({
     *   where: {
     *     // ... the filter for the Services we want to count
     *   }
     * })
    **/
    count<T extends ServiceCountArgs>(
      args?: Subset<T, ServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceAggregateArgs>(args: Subset<T, ServiceAggregateArgs>): Prisma.PrismaPromise<GetServiceAggregateType<T>>

    /**
     * Group by Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceGroupByArgs['orderBy'] }
        : { orderBy?: ServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Service model
   */
  readonly fields: ServiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Service.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ProposedService<T extends Service$ProposedServiceArgs<ExtArgs> = {}>(args?: Subset<T, Service$ProposedServiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RecurringBooking<T extends Service$RecurringBookingArgs<ExtArgs> = {}>(args?: Subset<T, Service$RecurringBookingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecurringBookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Review<T extends Service$ReviewArgs<ExtArgs> = {}>(args?: Subset<T, Service$ReviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Service_createdByIdToUser<T extends Service$User_Service_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Service$User_Service_createdByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_Service_deletedByIdToUser<T extends Service$User_Service_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Service$User_Service_deletedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ServiceProvider<T extends ServiceProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProviderDefaultArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_Service_updatedByIdToUser<T extends Service$User_Service_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, Service$User_Service_updatedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ServiceTranslation<T extends Service$ServiceTranslationArgs<ExtArgs> = {}>(args?: Subset<T, Service$ServiceTranslationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Service_ServiceItems<T extends Service$Service_ServiceItemsArgs<ExtArgs> = {}>(args?: Subset<T, Service$Service_ServiceItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Service model
   */
  interface ServiceFieldRefs {
    readonly id: FieldRef<"Service", 'Int'>
    readonly basePrice: FieldRef<"Service", 'Float'>
    readonly virtualPrice: FieldRef<"Service", 'Float'>
    readonly images: FieldRef<"Service", 'String[]'>
    readonly durationMinutes: FieldRef<"Service", 'Int'>
    readonly providerId: FieldRef<"Service", 'Int'>
    readonly createdById: FieldRef<"Service", 'Int'>
    readonly updatedById: FieldRef<"Service", 'Int'>
    readonly deletedById: FieldRef<"Service", 'Int'>
    readonly deletedAt: FieldRef<"Service", 'DateTime'>
    readonly createdAt: FieldRef<"Service", 'DateTime'>
    readonly updatedAt: FieldRef<"Service", 'DateTime'>
    readonly name: FieldRef<"Service", 'String'>
    readonly publishedAt: FieldRef<"Service", 'DateTime'>
    readonly description: FieldRef<"Service", 'String'>
    readonly categoryId: FieldRef<"Service", 'Int'>
    readonly unit: FieldRef<"Service", 'Unit'>
  }
    

  // Custom InputTypes
  /**
   * Service findUnique
   */
  export type ServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service findUniqueOrThrow
   */
  export type ServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service findFirst
   */
  export type ServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service findFirstOrThrow
   */
  export type ServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service findMany
   */
  export type ServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Services to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service create
   */
  export type ServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Service.
     */
    data: XOR<ServiceCreateInput, ServiceUncheckedCreateInput>
  }

  /**
   * Service createMany
   */
  export type ServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Services.
     */
    data: ServiceCreateManyInput | ServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Service createManyAndReturn
   */
  export type ServiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * The data used to create many Services.
     */
    data: ServiceCreateManyInput | ServiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Service update
   */
  export type ServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Service.
     */
    data: XOR<ServiceUpdateInput, ServiceUncheckedUpdateInput>
    /**
     * Choose, which Service to update.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service updateMany
   */
  export type ServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Services.
     */
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyInput>
    /**
     * Filter which Services to update
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to update.
     */
    limit?: number
  }

  /**
   * Service updateManyAndReturn
   */
  export type ServiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * The data used to update Services.
     */
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyInput>
    /**
     * Filter which Services to update
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Service upsert
   */
  export type ServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Service to update in case it exists.
     */
    where: ServiceWhereUniqueInput
    /**
     * In case the Service found by the `where` argument doesn't exist, create a new Service with this data.
     */
    create: XOR<ServiceCreateInput, ServiceUncheckedCreateInput>
    /**
     * In case the Service was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceUpdateInput, ServiceUncheckedUpdateInput>
  }

  /**
   * Service delete
   */
  export type ServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter which Service to delete.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service deleteMany
   */
  export type ServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Services to delete
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to delete.
     */
    limit?: number
  }

  /**
   * Service.ProposedService
   */
  export type Service$ProposedServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    where?: ProposedServiceWhereInput
    orderBy?: ProposedServiceOrderByWithRelationInput | ProposedServiceOrderByWithRelationInput[]
    cursor?: ProposedServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProposedServiceScalarFieldEnum | ProposedServiceScalarFieldEnum[]
  }

  /**
   * Service.RecurringBooking
   */
  export type Service$RecurringBookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RecurringBooking
     */
    select?: RecurringBookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RecurringBooking
     */
    omit?: RecurringBookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecurringBookingInclude<ExtArgs> | null
    where?: RecurringBookingWhereInput
    orderBy?: RecurringBookingOrderByWithRelationInput | RecurringBookingOrderByWithRelationInput[]
    cursor?: RecurringBookingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecurringBookingScalarFieldEnum | RecurringBookingScalarFieldEnum[]
  }

  /**
   * Service.Review
   */
  export type Service$ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Service.User_Service_createdByIdToUser
   */
  export type Service$User_Service_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Service.User_Service_deletedByIdToUser
   */
  export type Service$User_Service_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Service.User_Service_updatedByIdToUser
   */
  export type Service$User_Service_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Service.ServiceTranslation
   */
  export type Service$ServiceTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    where?: ServiceTranslationWhereInput
    orderBy?: ServiceTranslationOrderByWithRelationInput | ServiceTranslationOrderByWithRelationInput[]
    cursor?: ServiceTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceTranslationScalarFieldEnum | ServiceTranslationScalarFieldEnum[]
  }

  /**
   * Service.Service_ServiceItems
   */
  export type Service$Service_ServiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    where?: Service_ServiceItemsWhereInput
    orderBy?: Service_ServiceItemsOrderByWithRelationInput | Service_ServiceItemsOrderByWithRelationInput[]
    cursor?: Service_ServiceItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Service_ServiceItemsScalarFieldEnum | Service_ServiceItemsScalarFieldEnum[]
  }

  /**
   * Service without action
   */
  export type ServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
  }


  /**
   * Model ServiceProvider
   */

  export type AggregateServiceProvider = {
    _count: ServiceProviderCountAggregateOutputType | null
    _avg: ServiceProviderAvgAggregateOutputType | null
    _sum: ServiceProviderSumAggregateOutputType | null
    _min: ServiceProviderMinAggregateOutputType | null
    _max: ServiceProviderMaxAggregateOutputType | null
  }

  export type ServiceProviderAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    verifiedById: number | null
  }

  export type ServiceProviderSumAggregateOutputType = {
    id: number | null
    userId: number | null
    verifiedById: number | null
  }

  export type ServiceProviderMinAggregateOutputType = {
    id: number | null
    description: string | null
    address: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: number | null
    companyType: $Enums.CompanyType | null
    industry: string | null
    licenseNo: string | null
    logo: string | null
    taxId: string | null
    verificationStatus: $Enums.VerificationStatus | null
    verifiedAt: Date | null
    verifiedById: number | null
  }

  export type ServiceProviderMaxAggregateOutputType = {
    id: number | null
    description: string | null
    address: string | null
    createdAt: Date | null
    updatedAt: Date | null
    userId: number | null
    companyType: $Enums.CompanyType | null
    industry: string | null
    licenseNo: string | null
    logo: string | null
    taxId: string | null
    verificationStatus: $Enums.VerificationStatus | null
    verifiedAt: Date | null
    verifiedById: number | null
  }

  export type ServiceProviderCountAggregateOutputType = {
    id: number
    description: number
    address: number
    createdAt: number
    updatedAt: number
    userId: number
    companyType: number
    industry: number
    licenseNo: number
    logo: number
    taxId: number
    verificationStatus: number
    verifiedAt: number
    verifiedById: number
    _all: number
  }


  export type ServiceProviderAvgAggregateInputType = {
    id?: true
    userId?: true
    verifiedById?: true
  }

  export type ServiceProviderSumAggregateInputType = {
    id?: true
    userId?: true
    verifiedById?: true
  }

  export type ServiceProviderMinAggregateInputType = {
    id?: true
    description?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    companyType?: true
    industry?: true
    licenseNo?: true
    logo?: true
    taxId?: true
    verificationStatus?: true
    verifiedAt?: true
    verifiedById?: true
  }

  export type ServiceProviderMaxAggregateInputType = {
    id?: true
    description?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    companyType?: true
    industry?: true
    licenseNo?: true
    logo?: true
    taxId?: true
    verificationStatus?: true
    verifiedAt?: true
    verifiedById?: true
  }

  export type ServiceProviderCountAggregateInputType = {
    id?: true
    description?: true
    address?: true
    createdAt?: true
    updatedAt?: true
    userId?: true
    companyType?: true
    industry?: true
    licenseNo?: true
    logo?: true
    taxId?: true
    verificationStatus?: true
    verifiedAt?: true
    verifiedById?: true
    _all?: true
  }

  export type ServiceProviderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceProvider to aggregate.
     */
    where?: ServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviders to fetch.
     */
    orderBy?: ServiceProviderOrderByWithRelationInput | ServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceProviders
    **/
    _count?: true | ServiceProviderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceProviderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceProviderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceProviderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceProviderMaxAggregateInputType
  }

  export type GetServiceProviderAggregateType<T extends ServiceProviderAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceProvider]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceProvider[P]>
      : GetScalarType<T[P], AggregateServiceProvider[P]>
  }




  export type ServiceProviderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceProviderWhereInput
    orderBy?: ServiceProviderOrderByWithAggregationInput | ServiceProviderOrderByWithAggregationInput[]
    by: ServiceProviderScalarFieldEnum[] | ServiceProviderScalarFieldEnum
    having?: ServiceProviderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceProviderCountAggregateInputType | true
    _avg?: ServiceProviderAvgAggregateInputType
    _sum?: ServiceProviderSumAggregateInputType
    _min?: ServiceProviderMinAggregateInputType
    _max?: ServiceProviderMaxAggregateInputType
  }

  export type ServiceProviderGroupByOutputType = {
    id: number
    description: string | null
    address: string
    createdAt: Date
    updatedAt: Date
    userId: number
    companyType: $Enums.CompanyType
    industry: string | null
    licenseNo: string | null
    logo: string | null
    taxId: string
    verificationStatus: $Enums.VerificationStatus
    verifiedAt: Date | null
    verifiedById: number | null
    _count: ServiceProviderCountAggregateOutputType | null
    _avg: ServiceProviderAvgAggregateOutputType | null
    _sum: ServiceProviderSumAggregateOutputType | null
    _min: ServiceProviderMinAggregateOutputType | null
    _max: ServiceProviderMaxAggregateOutputType | null
  }

  type GetServiceProviderGroupByPayload<T extends ServiceProviderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceProviderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceProviderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceProviderGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceProviderGroupByOutputType[P]>
        }
      >
    >


  export type ServiceProviderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    companyType?: boolean
    industry?: boolean
    licenseNo?: boolean
    logo?: boolean
    taxId?: boolean
    verificationStatus?: boolean
    verifiedAt?: boolean
    verifiedById?: boolean
    Booking?: boolean | ServiceProvider$BookingArgs<ExtArgs>
    Service?: boolean | ServiceProvider$ServiceArgs<ExtArgs>
    ServiceItem?: boolean | ServiceProvider$ServiceItemArgs<ExtArgs>
    User_ServiceProvider_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_ServiceProvider_verifiedByIdToUser?: boolean | ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
    ServiceProviderTranslation?: boolean | ServiceProvider$ServiceProviderTranslationArgs<ExtArgs>
    ServiceRequest?: boolean | ServiceProvider$ServiceRequestArgs<ExtArgs>
    Staff?: boolean | ServiceProvider$StaffArgs<ExtArgs>
    _count?: boolean | ServiceProviderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceProvider"]>

  export type ServiceProviderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    companyType?: boolean
    industry?: boolean
    licenseNo?: boolean
    logo?: boolean
    taxId?: boolean
    verificationStatus?: boolean
    verifiedAt?: boolean
    verifiedById?: boolean
    User_ServiceProvider_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_ServiceProvider_verifiedByIdToUser?: boolean | ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["serviceProvider"]>

  export type ServiceProviderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    companyType?: boolean
    industry?: boolean
    licenseNo?: boolean
    logo?: boolean
    taxId?: boolean
    verificationStatus?: boolean
    verifiedAt?: boolean
    verifiedById?: boolean
    User_ServiceProvider_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_ServiceProvider_verifiedByIdToUser?: boolean | ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["serviceProvider"]>

  export type ServiceProviderSelectScalar = {
    id?: boolean
    description?: boolean
    address?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userId?: boolean
    companyType?: boolean
    industry?: boolean
    licenseNo?: boolean
    logo?: boolean
    taxId?: boolean
    verificationStatus?: boolean
    verifiedAt?: boolean
    verifiedById?: boolean
  }

  export type ServiceProviderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "description" | "address" | "createdAt" | "updatedAt" | "userId" | "companyType" | "industry" | "licenseNo" | "logo" | "taxId" | "verificationStatus" | "verifiedAt" | "verifiedById", ExtArgs["result"]["serviceProvider"]>
  export type ServiceProviderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | ServiceProvider$BookingArgs<ExtArgs>
    Service?: boolean | ServiceProvider$ServiceArgs<ExtArgs>
    ServiceItem?: boolean | ServiceProvider$ServiceItemArgs<ExtArgs>
    User_ServiceProvider_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_ServiceProvider_verifiedByIdToUser?: boolean | ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
    ServiceProviderTranslation?: boolean | ServiceProvider$ServiceProviderTranslationArgs<ExtArgs>
    ServiceRequest?: boolean | ServiceProvider$ServiceRequestArgs<ExtArgs>
    Staff?: boolean | ServiceProvider$StaffArgs<ExtArgs>
    _count?: boolean | ServiceProviderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ServiceProviderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_ServiceProvider_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_ServiceProvider_verifiedByIdToUser?: boolean | ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
  }
  export type ServiceProviderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_ServiceProvider_userIdToUser?: boolean | UserDefaultArgs<ExtArgs>
    User_ServiceProvider_verifiedByIdToUser?: boolean | ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
  }

  export type $ServiceProviderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceProvider"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs>[]
      Service: Prisma.$ServicePayload<ExtArgs>[]
      ServiceItem: Prisma.$ServiceItemPayload<ExtArgs>[]
      User_ServiceProvider_userIdToUser: Prisma.$UserPayload<ExtArgs>
      User_ServiceProvider_verifiedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      ServiceProviderTranslation: Prisma.$ServiceProviderTranslationPayload<ExtArgs>[]
      ServiceRequest: Prisma.$ServiceRequestPayload<ExtArgs>[]
      Staff: Prisma.$StaffPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      description: string | null
      address: string
      createdAt: Date
      updatedAt: Date
      userId: number
      companyType: $Enums.CompanyType
      industry: string | null
      licenseNo: string | null
      logo: string | null
      taxId: string
      verificationStatus: $Enums.VerificationStatus
      verifiedAt: Date | null
      verifiedById: number | null
    }, ExtArgs["result"]["serviceProvider"]>
    composites: {}
  }

  type ServiceProviderGetPayload<S extends boolean | null | undefined | ServiceProviderDefaultArgs> = $Result.GetResult<Prisma.$ServiceProviderPayload, S>

  type ServiceProviderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceProviderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceProviderCountAggregateInputType | true
    }

  export interface ServiceProviderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceProvider'], meta: { name: 'ServiceProvider' } }
    /**
     * Find zero or one ServiceProvider that matches the filter.
     * @param {ServiceProviderFindUniqueArgs} args - Arguments to find a ServiceProvider
     * @example
     * // Get one ServiceProvider
     * const serviceProvider = await prisma.serviceProvider.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceProviderFindUniqueArgs>(args: SelectSubset<T, ServiceProviderFindUniqueArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceProvider that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceProviderFindUniqueOrThrowArgs} args - Arguments to find a ServiceProvider
     * @example
     * // Get one ServiceProvider
     * const serviceProvider = await prisma.serviceProvider.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceProviderFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceProviderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceProvider that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderFindFirstArgs} args - Arguments to find a ServiceProvider
     * @example
     * // Get one ServiceProvider
     * const serviceProvider = await prisma.serviceProvider.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceProviderFindFirstArgs>(args?: SelectSubset<T, ServiceProviderFindFirstArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceProvider that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderFindFirstOrThrowArgs} args - Arguments to find a ServiceProvider
     * @example
     * // Get one ServiceProvider
     * const serviceProvider = await prisma.serviceProvider.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceProviderFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceProviderFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceProviders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceProviders
     * const serviceProviders = await prisma.serviceProvider.findMany()
     * 
     * // Get first 10 ServiceProviders
     * const serviceProviders = await prisma.serviceProvider.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceProviderWithIdOnly = await prisma.serviceProvider.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceProviderFindManyArgs>(args?: SelectSubset<T, ServiceProviderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceProvider.
     * @param {ServiceProviderCreateArgs} args - Arguments to create a ServiceProvider.
     * @example
     * // Create one ServiceProvider
     * const ServiceProvider = await prisma.serviceProvider.create({
     *   data: {
     *     // ... data to create a ServiceProvider
     *   }
     * })
     * 
     */
    create<T extends ServiceProviderCreateArgs>(args: SelectSubset<T, ServiceProviderCreateArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceProviders.
     * @param {ServiceProviderCreateManyArgs} args - Arguments to create many ServiceProviders.
     * @example
     * // Create many ServiceProviders
     * const serviceProvider = await prisma.serviceProvider.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceProviderCreateManyArgs>(args?: SelectSubset<T, ServiceProviderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceProviders and returns the data saved in the database.
     * @param {ServiceProviderCreateManyAndReturnArgs} args - Arguments to create many ServiceProviders.
     * @example
     * // Create many ServiceProviders
     * const serviceProvider = await prisma.serviceProvider.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceProviders and only return the `id`
     * const serviceProviderWithIdOnly = await prisma.serviceProvider.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceProviderCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceProviderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceProvider.
     * @param {ServiceProviderDeleteArgs} args - Arguments to delete one ServiceProvider.
     * @example
     * // Delete one ServiceProvider
     * const ServiceProvider = await prisma.serviceProvider.delete({
     *   where: {
     *     // ... filter to delete one ServiceProvider
     *   }
     * })
     * 
     */
    delete<T extends ServiceProviderDeleteArgs>(args: SelectSubset<T, ServiceProviderDeleteArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceProvider.
     * @param {ServiceProviderUpdateArgs} args - Arguments to update one ServiceProvider.
     * @example
     * // Update one ServiceProvider
     * const serviceProvider = await prisma.serviceProvider.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceProviderUpdateArgs>(args: SelectSubset<T, ServiceProviderUpdateArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceProviders.
     * @param {ServiceProviderDeleteManyArgs} args - Arguments to filter ServiceProviders to delete.
     * @example
     * // Delete a few ServiceProviders
     * const { count } = await prisma.serviceProvider.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceProviderDeleteManyArgs>(args?: SelectSubset<T, ServiceProviderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceProviders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceProviders
     * const serviceProvider = await prisma.serviceProvider.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceProviderUpdateManyArgs>(args: SelectSubset<T, ServiceProviderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceProviders and returns the data updated in the database.
     * @param {ServiceProviderUpdateManyAndReturnArgs} args - Arguments to update many ServiceProviders.
     * @example
     * // Update many ServiceProviders
     * const serviceProvider = await prisma.serviceProvider.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceProviders and only return the `id`
     * const serviceProviderWithIdOnly = await prisma.serviceProvider.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceProviderUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceProviderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceProvider.
     * @param {ServiceProviderUpsertArgs} args - Arguments to update or create a ServiceProvider.
     * @example
     * // Update or create a ServiceProvider
     * const serviceProvider = await prisma.serviceProvider.upsert({
     *   create: {
     *     // ... data to create a ServiceProvider
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceProvider we want to update
     *   }
     * })
     */
    upsert<T extends ServiceProviderUpsertArgs>(args: SelectSubset<T, ServiceProviderUpsertArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceProviders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderCountArgs} args - Arguments to filter ServiceProviders to count.
     * @example
     * // Count the number of ServiceProviders
     * const count = await prisma.serviceProvider.count({
     *   where: {
     *     // ... the filter for the ServiceProviders we want to count
     *   }
     * })
    **/
    count<T extends ServiceProviderCountArgs>(
      args?: Subset<T, ServiceProviderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceProviderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceProvider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceProviderAggregateArgs>(args: Subset<T, ServiceProviderAggregateArgs>): Prisma.PrismaPromise<GetServiceProviderAggregateType<T>>

    /**
     * Group by ServiceProvider.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceProviderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceProviderGroupByArgs['orderBy'] }
        : { orderBy?: ServiceProviderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceProviderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceProviderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceProvider model
   */
  readonly fields: ServiceProviderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceProvider.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceProviderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends ServiceProvider$BookingArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$BookingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Service<T extends ServiceProvider$ServiceArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$ServiceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceItem<T extends ServiceProvider$ServiceItemArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$ServiceItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_ServiceProvider_userIdToUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User_ServiceProvider_verifiedByIdToUser<T extends ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ServiceProviderTranslation<T extends ServiceProvider$ServiceProviderTranslationArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$ServiceProviderTranslationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceRequest<T extends ServiceProvider$ServiceRequestArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$ServiceRequestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Staff<T extends ServiceProvider$StaffArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProvider$StaffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceProvider model
   */
  interface ServiceProviderFieldRefs {
    readonly id: FieldRef<"ServiceProvider", 'Int'>
    readonly description: FieldRef<"ServiceProvider", 'String'>
    readonly address: FieldRef<"ServiceProvider", 'String'>
    readonly createdAt: FieldRef<"ServiceProvider", 'DateTime'>
    readonly updatedAt: FieldRef<"ServiceProvider", 'DateTime'>
    readonly userId: FieldRef<"ServiceProvider", 'Int'>
    readonly companyType: FieldRef<"ServiceProvider", 'CompanyType'>
    readonly industry: FieldRef<"ServiceProvider", 'String'>
    readonly licenseNo: FieldRef<"ServiceProvider", 'String'>
    readonly logo: FieldRef<"ServiceProvider", 'String'>
    readonly taxId: FieldRef<"ServiceProvider", 'String'>
    readonly verificationStatus: FieldRef<"ServiceProvider", 'VerificationStatus'>
    readonly verifiedAt: FieldRef<"ServiceProvider", 'DateTime'>
    readonly verifiedById: FieldRef<"ServiceProvider", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ServiceProvider findUnique
   */
  export type ServiceProviderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProvider to fetch.
     */
    where: ServiceProviderWhereUniqueInput
  }

  /**
   * ServiceProvider findUniqueOrThrow
   */
  export type ServiceProviderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProvider to fetch.
     */
    where: ServiceProviderWhereUniqueInput
  }

  /**
   * ServiceProvider findFirst
   */
  export type ServiceProviderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProvider to fetch.
     */
    where?: ServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviders to fetch.
     */
    orderBy?: ServiceProviderOrderByWithRelationInput | ServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceProviders.
     */
    cursor?: ServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceProviders.
     */
    distinct?: ServiceProviderScalarFieldEnum | ServiceProviderScalarFieldEnum[]
  }

  /**
   * ServiceProvider findFirstOrThrow
   */
  export type ServiceProviderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProvider to fetch.
     */
    where?: ServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviders to fetch.
     */
    orderBy?: ServiceProviderOrderByWithRelationInput | ServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceProviders.
     */
    cursor?: ServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceProviders.
     */
    distinct?: ServiceProviderScalarFieldEnum | ServiceProviderScalarFieldEnum[]
  }

  /**
   * ServiceProvider findMany
   */
  export type ServiceProviderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProviders to fetch.
     */
    where?: ServiceProviderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviders to fetch.
     */
    orderBy?: ServiceProviderOrderByWithRelationInput | ServiceProviderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceProviders.
     */
    cursor?: ServiceProviderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviders.
     */
    skip?: number
    distinct?: ServiceProviderScalarFieldEnum | ServiceProviderScalarFieldEnum[]
  }

  /**
   * ServiceProvider create
   */
  export type ServiceProviderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceProvider.
     */
    data: XOR<ServiceProviderCreateInput, ServiceProviderUncheckedCreateInput>
  }

  /**
   * ServiceProvider createMany
   */
  export type ServiceProviderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceProviders.
     */
    data: ServiceProviderCreateManyInput | ServiceProviderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceProvider createManyAndReturn
   */
  export type ServiceProviderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceProviders.
     */
    data: ServiceProviderCreateManyInput | ServiceProviderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceProvider update
   */
  export type ServiceProviderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceProvider.
     */
    data: XOR<ServiceProviderUpdateInput, ServiceProviderUncheckedUpdateInput>
    /**
     * Choose, which ServiceProvider to update.
     */
    where: ServiceProviderWhereUniqueInput
  }

  /**
   * ServiceProvider updateMany
   */
  export type ServiceProviderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceProviders.
     */
    data: XOR<ServiceProviderUpdateManyMutationInput, ServiceProviderUncheckedUpdateManyInput>
    /**
     * Filter which ServiceProviders to update
     */
    where?: ServiceProviderWhereInput
    /**
     * Limit how many ServiceProviders to update.
     */
    limit?: number
  }

  /**
   * ServiceProvider updateManyAndReturn
   */
  export type ServiceProviderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * The data used to update ServiceProviders.
     */
    data: XOR<ServiceProviderUpdateManyMutationInput, ServiceProviderUncheckedUpdateManyInput>
    /**
     * Filter which ServiceProviders to update
     */
    where?: ServiceProviderWhereInput
    /**
     * Limit how many ServiceProviders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceProvider upsert
   */
  export type ServiceProviderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceProvider to update in case it exists.
     */
    where: ServiceProviderWhereUniqueInput
    /**
     * In case the ServiceProvider found by the `where` argument doesn't exist, create a new ServiceProvider with this data.
     */
    create: XOR<ServiceProviderCreateInput, ServiceProviderUncheckedCreateInput>
    /**
     * In case the ServiceProvider was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceProviderUpdateInput, ServiceProviderUncheckedUpdateInput>
  }

  /**
   * ServiceProvider delete
   */
  export type ServiceProviderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    /**
     * Filter which ServiceProvider to delete.
     */
    where: ServiceProviderWhereUniqueInput
  }

  /**
   * ServiceProvider deleteMany
   */
  export type ServiceProviderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceProviders to delete
     */
    where?: ServiceProviderWhereInput
    /**
     * Limit how many ServiceProviders to delete.
     */
    limit?: number
  }

  /**
   * ServiceProvider.Booking
   */
  export type ServiceProvider$BookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    where?: BookingWhereInput
    orderBy?: BookingOrderByWithRelationInput | BookingOrderByWithRelationInput[]
    cursor?: BookingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BookingScalarFieldEnum | BookingScalarFieldEnum[]
  }

  /**
   * ServiceProvider.Service
   */
  export type ServiceProvider$ServiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * ServiceProvider.ServiceItem
   */
  export type ServiceProvider$ServiceItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    where?: ServiceItemWhereInput
    orderBy?: ServiceItemOrderByWithRelationInput | ServiceItemOrderByWithRelationInput[]
    cursor?: ServiceItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceItemScalarFieldEnum | ServiceItemScalarFieldEnum[]
  }

  /**
   * ServiceProvider.User_ServiceProvider_verifiedByIdToUser
   */
  export type ServiceProvider$User_ServiceProvider_verifiedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ServiceProvider.ServiceProviderTranslation
   */
  export type ServiceProvider$ServiceProviderTranslationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    where?: ServiceProviderTranslationWhereInput
    orderBy?: ServiceProviderTranslationOrderByWithRelationInput | ServiceProviderTranslationOrderByWithRelationInput[]
    cursor?: ServiceProviderTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceProviderTranslationScalarFieldEnum | ServiceProviderTranslationScalarFieldEnum[]
  }

  /**
   * ServiceProvider.ServiceRequest
   */
  export type ServiceProvider$ServiceRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    where?: ServiceRequestWhereInput
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    cursor?: ServiceRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceRequestScalarFieldEnum | ServiceRequestScalarFieldEnum[]
  }

  /**
   * ServiceProvider.Staff
   */
  export type ServiceProvider$StaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    where?: StaffWhereInput
    orderBy?: StaffOrderByWithRelationInput | StaffOrderByWithRelationInput[]
    cursor?: StaffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * ServiceProvider without action
   */
  export type ServiceProviderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
  }


  /**
   * Model ServiceProviderTranslation
   */

  export type AggregateServiceProviderTranslation = {
    _count: ServiceProviderTranslationCountAggregateOutputType | null
    _avg: ServiceProviderTranslationAvgAggregateOutputType | null
    _sum: ServiceProviderTranslationSumAggregateOutputType | null
    _min: ServiceProviderTranslationMinAggregateOutputType | null
    _max: ServiceProviderTranslationMaxAggregateOutputType | null
  }

  export type ServiceProviderTranslationAvgAggregateOutputType = {
    id: number | null
    providerId: number | null
  }

  export type ServiceProviderTranslationSumAggregateOutputType = {
    id: number | null
    providerId: number | null
  }

  export type ServiceProviderTranslationMinAggregateOutputType = {
    id: number | null
    providerId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ServiceProviderTranslationMaxAggregateOutputType = {
    id: number | null
    providerId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ServiceProviderTranslationCountAggregateOutputType = {
    id: number
    providerId: number
    languageId: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ServiceProviderTranslationAvgAggregateInputType = {
    id?: true
    providerId?: true
  }

  export type ServiceProviderTranslationSumAggregateInputType = {
    id?: true
    providerId?: true
  }

  export type ServiceProviderTranslationMinAggregateInputType = {
    id?: true
    providerId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ServiceProviderTranslationMaxAggregateInputType = {
    id?: true
    providerId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ServiceProviderTranslationCountAggregateInputType = {
    id?: true
    providerId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ServiceProviderTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceProviderTranslation to aggregate.
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviderTranslations to fetch.
     */
    orderBy?: ServiceProviderTranslationOrderByWithRelationInput | ServiceProviderTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceProviderTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviderTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviderTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceProviderTranslations
    **/
    _count?: true | ServiceProviderTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceProviderTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceProviderTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceProviderTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceProviderTranslationMaxAggregateInputType
  }

  export type GetServiceProviderTranslationAggregateType<T extends ServiceProviderTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceProviderTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceProviderTranslation[P]>
      : GetScalarType<T[P], AggregateServiceProviderTranslation[P]>
  }




  export type ServiceProviderTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceProviderTranslationWhereInput
    orderBy?: ServiceProviderTranslationOrderByWithAggregationInput | ServiceProviderTranslationOrderByWithAggregationInput[]
    by: ServiceProviderTranslationScalarFieldEnum[] | ServiceProviderTranslationScalarFieldEnum
    having?: ServiceProviderTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceProviderTranslationCountAggregateInputType | true
    _avg?: ServiceProviderTranslationAvgAggregateInputType
    _sum?: ServiceProviderTranslationSumAggregateInputType
    _min?: ServiceProviderTranslationMinAggregateInputType
    _max?: ServiceProviderTranslationMaxAggregateInputType
  }

  export type ServiceProviderTranslationGroupByOutputType = {
    id: number
    providerId: number
    languageId: string
    name: string
    description: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ServiceProviderTranslationCountAggregateOutputType | null
    _avg: ServiceProviderTranslationAvgAggregateOutputType | null
    _sum: ServiceProviderTranslationSumAggregateOutputType | null
    _min: ServiceProviderTranslationMinAggregateOutputType | null
    _max: ServiceProviderTranslationMaxAggregateOutputType | null
  }

  type GetServiceProviderTranslationGroupByPayload<T extends ServiceProviderTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceProviderTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceProviderTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceProviderTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceProviderTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ServiceProviderTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceProviderTranslation"]>

  export type ServiceProviderTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceProviderTranslation"]>

  export type ServiceProviderTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    providerId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceProviderTranslation"]>

  export type ServiceProviderTranslationSelectScalar = {
    id?: boolean
    providerId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ServiceProviderTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "providerId" | "languageId" | "name" | "description" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["serviceProviderTranslation"]>
  export type ServiceProviderTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }
  export type ServiceProviderTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }
  export type ServiceProviderTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }

  export type $ServiceProviderTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceProviderTranslation"
    objects: {
      Language: Prisma.$LanguagePayload<ExtArgs>
      ServiceProvider: Prisma.$ServiceProviderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      providerId: number
      languageId: string
      name: string
      description: string | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["serviceProviderTranslation"]>
    composites: {}
  }

  type ServiceProviderTranslationGetPayload<S extends boolean | null | undefined | ServiceProviderTranslationDefaultArgs> = $Result.GetResult<Prisma.$ServiceProviderTranslationPayload, S>

  type ServiceProviderTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceProviderTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceProviderTranslationCountAggregateInputType | true
    }

  export interface ServiceProviderTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceProviderTranslation'], meta: { name: 'ServiceProviderTranslation' } }
    /**
     * Find zero or one ServiceProviderTranslation that matches the filter.
     * @param {ServiceProviderTranslationFindUniqueArgs} args - Arguments to find a ServiceProviderTranslation
     * @example
     * // Get one ServiceProviderTranslation
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceProviderTranslationFindUniqueArgs>(args: SelectSubset<T, ServiceProviderTranslationFindUniqueArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceProviderTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceProviderTranslationFindUniqueOrThrowArgs} args - Arguments to find a ServiceProviderTranslation
     * @example
     * // Get one ServiceProviderTranslation
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceProviderTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceProviderTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceProviderTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationFindFirstArgs} args - Arguments to find a ServiceProviderTranslation
     * @example
     * // Get one ServiceProviderTranslation
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceProviderTranslationFindFirstArgs>(args?: SelectSubset<T, ServiceProviderTranslationFindFirstArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceProviderTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationFindFirstOrThrowArgs} args - Arguments to find a ServiceProviderTranslation
     * @example
     * // Get one ServiceProviderTranslation
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceProviderTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceProviderTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceProviderTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceProviderTranslations
     * const serviceProviderTranslations = await prisma.serviceProviderTranslation.findMany()
     * 
     * // Get first 10 ServiceProviderTranslations
     * const serviceProviderTranslations = await prisma.serviceProviderTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceProviderTranslationWithIdOnly = await prisma.serviceProviderTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceProviderTranslationFindManyArgs>(args?: SelectSubset<T, ServiceProviderTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceProviderTranslation.
     * @param {ServiceProviderTranslationCreateArgs} args - Arguments to create a ServiceProviderTranslation.
     * @example
     * // Create one ServiceProviderTranslation
     * const ServiceProviderTranslation = await prisma.serviceProviderTranslation.create({
     *   data: {
     *     // ... data to create a ServiceProviderTranslation
     *   }
     * })
     * 
     */
    create<T extends ServiceProviderTranslationCreateArgs>(args: SelectSubset<T, ServiceProviderTranslationCreateArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceProviderTranslations.
     * @param {ServiceProviderTranslationCreateManyArgs} args - Arguments to create many ServiceProviderTranslations.
     * @example
     * // Create many ServiceProviderTranslations
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceProviderTranslationCreateManyArgs>(args?: SelectSubset<T, ServiceProviderTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceProviderTranslations and returns the data saved in the database.
     * @param {ServiceProviderTranslationCreateManyAndReturnArgs} args - Arguments to create many ServiceProviderTranslations.
     * @example
     * // Create many ServiceProviderTranslations
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceProviderTranslations and only return the `id`
     * const serviceProviderTranslationWithIdOnly = await prisma.serviceProviderTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceProviderTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceProviderTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceProviderTranslation.
     * @param {ServiceProviderTranslationDeleteArgs} args - Arguments to delete one ServiceProviderTranslation.
     * @example
     * // Delete one ServiceProviderTranslation
     * const ServiceProviderTranslation = await prisma.serviceProviderTranslation.delete({
     *   where: {
     *     // ... filter to delete one ServiceProviderTranslation
     *   }
     * })
     * 
     */
    delete<T extends ServiceProviderTranslationDeleteArgs>(args: SelectSubset<T, ServiceProviderTranslationDeleteArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceProviderTranslation.
     * @param {ServiceProviderTranslationUpdateArgs} args - Arguments to update one ServiceProviderTranslation.
     * @example
     * // Update one ServiceProviderTranslation
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceProviderTranslationUpdateArgs>(args: SelectSubset<T, ServiceProviderTranslationUpdateArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceProviderTranslations.
     * @param {ServiceProviderTranslationDeleteManyArgs} args - Arguments to filter ServiceProviderTranslations to delete.
     * @example
     * // Delete a few ServiceProviderTranslations
     * const { count } = await prisma.serviceProviderTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceProviderTranslationDeleteManyArgs>(args?: SelectSubset<T, ServiceProviderTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceProviderTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceProviderTranslations
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceProviderTranslationUpdateManyArgs>(args: SelectSubset<T, ServiceProviderTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceProviderTranslations and returns the data updated in the database.
     * @param {ServiceProviderTranslationUpdateManyAndReturnArgs} args - Arguments to update many ServiceProviderTranslations.
     * @example
     * // Update many ServiceProviderTranslations
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceProviderTranslations and only return the `id`
     * const serviceProviderTranslationWithIdOnly = await prisma.serviceProviderTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceProviderTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceProviderTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceProviderTranslation.
     * @param {ServiceProviderTranslationUpsertArgs} args - Arguments to update or create a ServiceProviderTranslation.
     * @example
     * // Update or create a ServiceProviderTranslation
     * const serviceProviderTranslation = await prisma.serviceProviderTranslation.upsert({
     *   create: {
     *     // ... data to create a ServiceProviderTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceProviderTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ServiceProviderTranslationUpsertArgs>(args: SelectSubset<T, ServiceProviderTranslationUpsertArgs<ExtArgs>>): Prisma__ServiceProviderTranslationClient<$Result.GetResult<Prisma.$ServiceProviderTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceProviderTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationCountArgs} args - Arguments to filter ServiceProviderTranslations to count.
     * @example
     * // Count the number of ServiceProviderTranslations
     * const count = await prisma.serviceProviderTranslation.count({
     *   where: {
     *     // ... the filter for the ServiceProviderTranslations we want to count
     *   }
     * })
    **/
    count<T extends ServiceProviderTranslationCountArgs>(
      args?: Subset<T, ServiceProviderTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceProviderTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceProviderTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceProviderTranslationAggregateArgs>(args: Subset<T, ServiceProviderTranslationAggregateArgs>): Prisma.PrismaPromise<GetServiceProviderTranslationAggregateType<T>>

    /**
     * Group by ServiceProviderTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceProviderTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceProviderTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceProviderTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ServiceProviderTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceProviderTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceProviderTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceProviderTranslation model
   */
  readonly fields: ServiceProviderTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceProviderTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceProviderTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ServiceProvider<T extends ServiceProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProviderDefaultArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceProviderTranslation model
   */
  interface ServiceProviderTranslationFieldRefs {
    readonly id: FieldRef<"ServiceProviderTranslation", 'Int'>
    readonly providerId: FieldRef<"ServiceProviderTranslation", 'Int'>
    readonly languageId: FieldRef<"ServiceProviderTranslation", 'String'>
    readonly name: FieldRef<"ServiceProviderTranslation", 'String'>
    readonly description: FieldRef<"ServiceProviderTranslation", 'String'>
    readonly createdAt: FieldRef<"ServiceProviderTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"ServiceProviderTranslation", 'DateTime'>
    readonly deletedAt: FieldRef<"ServiceProviderTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ServiceProviderTranslation findUnique
   */
  export type ServiceProviderTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProviderTranslation to fetch.
     */
    where: ServiceProviderTranslationWhereUniqueInput
  }

  /**
   * ServiceProviderTranslation findUniqueOrThrow
   */
  export type ServiceProviderTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProviderTranslation to fetch.
     */
    where: ServiceProviderTranslationWhereUniqueInput
  }

  /**
   * ServiceProviderTranslation findFirst
   */
  export type ServiceProviderTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProviderTranslation to fetch.
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviderTranslations to fetch.
     */
    orderBy?: ServiceProviderTranslationOrderByWithRelationInput | ServiceProviderTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceProviderTranslations.
     */
    cursor?: ServiceProviderTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviderTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviderTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceProviderTranslations.
     */
    distinct?: ServiceProviderTranslationScalarFieldEnum | ServiceProviderTranslationScalarFieldEnum[]
  }

  /**
   * ServiceProviderTranslation findFirstOrThrow
   */
  export type ServiceProviderTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProviderTranslation to fetch.
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviderTranslations to fetch.
     */
    orderBy?: ServiceProviderTranslationOrderByWithRelationInput | ServiceProviderTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceProviderTranslations.
     */
    cursor?: ServiceProviderTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviderTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviderTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceProviderTranslations.
     */
    distinct?: ServiceProviderTranslationScalarFieldEnum | ServiceProviderTranslationScalarFieldEnum[]
  }

  /**
   * ServiceProviderTranslation findMany
   */
  export type ServiceProviderTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceProviderTranslations to fetch.
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceProviderTranslations to fetch.
     */
    orderBy?: ServiceProviderTranslationOrderByWithRelationInput | ServiceProviderTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceProviderTranslations.
     */
    cursor?: ServiceProviderTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceProviderTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceProviderTranslations.
     */
    skip?: number
    distinct?: ServiceProviderTranslationScalarFieldEnum | ServiceProviderTranslationScalarFieldEnum[]
  }

  /**
   * ServiceProviderTranslation create
   */
  export type ServiceProviderTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceProviderTranslation.
     */
    data: XOR<ServiceProviderTranslationCreateInput, ServiceProviderTranslationUncheckedCreateInput>
  }

  /**
   * ServiceProviderTranslation createMany
   */
  export type ServiceProviderTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceProviderTranslations.
     */
    data: ServiceProviderTranslationCreateManyInput | ServiceProviderTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceProviderTranslation createManyAndReturn
   */
  export type ServiceProviderTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceProviderTranslations.
     */
    data: ServiceProviderTranslationCreateManyInput | ServiceProviderTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceProviderTranslation update
   */
  export type ServiceProviderTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceProviderTranslation.
     */
    data: XOR<ServiceProviderTranslationUpdateInput, ServiceProviderTranslationUncheckedUpdateInput>
    /**
     * Choose, which ServiceProviderTranslation to update.
     */
    where: ServiceProviderTranslationWhereUniqueInput
  }

  /**
   * ServiceProviderTranslation updateMany
   */
  export type ServiceProviderTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceProviderTranslations.
     */
    data: XOR<ServiceProviderTranslationUpdateManyMutationInput, ServiceProviderTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ServiceProviderTranslations to update
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * Limit how many ServiceProviderTranslations to update.
     */
    limit?: number
  }

  /**
   * ServiceProviderTranslation updateManyAndReturn
   */
  export type ServiceProviderTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ServiceProviderTranslations.
     */
    data: XOR<ServiceProviderTranslationUpdateManyMutationInput, ServiceProviderTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ServiceProviderTranslations to update
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * Limit how many ServiceProviderTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceProviderTranslation upsert
   */
  export type ServiceProviderTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceProviderTranslation to update in case it exists.
     */
    where: ServiceProviderTranslationWhereUniqueInput
    /**
     * In case the ServiceProviderTranslation found by the `where` argument doesn't exist, create a new ServiceProviderTranslation with this data.
     */
    create: XOR<ServiceProviderTranslationCreateInput, ServiceProviderTranslationUncheckedCreateInput>
    /**
     * In case the ServiceProviderTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceProviderTranslationUpdateInput, ServiceProviderTranslationUncheckedUpdateInput>
  }

  /**
   * ServiceProviderTranslation delete
   */
  export type ServiceProviderTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
    /**
     * Filter which ServiceProviderTranslation to delete.
     */
    where: ServiceProviderTranslationWhereUniqueInput
  }

  /**
   * ServiceProviderTranslation deleteMany
   */
  export type ServiceProviderTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceProviderTranslations to delete
     */
    where?: ServiceProviderTranslationWhereInput
    /**
     * Limit how many ServiceProviderTranslations to delete.
     */
    limit?: number
  }

  /**
   * ServiceProviderTranslation without action
   */
  export type ServiceProviderTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProviderTranslation
     */
    select?: ServiceProviderTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProviderTranslation
     */
    omit?: ServiceProviderTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderTranslationInclude<ExtArgs> | null
  }


  /**
   * Model ServiceTranslation
   */

  export type AggregateServiceTranslation = {
    _count: ServiceTranslationCountAggregateOutputType | null
    _avg: ServiceTranslationAvgAggregateOutputType | null
    _sum: ServiceTranslationSumAggregateOutputType | null
    _min: ServiceTranslationMinAggregateOutputType | null
    _max: ServiceTranslationMaxAggregateOutputType | null
  }

  export type ServiceTranslationAvgAggregateOutputType = {
    id: number | null
    serviceId: number | null
  }

  export type ServiceTranslationSumAggregateOutputType = {
    id: number | null
    serviceId: number | null
  }

  export type ServiceTranslationMinAggregateOutputType = {
    id: number | null
    serviceId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ServiceTranslationMaxAggregateOutputType = {
    id: number | null
    serviceId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ServiceTranslationCountAggregateOutputType = {
    id: number
    serviceId: number
    languageId: number
    name: number
    description: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ServiceTranslationAvgAggregateInputType = {
    id?: true
    serviceId?: true
  }

  export type ServiceTranslationSumAggregateInputType = {
    id?: true
    serviceId?: true
  }

  export type ServiceTranslationMinAggregateInputType = {
    id?: true
    serviceId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ServiceTranslationMaxAggregateInputType = {
    id?: true
    serviceId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ServiceTranslationCountAggregateInputType = {
    id?: true
    serviceId?: true
    languageId?: true
    name?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ServiceTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceTranslation to aggregate.
     */
    where?: ServiceTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceTranslations to fetch.
     */
    orderBy?: ServiceTranslationOrderByWithRelationInput | ServiceTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceTranslations
    **/
    _count?: true | ServiceTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceTranslationMaxAggregateInputType
  }

  export type GetServiceTranslationAggregateType<T extends ServiceTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceTranslation[P]>
      : GetScalarType<T[P], AggregateServiceTranslation[P]>
  }




  export type ServiceTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceTranslationWhereInput
    orderBy?: ServiceTranslationOrderByWithAggregationInput | ServiceTranslationOrderByWithAggregationInput[]
    by: ServiceTranslationScalarFieldEnum[] | ServiceTranslationScalarFieldEnum
    having?: ServiceTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceTranslationCountAggregateInputType | true
    _avg?: ServiceTranslationAvgAggregateInputType
    _sum?: ServiceTranslationSumAggregateInputType
    _min?: ServiceTranslationMinAggregateInputType
    _max?: ServiceTranslationMaxAggregateInputType
  }

  export type ServiceTranslationGroupByOutputType = {
    id: number
    serviceId: number
    languageId: string
    name: string
    description: string
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ServiceTranslationCountAggregateOutputType | null
    _avg: ServiceTranslationAvgAggregateOutputType | null
    _sum: ServiceTranslationSumAggregateOutputType | null
    _min: ServiceTranslationMinAggregateOutputType | null
    _max: ServiceTranslationMaxAggregateOutputType | null
  }

  type GetServiceTranslationGroupByPayload<T extends ServiceTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ServiceTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceTranslation"]>

  export type ServiceTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceTranslation"]>

  export type ServiceTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceTranslation"]>

  export type ServiceTranslationSelectScalar = {
    id?: boolean
    serviceId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ServiceTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "serviceId" | "languageId" | "name" | "description" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["serviceTranslation"]>
  export type ServiceTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }
  export type ServiceTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }
  export type ServiceTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Language?: boolean | LanguageDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }

  export type $ServiceTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceTranslation"
    objects: {
      Language: Prisma.$LanguagePayload<ExtArgs>
      Service: Prisma.$ServicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      serviceId: number
      languageId: string
      name: string
      description: string
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["serviceTranslation"]>
    composites: {}
  }

  type ServiceTranslationGetPayload<S extends boolean | null | undefined | ServiceTranslationDefaultArgs> = $Result.GetResult<Prisma.$ServiceTranslationPayload, S>

  type ServiceTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceTranslationCountAggregateInputType | true
    }

  export interface ServiceTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceTranslation'], meta: { name: 'ServiceTranslation' } }
    /**
     * Find zero or one ServiceTranslation that matches the filter.
     * @param {ServiceTranslationFindUniqueArgs} args - Arguments to find a ServiceTranslation
     * @example
     * // Get one ServiceTranslation
     * const serviceTranslation = await prisma.serviceTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceTranslationFindUniqueArgs>(args: SelectSubset<T, ServiceTranslationFindUniqueArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceTranslationFindUniqueOrThrowArgs} args - Arguments to find a ServiceTranslation
     * @example
     * // Get one ServiceTranslation
     * const serviceTranslation = await prisma.serviceTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationFindFirstArgs} args - Arguments to find a ServiceTranslation
     * @example
     * // Get one ServiceTranslation
     * const serviceTranslation = await prisma.serviceTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceTranslationFindFirstArgs>(args?: SelectSubset<T, ServiceTranslationFindFirstArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationFindFirstOrThrowArgs} args - Arguments to find a ServiceTranslation
     * @example
     * // Get one ServiceTranslation
     * const serviceTranslation = await prisma.serviceTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceTranslations
     * const serviceTranslations = await prisma.serviceTranslation.findMany()
     * 
     * // Get first 10 ServiceTranslations
     * const serviceTranslations = await prisma.serviceTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceTranslationWithIdOnly = await prisma.serviceTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceTranslationFindManyArgs>(args?: SelectSubset<T, ServiceTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceTranslation.
     * @param {ServiceTranslationCreateArgs} args - Arguments to create a ServiceTranslation.
     * @example
     * // Create one ServiceTranslation
     * const ServiceTranslation = await prisma.serviceTranslation.create({
     *   data: {
     *     // ... data to create a ServiceTranslation
     *   }
     * })
     * 
     */
    create<T extends ServiceTranslationCreateArgs>(args: SelectSubset<T, ServiceTranslationCreateArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceTranslations.
     * @param {ServiceTranslationCreateManyArgs} args - Arguments to create many ServiceTranslations.
     * @example
     * // Create many ServiceTranslations
     * const serviceTranslation = await prisma.serviceTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceTranslationCreateManyArgs>(args?: SelectSubset<T, ServiceTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceTranslations and returns the data saved in the database.
     * @param {ServiceTranslationCreateManyAndReturnArgs} args - Arguments to create many ServiceTranslations.
     * @example
     * // Create many ServiceTranslations
     * const serviceTranslation = await prisma.serviceTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceTranslations and only return the `id`
     * const serviceTranslationWithIdOnly = await prisma.serviceTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceTranslation.
     * @param {ServiceTranslationDeleteArgs} args - Arguments to delete one ServiceTranslation.
     * @example
     * // Delete one ServiceTranslation
     * const ServiceTranslation = await prisma.serviceTranslation.delete({
     *   where: {
     *     // ... filter to delete one ServiceTranslation
     *   }
     * })
     * 
     */
    delete<T extends ServiceTranslationDeleteArgs>(args: SelectSubset<T, ServiceTranslationDeleteArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceTranslation.
     * @param {ServiceTranslationUpdateArgs} args - Arguments to update one ServiceTranslation.
     * @example
     * // Update one ServiceTranslation
     * const serviceTranslation = await prisma.serviceTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceTranslationUpdateArgs>(args: SelectSubset<T, ServiceTranslationUpdateArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceTranslations.
     * @param {ServiceTranslationDeleteManyArgs} args - Arguments to filter ServiceTranslations to delete.
     * @example
     * // Delete a few ServiceTranslations
     * const { count } = await prisma.serviceTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceTranslationDeleteManyArgs>(args?: SelectSubset<T, ServiceTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceTranslations
     * const serviceTranslation = await prisma.serviceTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceTranslationUpdateManyArgs>(args: SelectSubset<T, ServiceTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceTranslations and returns the data updated in the database.
     * @param {ServiceTranslationUpdateManyAndReturnArgs} args - Arguments to update many ServiceTranslations.
     * @example
     * // Update many ServiceTranslations
     * const serviceTranslation = await prisma.serviceTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceTranslations and only return the `id`
     * const serviceTranslationWithIdOnly = await prisma.serviceTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceTranslation.
     * @param {ServiceTranslationUpsertArgs} args - Arguments to update or create a ServiceTranslation.
     * @example
     * // Update or create a ServiceTranslation
     * const serviceTranslation = await prisma.serviceTranslation.upsert({
     *   create: {
     *     // ... data to create a ServiceTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ServiceTranslationUpsertArgs>(args: SelectSubset<T, ServiceTranslationUpsertArgs<ExtArgs>>): Prisma__ServiceTranslationClient<$Result.GetResult<Prisma.$ServiceTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationCountArgs} args - Arguments to filter ServiceTranslations to count.
     * @example
     * // Count the number of ServiceTranslations
     * const count = await prisma.serviceTranslation.count({
     *   where: {
     *     // ... the filter for the ServiceTranslations we want to count
     *   }
     * })
    **/
    count<T extends ServiceTranslationCountArgs>(
      args?: Subset<T, ServiceTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceTranslationAggregateArgs>(args: Subset<T, ServiceTranslationAggregateArgs>): Prisma.PrismaPromise<GetServiceTranslationAggregateType<T>>

    /**
     * Group by ServiceTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ServiceTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceTranslation model
   */
  readonly fields: ServiceTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceTranslation model
   */
  interface ServiceTranslationFieldRefs {
    readonly id: FieldRef<"ServiceTranslation", 'Int'>
    readonly serviceId: FieldRef<"ServiceTranslation", 'Int'>
    readonly languageId: FieldRef<"ServiceTranslation", 'String'>
    readonly name: FieldRef<"ServiceTranslation", 'String'>
    readonly description: FieldRef<"ServiceTranslation", 'String'>
    readonly createdAt: FieldRef<"ServiceTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"ServiceTranslation", 'DateTime'>
    readonly deletedAt: FieldRef<"ServiceTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ServiceTranslation findUnique
   */
  export type ServiceTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceTranslation to fetch.
     */
    where: ServiceTranslationWhereUniqueInput
  }

  /**
   * ServiceTranslation findUniqueOrThrow
   */
  export type ServiceTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceTranslation to fetch.
     */
    where: ServiceTranslationWhereUniqueInput
  }

  /**
   * ServiceTranslation findFirst
   */
  export type ServiceTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceTranslation to fetch.
     */
    where?: ServiceTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceTranslations to fetch.
     */
    orderBy?: ServiceTranslationOrderByWithRelationInput | ServiceTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceTranslations.
     */
    cursor?: ServiceTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceTranslations.
     */
    distinct?: ServiceTranslationScalarFieldEnum | ServiceTranslationScalarFieldEnum[]
  }

  /**
   * ServiceTranslation findFirstOrThrow
   */
  export type ServiceTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceTranslation to fetch.
     */
    where?: ServiceTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceTranslations to fetch.
     */
    orderBy?: ServiceTranslationOrderByWithRelationInput | ServiceTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceTranslations.
     */
    cursor?: ServiceTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceTranslations.
     */
    distinct?: ServiceTranslationScalarFieldEnum | ServiceTranslationScalarFieldEnum[]
  }

  /**
   * ServiceTranslation findMany
   */
  export type ServiceTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ServiceTranslations to fetch.
     */
    where?: ServiceTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceTranslations to fetch.
     */
    orderBy?: ServiceTranslationOrderByWithRelationInput | ServiceTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceTranslations.
     */
    cursor?: ServiceTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceTranslations.
     */
    skip?: number
    distinct?: ServiceTranslationScalarFieldEnum | ServiceTranslationScalarFieldEnum[]
  }

  /**
   * ServiceTranslation create
   */
  export type ServiceTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceTranslation.
     */
    data: XOR<ServiceTranslationCreateInput, ServiceTranslationUncheckedCreateInput>
  }

  /**
   * ServiceTranslation createMany
   */
  export type ServiceTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceTranslations.
     */
    data: ServiceTranslationCreateManyInput | ServiceTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceTranslation createManyAndReturn
   */
  export type ServiceTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceTranslations.
     */
    data: ServiceTranslationCreateManyInput | ServiceTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceTranslation update
   */
  export type ServiceTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceTranslation.
     */
    data: XOR<ServiceTranslationUpdateInput, ServiceTranslationUncheckedUpdateInput>
    /**
     * Choose, which ServiceTranslation to update.
     */
    where: ServiceTranslationWhereUniqueInput
  }

  /**
   * ServiceTranslation updateMany
   */
  export type ServiceTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceTranslations.
     */
    data: XOR<ServiceTranslationUpdateManyMutationInput, ServiceTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ServiceTranslations to update
     */
    where?: ServiceTranslationWhereInput
    /**
     * Limit how many ServiceTranslations to update.
     */
    limit?: number
  }

  /**
   * ServiceTranslation updateManyAndReturn
   */
  export type ServiceTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ServiceTranslations.
     */
    data: XOR<ServiceTranslationUpdateManyMutationInput, ServiceTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ServiceTranslations to update
     */
    where?: ServiceTranslationWhereInput
    /**
     * Limit how many ServiceTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceTranslation upsert
   */
  export type ServiceTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceTranslation to update in case it exists.
     */
    where: ServiceTranslationWhereUniqueInput
    /**
     * In case the ServiceTranslation found by the `where` argument doesn't exist, create a new ServiceTranslation with this data.
     */
    create: XOR<ServiceTranslationCreateInput, ServiceTranslationUncheckedCreateInput>
    /**
     * In case the ServiceTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceTranslationUpdateInput, ServiceTranslationUncheckedUpdateInput>
  }

  /**
   * ServiceTranslation delete
   */
  export type ServiceTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
    /**
     * Filter which ServiceTranslation to delete.
     */
    where: ServiceTranslationWhereUniqueInput
  }

  /**
   * ServiceTranslation deleteMany
   */
  export type ServiceTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceTranslations to delete
     */
    where?: ServiceTranslationWhereInput
    /**
     * Limit how many ServiceTranslations to delete.
     */
    limit?: number
  }

  /**
   * ServiceTranslation without action
   */
  export type ServiceTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceTranslation
     */
    select?: ServiceTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceTranslation
     */
    omit?: ServiceTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceTranslationInclude<ExtArgs> | null
  }


  /**
   * Model Staff
   */

  export type AggregateStaff = {
    _count: StaffCountAggregateOutputType | null
    _avg: StaffAvgAggregateOutputType | null
    _sum: StaffSumAggregateOutputType | null
    _min: StaffMinAggregateOutputType | null
    _max: StaffMaxAggregateOutputType | null
  }

  export type StaffAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    providerId: number | null
  }

  export type StaffSumAggregateOutputType = {
    id: number | null
    userId: number | null
    providerId: number | null
  }

  export type StaffMinAggregateOutputType = {
    id: number | null
    userId: number | null
    providerId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    isActive: boolean | null
  }

  export type StaffMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    providerId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    isActive: boolean | null
  }

  export type StaffCountAggregateOutputType = {
    id: number
    userId: number
    providerId: number
    createdAt: number
    updatedAt: number
    isActive: number
    _all: number
  }


  export type StaffAvgAggregateInputType = {
    id?: true
    userId?: true
    providerId?: true
  }

  export type StaffSumAggregateInputType = {
    id?: true
    userId?: true
    providerId?: true
  }

  export type StaffMinAggregateInputType = {
    id?: true
    userId?: true
    providerId?: true
    createdAt?: true
    updatedAt?: true
    isActive?: true
  }

  export type StaffMaxAggregateInputType = {
    id?: true
    userId?: true
    providerId?: true
    createdAt?: true
    updatedAt?: true
    isActive?: true
  }

  export type StaffCountAggregateInputType = {
    id?: true
    userId?: true
    providerId?: true
    createdAt?: true
    updatedAt?: true
    isActive?: true
    _all?: true
  }

  export type StaffAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Staff to aggregate.
     */
    where?: StaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Staff to fetch.
     */
    orderBy?: StaffOrderByWithRelationInput | StaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Staff.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Staff
    **/
    _count?: true | StaffCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StaffAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StaffSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StaffMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StaffMaxAggregateInputType
  }

  export type GetStaffAggregateType<T extends StaffAggregateArgs> = {
        [P in keyof T & keyof AggregateStaff]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaff[P]>
      : GetScalarType<T[P], AggregateStaff[P]>
  }




  export type StaffGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StaffWhereInput
    orderBy?: StaffOrderByWithAggregationInput | StaffOrderByWithAggregationInput[]
    by: StaffScalarFieldEnum[] | StaffScalarFieldEnum
    having?: StaffScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StaffCountAggregateInputType | true
    _avg?: StaffAvgAggregateInputType
    _sum?: StaffSumAggregateInputType
    _min?: StaffMinAggregateInputType
    _max?: StaffMaxAggregateInputType
  }

  export type StaffGroupByOutputType = {
    id: number
    userId: number
    providerId: number
    createdAt: Date
    updatedAt: Date
    isActive: boolean
    _count: StaffCountAggregateOutputType | null
    _avg: StaffAvgAggregateOutputType | null
    _sum: StaffSumAggregateOutputType | null
    _min: StaffMinAggregateOutputType | null
    _max: StaffMaxAggregateOutputType | null
  }

  type GetStaffGroupByPayload<T extends StaffGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StaffGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StaffGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StaffGroupByOutputType[P]>
            : GetScalarType<T[P], StaffGroupByOutputType[P]>
        }
      >
    >


  export type StaffSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    providerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: boolean | Staff$Booking_Booking_staffIdToStaffArgs<ExtArgs>
    InspectionReport?: boolean | Staff$InspectionReportArgs<ExtArgs>
    Review?: boolean | Staff$ReviewArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    StaffCategory?: boolean | Staff$StaffCategoryArgs<ExtArgs>
    WorkLog?: boolean | Staff$WorkLogArgs<ExtArgs>
    _count?: boolean | StaffCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff"]>

  export type StaffSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    providerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isActive?: boolean
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff"]>

  export type StaffSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    providerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isActive?: boolean
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staff"]>

  export type StaffSelectScalar = {
    id?: boolean
    userId?: boolean
    providerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isActive?: boolean
  }

  export type StaffOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "providerId" | "createdAt" | "updatedAt" | "isActive", ExtArgs["result"]["staff"]>
  export type StaffInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking_Booking_staffIdToStaff?: boolean | Staff$Booking_Booking_staffIdToStaffArgs<ExtArgs>
    InspectionReport?: boolean | Staff$InspectionReportArgs<ExtArgs>
    Review?: boolean | Staff$ReviewArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
    StaffCategory?: boolean | Staff$StaffCategoryArgs<ExtArgs>
    WorkLog?: boolean | Staff$WorkLogArgs<ExtArgs>
    _count?: boolean | StaffCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StaffIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type StaffIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $StaffPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Staff"
    objects: {
      Booking_Booking_staffIdToStaff: Prisma.$BookingPayload<ExtArgs> | null
      InspectionReport: Prisma.$InspectionReportPayload<ExtArgs>[]
      Review: Prisma.$ReviewPayload<ExtArgs>[]
      ServiceProvider: Prisma.$ServiceProviderPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
      StaffCategory: Prisma.$StaffCategoryPayload<ExtArgs>[]
      WorkLog: Prisma.$WorkLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      providerId: number
      createdAt: Date
      updatedAt: Date
      isActive: boolean
    }, ExtArgs["result"]["staff"]>
    composites: {}
  }

  type StaffGetPayload<S extends boolean | null | undefined | StaffDefaultArgs> = $Result.GetResult<Prisma.$StaffPayload, S>

  type StaffCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StaffFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StaffCountAggregateInputType | true
    }

  export interface StaffDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Staff'], meta: { name: 'Staff' } }
    /**
     * Find zero or one Staff that matches the filter.
     * @param {StaffFindUniqueArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StaffFindUniqueArgs>(args: SelectSubset<T, StaffFindUniqueArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Staff that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StaffFindUniqueOrThrowArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StaffFindUniqueOrThrowArgs>(args: SelectSubset<T, StaffFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffFindFirstArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StaffFindFirstArgs>(args?: SelectSubset<T, StaffFindFirstArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Staff that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffFindFirstOrThrowArgs} args - Arguments to find a Staff
     * @example
     * // Get one Staff
     * const staff = await prisma.staff.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StaffFindFirstOrThrowArgs>(args?: SelectSubset<T, StaffFindFirstOrThrowArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Staff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Staff
     * const staff = await prisma.staff.findMany()
     * 
     * // Get first 10 Staff
     * const staff = await prisma.staff.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const staffWithIdOnly = await prisma.staff.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StaffFindManyArgs>(args?: SelectSubset<T, StaffFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Staff.
     * @param {StaffCreateArgs} args - Arguments to create a Staff.
     * @example
     * // Create one Staff
     * const Staff = await prisma.staff.create({
     *   data: {
     *     // ... data to create a Staff
     *   }
     * })
     * 
     */
    create<T extends StaffCreateArgs>(args: SelectSubset<T, StaffCreateArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Staff.
     * @param {StaffCreateManyArgs} args - Arguments to create many Staff.
     * @example
     * // Create many Staff
     * const staff = await prisma.staff.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StaffCreateManyArgs>(args?: SelectSubset<T, StaffCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Staff and returns the data saved in the database.
     * @param {StaffCreateManyAndReturnArgs} args - Arguments to create many Staff.
     * @example
     * // Create many Staff
     * const staff = await prisma.staff.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Staff and only return the `id`
     * const staffWithIdOnly = await prisma.staff.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StaffCreateManyAndReturnArgs>(args?: SelectSubset<T, StaffCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Staff.
     * @param {StaffDeleteArgs} args - Arguments to delete one Staff.
     * @example
     * // Delete one Staff
     * const Staff = await prisma.staff.delete({
     *   where: {
     *     // ... filter to delete one Staff
     *   }
     * })
     * 
     */
    delete<T extends StaffDeleteArgs>(args: SelectSubset<T, StaffDeleteArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Staff.
     * @param {StaffUpdateArgs} args - Arguments to update one Staff.
     * @example
     * // Update one Staff
     * const staff = await prisma.staff.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StaffUpdateArgs>(args: SelectSubset<T, StaffUpdateArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Staff.
     * @param {StaffDeleteManyArgs} args - Arguments to filter Staff to delete.
     * @example
     * // Delete a few Staff
     * const { count } = await prisma.staff.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StaffDeleteManyArgs>(args?: SelectSubset<T, StaffDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Staff
     * const staff = await prisma.staff.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StaffUpdateManyArgs>(args: SelectSubset<T, StaffUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Staff and returns the data updated in the database.
     * @param {StaffUpdateManyAndReturnArgs} args - Arguments to update many Staff.
     * @example
     * // Update many Staff
     * const staff = await prisma.staff.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Staff and only return the `id`
     * const staffWithIdOnly = await prisma.staff.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StaffUpdateManyAndReturnArgs>(args: SelectSubset<T, StaffUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Staff.
     * @param {StaffUpsertArgs} args - Arguments to update or create a Staff.
     * @example
     * // Update or create a Staff
     * const staff = await prisma.staff.upsert({
     *   create: {
     *     // ... data to create a Staff
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Staff we want to update
     *   }
     * })
     */
    upsert<T extends StaffUpsertArgs>(args: SelectSubset<T, StaffUpsertArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCountArgs} args - Arguments to filter Staff to count.
     * @example
     * // Count the number of Staff
     * const count = await prisma.staff.count({
     *   where: {
     *     // ... the filter for the Staff we want to count
     *   }
     * })
    **/
    count<T extends StaffCountArgs>(
      args?: Subset<T, StaffCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StaffCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StaffAggregateArgs>(args: Subset<T, StaffAggregateArgs>): Prisma.PrismaPromise<GetStaffAggregateType<T>>

    /**
     * Group by Staff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StaffGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StaffGroupByArgs['orderBy'] }
        : { orderBy?: StaffGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StaffGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaffGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Staff model
   */
  readonly fields: StaffFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Staff.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StaffClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking_Booking_staffIdToStaff<T extends Staff$Booking_Booking_staffIdToStaffArgs<ExtArgs> = {}>(args?: Subset<T, Staff$Booking_Booking_staffIdToStaffArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    InspectionReport<T extends Staff$InspectionReportArgs<ExtArgs> = {}>(args?: Subset<T, Staff$InspectionReportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Review<T extends Staff$ReviewArgs<ExtArgs> = {}>(args?: Subset<T, Staff$ReviewArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceProvider<T extends ServiceProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProviderDefaultArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    StaffCategory<T extends Staff$StaffCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Staff$StaffCategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    WorkLog<T extends Staff$WorkLogArgs<ExtArgs> = {}>(args?: Subset<T, Staff$WorkLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Staff model
   */
  interface StaffFieldRefs {
    readonly id: FieldRef<"Staff", 'Int'>
    readonly userId: FieldRef<"Staff", 'Int'>
    readonly providerId: FieldRef<"Staff", 'Int'>
    readonly createdAt: FieldRef<"Staff", 'DateTime'>
    readonly updatedAt: FieldRef<"Staff", 'DateTime'>
    readonly isActive: FieldRef<"Staff", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Staff findUnique
   */
  export type StaffFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * Filter, which Staff to fetch.
     */
    where: StaffWhereUniqueInput
  }

  /**
   * Staff findUniqueOrThrow
   */
  export type StaffFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * Filter, which Staff to fetch.
     */
    where: StaffWhereUniqueInput
  }

  /**
   * Staff findFirst
   */
  export type StaffFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * Filter, which Staff to fetch.
     */
    where?: StaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Staff to fetch.
     */
    orderBy?: StaffOrderByWithRelationInput | StaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Staff.
     */
    cursor?: StaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Staff.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Staff.
     */
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * Staff findFirstOrThrow
   */
  export type StaffFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * Filter, which Staff to fetch.
     */
    where?: StaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Staff to fetch.
     */
    orderBy?: StaffOrderByWithRelationInput | StaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Staff.
     */
    cursor?: StaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Staff.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Staff.
     */
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * Staff findMany
   */
  export type StaffFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * Filter, which Staff to fetch.
     */
    where?: StaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Staff to fetch.
     */
    orderBy?: StaffOrderByWithRelationInput | StaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Staff.
     */
    cursor?: StaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Staff from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Staff.
     */
    skip?: number
    distinct?: StaffScalarFieldEnum | StaffScalarFieldEnum[]
  }

  /**
   * Staff create
   */
  export type StaffCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * The data needed to create a Staff.
     */
    data: XOR<StaffCreateInput, StaffUncheckedCreateInput>
  }

  /**
   * Staff createMany
   */
  export type StaffCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Staff.
     */
    data: StaffCreateManyInput | StaffCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Staff createManyAndReturn
   */
  export type StaffCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * The data used to create many Staff.
     */
    data: StaffCreateManyInput | StaffCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Staff update
   */
  export type StaffUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * The data needed to update a Staff.
     */
    data: XOR<StaffUpdateInput, StaffUncheckedUpdateInput>
    /**
     * Choose, which Staff to update.
     */
    where: StaffWhereUniqueInput
  }

  /**
   * Staff updateMany
   */
  export type StaffUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Staff.
     */
    data: XOR<StaffUpdateManyMutationInput, StaffUncheckedUpdateManyInput>
    /**
     * Filter which Staff to update
     */
    where?: StaffWhereInput
    /**
     * Limit how many Staff to update.
     */
    limit?: number
  }

  /**
   * Staff updateManyAndReturn
   */
  export type StaffUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * The data used to update Staff.
     */
    data: XOR<StaffUpdateManyMutationInput, StaffUncheckedUpdateManyInput>
    /**
     * Filter which Staff to update
     */
    where?: StaffWhereInput
    /**
     * Limit how many Staff to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Staff upsert
   */
  export type StaffUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * The filter to search for the Staff to update in case it exists.
     */
    where: StaffWhereUniqueInput
    /**
     * In case the Staff found by the `where` argument doesn't exist, create a new Staff with this data.
     */
    create: XOR<StaffCreateInput, StaffUncheckedCreateInput>
    /**
     * In case the Staff was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StaffUpdateInput, StaffUncheckedUpdateInput>
  }

  /**
   * Staff delete
   */
  export type StaffDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    /**
     * Filter which Staff to delete.
     */
    where: StaffWhereUniqueInput
  }

  /**
   * Staff deleteMany
   */
  export type StaffDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Staff to delete
     */
    where?: StaffWhereInput
    /**
     * Limit how many Staff to delete.
     */
    limit?: number
  }

  /**
   * Staff.Booking_Booking_staffIdToStaff
   */
  export type Staff$Booking_Booking_staffIdToStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    where?: BookingWhereInput
  }

  /**
   * Staff.InspectionReport
   */
  export type Staff$InspectionReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    where?: InspectionReportWhereInput
    orderBy?: InspectionReportOrderByWithRelationInput | InspectionReportOrderByWithRelationInput[]
    cursor?: InspectionReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InspectionReportScalarFieldEnum | InspectionReportScalarFieldEnum[]
  }

  /**
   * Staff.Review
   */
  export type Staff$ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Staff.StaffCategory
   */
  export type Staff$StaffCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    where?: StaffCategoryWhereInput
    orderBy?: StaffCategoryOrderByWithRelationInput | StaffCategoryOrderByWithRelationInput[]
    cursor?: StaffCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StaffCategoryScalarFieldEnum | StaffCategoryScalarFieldEnum[]
  }

  /**
   * Staff.WorkLog
   */
  export type Staff$WorkLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    where?: WorkLogWhereInput
    orderBy?: WorkLogOrderByWithRelationInput | WorkLogOrderByWithRelationInput[]
    cursor?: WorkLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WorkLogScalarFieldEnum | WorkLogScalarFieldEnum[]
  }

  /**
   * Staff without action
   */
  export type StaffDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
  }


  /**
   * Model StaffCategory
   */

  export type AggregateStaffCategory = {
    _count: StaffCategoryCountAggregateOutputType | null
    _avg: StaffCategoryAvgAggregateOutputType | null
    _sum: StaffCategorySumAggregateOutputType | null
    _min: StaffCategoryMinAggregateOutputType | null
    _max: StaffCategoryMaxAggregateOutputType | null
  }

  export type StaffCategoryAvgAggregateOutputType = {
    staffId: number | null
    categoryId: number | null
  }

  export type StaffCategorySumAggregateOutputType = {
    staffId: number | null
    categoryId: number | null
  }

  export type StaffCategoryMinAggregateOutputType = {
    staffId: number | null
    categoryId: number | null
  }

  export type StaffCategoryMaxAggregateOutputType = {
    staffId: number | null
    categoryId: number | null
  }

  export type StaffCategoryCountAggregateOutputType = {
    staffId: number
    categoryId: number
    _all: number
  }


  export type StaffCategoryAvgAggregateInputType = {
    staffId?: true
    categoryId?: true
  }

  export type StaffCategorySumAggregateInputType = {
    staffId?: true
    categoryId?: true
  }

  export type StaffCategoryMinAggregateInputType = {
    staffId?: true
    categoryId?: true
  }

  export type StaffCategoryMaxAggregateInputType = {
    staffId?: true
    categoryId?: true
  }

  export type StaffCategoryCountAggregateInputType = {
    staffId?: true
    categoryId?: true
    _all?: true
  }

  export type StaffCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StaffCategory to aggregate.
     */
    where?: StaffCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffCategories to fetch.
     */
    orderBy?: StaffCategoryOrderByWithRelationInput | StaffCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StaffCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StaffCategories
    **/
    _count?: true | StaffCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StaffCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StaffCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StaffCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StaffCategoryMaxAggregateInputType
  }

  export type GetStaffCategoryAggregateType<T extends StaffCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateStaffCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaffCategory[P]>
      : GetScalarType<T[P], AggregateStaffCategory[P]>
  }




  export type StaffCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StaffCategoryWhereInput
    orderBy?: StaffCategoryOrderByWithAggregationInput | StaffCategoryOrderByWithAggregationInput[]
    by: StaffCategoryScalarFieldEnum[] | StaffCategoryScalarFieldEnum
    having?: StaffCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StaffCategoryCountAggregateInputType | true
    _avg?: StaffCategoryAvgAggregateInputType
    _sum?: StaffCategorySumAggregateInputType
    _min?: StaffCategoryMinAggregateInputType
    _max?: StaffCategoryMaxAggregateInputType
  }

  export type StaffCategoryGroupByOutputType = {
    staffId: number
    categoryId: number
    _count: StaffCategoryCountAggregateOutputType | null
    _avg: StaffCategoryAvgAggregateOutputType | null
    _sum: StaffCategorySumAggregateOutputType | null
    _min: StaffCategoryMinAggregateOutputType | null
    _max: StaffCategoryMaxAggregateOutputType | null
  }

  type GetStaffCategoryGroupByPayload<T extends StaffCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StaffCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StaffCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StaffCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], StaffCategoryGroupByOutputType[P]>
        }
      >
    >


  export type StaffCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    staffId?: boolean
    categoryId?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staffCategory"]>

  export type StaffCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    staffId?: boolean
    categoryId?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staffCategory"]>

  export type StaffCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    staffId?: boolean
    categoryId?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["staffCategory"]>

  export type StaffCategorySelectScalar = {
    staffId?: boolean
    categoryId?: boolean
  }

  export type StaffCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"staffId" | "categoryId", ExtArgs["result"]["staffCategory"]>
  export type StaffCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type StaffCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type StaffCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }

  export type $StaffCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StaffCategory"
    objects: {
      Category: Prisma.$CategoryPayload<ExtArgs>
      Staff: Prisma.$StaffPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      staffId: number
      categoryId: number
    }, ExtArgs["result"]["staffCategory"]>
    composites: {}
  }

  type StaffCategoryGetPayload<S extends boolean | null | undefined | StaffCategoryDefaultArgs> = $Result.GetResult<Prisma.$StaffCategoryPayload, S>

  type StaffCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StaffCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StaffCategoryCountAggregateInputType | true
    }

  export interface StaffCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StaffCategory'], meta: { name: 'StaffCategory' } }
    /**
     * Find zero or one StaffCategory that matches the filter.
     * @param {StaffCategoryFindUniqueArgs} args - Arguments to find a StaffCategory
     * @example
     * // Get one StaffCategory
     * const staffCategory = await prisma.staffCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StaffCategoryFindUniqueArgs>(args: SelectSubset<T, StaffCategoryFindUniqueArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StaffCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StaffCategoryFindUniqueOrThrowArgs} args - Arguments to find a StaffCategory
     * @example
     * // Get one StaffCategory
     * const staffCategory = await prisma.staffCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StaffCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, StaffCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StaffCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryFindFirstArgs} args - Arguments to find a StaffCategory
     * @example
     * // Get one StaffCategory
     * const staffCategory = await prisma.staffCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StaffCategoryFindFirstArgs>(args?: SelectSubset<T, StaffCategoryFindFirstArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StaffCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryFindFirstOrThrowArgs} args - Arguments to find a StaffCategory
     * @example
     * // Get one StaffCategory
     * const staffCategory = await prisma.staffCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StaffCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, StaffCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StaffCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StaffCategories
     * const staffCategories = await prisma.staffCategory.findMany()
     * 
     * // Get first 10 StaffCategories
     * const staffCategories = await prisma.staffCategory.findMany({ take: 10 })
     * 
     * // Only select the `staffId`
     * const staffCategoryWithStaffIdOnly = await prisma.staffCategory.findMany({ select: { staffId: true } })
     * 
     */
    findMany<T extends StaffCategoryFindManyArgs>(args?: SelectSubset<T, StaffCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StaffCategory.
     * @param {StaffCategoryCreateArgs} args - Arguments to create a StaffCategory.
     * @example
     * // Create one StaffCategory
     * const StaffCategory = await prisma.staffCategory.create({
     *   data: {
     *     // ... data to create a StaffCategory
     *   }
     * })
     * 
     */
    create<T extends StaffCategoryCreateArgs>(args: SelectSubset<T, StaffCategoryCreateArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StaffCategories.
     * @param {StaffCategoryCreateManyArgs} args - Arguments to create many StaffCategories.
     * @example
     * // Create many StaffCategories
     * const staffCategory = await prisma.staffCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StaffCategoryCreateManyArgs>(args?: SelectSubset<T, StaffCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StaffCategories and returns the data saved in the database.
     * @param {StaffCategoryCreateManyAndReturnArgs} args - Arguments to create many StaffCategories.
     * @example
     * // Create many StaffCategories
     * const staffCategory = await prisma.staffCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StaffCategories and only return the `staffId`
     * const staffCategoryWithStaffIdOnly = await prisma.staffCategory.createManyAndReturn({
     *   select: { staffId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StaffCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, StaffCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StaffCategory.
     * @param {StaffCategoryDeleteArgs} args - Arguments to delete one StaffCategory.
     * @example
     * // Delete one StaffCategory
     * const StaffCategory = await prisma.staffCategory.delete({
     *   where: {
     *     // ... filter to delete one StaffCategory
     *   }
     * })
     * 
     */
    delete<T extends StaffCategoryDeleteArgs>(args: SelectSubset<T, StaffCategoryDeleteArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StaffCategory.
     * @param {StaffCategoryUpdateArgs} args - Arguments to update one StaffCategory.
     * @example
     * // Update one StaffCategory
     * const staffCategory = await prisma.staffCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StaffCategoryUpdateArgs>(args: SelectSubset<T, StaffCategoryUpdateArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StaffCategories.
     * @param {StaffCategoryDeleteManyArgs} args - Arguments to filter StaffCategories to delete.
     * @example
     * // Delete a few StaffCategories
     * const { count } = await prisma.staffCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StaffCategoryDeleteManyArgs>(args?: SelectSubset<T, StaffCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StaffCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StaffCategories
     * const staffCategory = await prisma.staffCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StaffCategoryUpdateManyArgs>(args: SelectSubset<T, StaffCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StaffCategories and returns the data updated in the database.
     * @param {StaffCategoryUpdateManyAndReturnArgs} args - Arguments to update many StaffCategories.
     * @example
     * // Update many StaffCategories
     * const staffCategory = await prisma.staffCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StaffCategories and only return the `staffId`
     * const staffCategoryWithStaffIdOnly = await prisma.staffCategory.updateManyAndReturn({
     *   select: { staffId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StaffCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, StaffCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StaffCategory.
     * @param {StaffCategoryUpsertArgs} args - Arguments to update or create a StaffCategory.
     * @example
     * // Update or create a StaffCategory
     * const staffCategory = await prisma.staffCategory.upsert({
     *   create: {
     *     // ... data to create a StaffCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StaffCategory we want to update
     *   }
     * })
     */
    upsert<T extends StaffCategoryUpsertArgs>(args: SelectSubset<T, StaffCategoryUpsertArgs<ExtArgs>>): Prisma__StaffCategoryClient<$Result.GetResult<Prisma.$StaffCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StaffCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryCountArgs} args - Arguments to filter StaffCategories to count.
     * @example
     * // Count the number of StaffCategories
     * const count = await prisma.staffCategory.count({
     *   where: {
     *     // ... the filter for the StaffCategories we want to count
     *   }
     * })
    **/
    count<T extends StaffCategoryCountArgs>(
      args?: Subset<T, StaffCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StaffCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StaffCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StaffCategoryAggregateArgs>(args: Subset<T, StaffCategoryAggregateArgs>): Prisma.PrismaPromise<GetStaffCategoryAggregateType<T>>

    /**
     * Group by StaffCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StaffCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StaffCategoryGroupByArgs['orderBy'] }
        : { orderBy?: StaffCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StaffCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaffCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StaffCategory model
   */
  readonly fields: StaffCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StaffCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StaffCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Staff<T extends StaffDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StaffDefaultArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StaffCategory model
   */
  interface StaffCategoryFieldRefs {
    readonly staffId: FieldRef<"StaffCategory", 'Int'>
    readonly categoryId: FieldRef<"StaffCategory", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StaffCategory findUnique
   */
  export type StaffCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * Filter, which StaffCategory to fetch.
     */
    where: StaffCategoryWhereUniqueInput
  }

  /**
   * StaffCategory findUniqueOrThrow
   */
  export type StaffCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * Filter, which StaffCategory to fetch.
     */
    where: StaffCategoryWhereUniqueInput
  }

  /**
   * StaffCategory findFirst
   */
  export type StaffCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * Filter, which StaffCategory to fetch.
     */
    where?: StaffCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffCategories to fetch.
     */
    orderBy?: StaffCategoryOrderByWithRelationInput | StaffCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StaffCategories.
     */
    cursor?: StaffCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StaffCategories.
     */
    distinct?: StaffCategoryScalarFieldEnum | StaffCategoryScalarFieldEnum[]
  }

  /**
   * StaffCategory findFirstOrThrow
   */
  export type StaffCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * Filter, which StaffCategory to fetch.
     */
    where?: StaffCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffCategories to fetch.
     */
    orderBy?: StaffCategoryOrderByWithRelationInput | StaffCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StaffCategories.
     */
    cursor?: StaffCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StaffCategories.
     */
    distinct?: StaffCategoryScalarFieldEnum | StaffCategoryScalarFieldEnum[]
  }

  /**
   * StaffCategory findMany
   */
  export type StaffCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * Filter, which StaffCategories to fetch.
     */
    where?: StaffCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffCategories to fetch.
     */
    orderBy?: StaffCategoryOrderByWithRelationInput | StaffCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StaffCategories.
     */
    cursor?: StaffCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffCategories.
     */
    skip?: number
    distinct?: StaffCategoryScalarFieldEnum | StaffCategoryScalarFieldEnum[]
  }

  /**
   * StaffCategory create
   */
  export type StaffCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a StaffCategory.
     */
    data: XOR<StaffCategoryCreateInput, StaffCategoryUncheckedCreateInput>
  }

  /**
   * StaffCategory createMany
   */
  export type StaffCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StaffCategories.
     */
    data: StaffCategoryCreateManyInput | StaffCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StaffCategory createManyAndReturn
   */
  export type StaffCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many StaffCategories.
     */
    data: StaffCategoryCreateManyInput | StaffCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StaffCategory update
   */
  export type StaffCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a StaffCategory.
     */
    data: XOR<StaffCategoryUpdateInput, StaffCategoryUncheckedUpdateInput>
    /**
     * Choose, which StaffCategory to update.
     */
    where: StaffCategoryWhereUniqueInput
  }

  /**
   * StaffCategory updateMany
   */
  export type StaffCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StaffCategories.
     */
    data: XOR<StaffCategoryUpdateManyMutationInput, StaffCategoryUncheckedUpdateManyInput>
    /**
     * Filter which StaffCategories to update
     */
    where?: StaffCategoryWhereInput
    /**
     * Limit how many StaffCategories to update.
     */
    limit?: number
  }

  /**
   * StaffCategory updateManyAndReturn
   */
  export type StaffCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * The data used to update StaffCategories.
     */
    data: XOR<StaffCategoryUpdateManyMutationInput, StaffCategoryUncheckedUpdateManyInput>
    /**
     * Filter which StaffCategories to update
     */
    where?: StaffCategoryWhereInput
    /**
     * Limit how many StaffCategories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StaffCategory upsert
   */
  export type StaffCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the StaffCategory to update in case it exists.
     */
    where: StaffCategoryWhereUniqueInput
    /**
     * In case the StaffCategory found by the `where` argument doesn't exist, create a new StaffCategory with this data.
     */
    create: XOR<StaffCategoryCreateInput, StaffCategoryUncheckedCreateInput>
    /**
     * In case the StaffCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StaffCategoryUpdateInput, StaffCategoryUncheckedUpdateInput>
  }

  /**
   * StaffCategory delete
   */
  export type StaffCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
    /**
     * Filter which StaffCategory to delete.
     */
    where: StaffCategoryWhereUniqueInput
  }

  /**
   * StaffCategory deleteMany
   */
  export type StaffCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StaffCategories to delete
     */
    where?: StaffCategoryWhereInput
    /**
     * Limit how many StaffCategories to delete.
     */
    limit?: number
  }

  /**
   * StaffCategory without action
   */
  export type StaffCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffCategory
     */
    select?: StaffCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffCategory
     */
    omit?: StaffCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffCategoryInclude<ExtArgs> | null
  }


  /**
   * Model Transaction
   */

  export type AggregateTransaction = {
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  export type TransactionAvgAggregateOutputType = {
    id: number | null
    bookingId: number | null
    amount: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type TransactionSumAggregateOutputType = {
    id: number | null
    bookingId: number | null
    amount: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type TransactionMinAggregateOutputType = {
    id: number | null
    bookingId: number | null
    amount: number | null
    status: $Enums.PaymentStatus | null
    method: $Enums.PaymentMethod | null
    paidAt: Date | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    orderCode: string | null
  }

  export type TransactionMaxAggregateOutputType = {
    id: number | null
    bookingId: number | null
    amount: number | null
    status: $Enums.PaymentStatus | null
    method: $Enums.PaymentMethod | null
    paidAt: Date | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    orderCode: string | null
  }

  export type TransactionCountAggregateOutputType = {
    id: number
    bookingId: number
    amount: number
    status: number
    method: number
    paidAt: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    orderCode: number
    _all: number
  }


  export type TransactionAvgAggregateInputType = {
    id?: true
    bookingId?: true
    amount?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type TransactionSumAggregateInputType = {
    id?: true
    bookingId?: true
    amount?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type TransactionMinAggregateInputType = {
    id?: true
    bookingId?: true
    amount?: true
    status?: true
    method?: true
    paidAt?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    orderCode?: true
  }

  export type TransactionMaxAggregateInputType = {
    id?: true
    bookingId?: true
    amount?: true
    status?: true
    method?: true
    paidAt?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    orderCode?: true
  }

  export type TransactionCountAggregateInputType = {
    id?: true
    bookingId?: true
    amount?: true
    status?: true
    method?: true
    paidAt?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    orderCode?: true
    _all?: true
  }

  export type TransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaction to aggregate.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transactions
    **/
    _count?: true | TransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionMaxAggregateInputType
  }

  export type GetTransactionAggregateType<T extends TransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaction[P]>
      : GetScalarType<T[P], AggregateTransaction[P]>
  }




  export type TransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithAggregationInput | TransactionOrderByWithAggregationInput[]
    by: TransactionScalarFieldEnum[] | TransactionScalarFieldEnum
    having?: TransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionCountAggregateInputType | true
    _avg?: TransactionAvgAggregateInputType
    _sum?: TransactionSumAggregateInputType
    _min?: TransactionMinAggregateInputType
    _max?: TransactionMaxAggregateInputType
  }

  export type TransactionGroupByOutputType = {
    id: number
    bookingId: number
    amount: number
    status: $Enums.PaymentStatus
    method: $Enums.PaymentMethod
    paidAt: Date | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    orderCode: string | null
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  type GetTransactionGroupByPayload<T extends TransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionGroupByOutputType[P]>
        }
      >
    >


  export type TransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    amount?: boolean
    status?: boolean
    method?: boolean
    paidAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    orderCode?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    amount?: boolean
    status?: boolean
    method?: boolean
    paidAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    orderCode?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    amount?: boolean
    status?: boolean
    method?: boolean
    paidAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    orderCode?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectScalar = {
    id?: boolean
    bookingId?: boolean
    amount?: boolean
    status?: boolean
    method?: boolean
    paidAt?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    orderCode?: boolean
  }

  export type TransactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "amount" | "status" | "method" | "paidAt" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "orderCode", ExtArgs["result"]["transaction"]>
  export type TransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
  }
  export type TransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
  }
  export type TransactionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
  }

  export type $TransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaction"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: number
      amount: number
      status: $Enums.PaymentStatus
      method: $Enums.PaymentMethod
      paidAt: Date | null
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      orderCode: string | null
    }, ExtArgs["result"]["transaction"]>
    composites: {}
  }

  type TransactionGetPayload<S extends boolean | null | undefined | TransactionDefaultArgs> = $Result.GetResult<Prisma.$TransactionPayload, S>

  type TransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransactionCountAggregateInputType | true
    }

  export interface TransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaction'], meta: { name: 'Transaction' } }
    /**
     * Find zero or one Transaction that matches the filter.
     * @param {TransactionFindUniqueArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionFindUniqueArgs>(args: SelectSubset<T, TransactionFindUniqueArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransactionFindUniqueOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindFirstArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionFindFirstArgs>(args?: SelectSubset<T, TransactionFindFirstArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindFirstOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transaction.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionWithIdOnly = await prisma.transaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionFindManyArgs>(args?: SelectSubset<T, TransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaction.
     * @param {TransactionCreateArgs} args - Arguments to create a Transaction.
     * @example
     * // Create one Transaction
     * const Transaction = await prisma.transaction.create({
     *   data: {
     *     // ... data to create a Transaction
     *   }
     * })
     * 
     */
    create<T extends TransactionCreateArgs>(args: SelectSubset<T, TransactionCreateArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transactions.
     * @param {TransactionCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionCreateManyArgs>(args?: SelectSubset<T, TransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {TransactionCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `id`
     * const transactionWithIdOnly = await prisma.transaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaction.
     * @param {TransactionDeleteArgs} args - Arguments to delete one Transaction.
     * @example
     * // Delete one Transaction
     * const Transaction = await prisma.transaction.delete({
     *   where: {
     *     // ... filter to delete one Transaction
     *   }
     * })
     * 
     */
    delete<T extends TransactionDeleteArgs>(args: SelectSubset<T, TransactionDeleteArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaction.
     * @param {TransactionUpdateArgs} args - Arguments to update one Transaction.
     * @example
     * // Update one Transaction
     * const transaction = await prisma.transaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionUpdateArgs>(args: SelectSubset<T, TransactionUpdateArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transactions.
     * @param {TransactionDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionDeleteManyArgs>(args?: SelectSubset<T, TransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transaction = await prisma.transaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionUpdateManyArgs>(args: SelectSubset<T, TransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions and returns the data updated in the database.
     * @param {TransactionUpdateManyAndReturnArgs} args - Arguments to update many Transactions.
     * @example
     * // Update many Transactions
     * const transaction = await prisma.transaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transactions and only return the `id`
     * const transactionWithIdOnly = await prisma.transaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransactionUpdateManyAndReturnArgs>(args: SelectSubset<T, TransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaction.
     * @param {TransactionUpsertArgs} args - Arguments to update or create a Transaction.
     * @example
     * // Update or create a Transaction
     * const transaction = await prisma.transaction.upsert({
     *   create: {
     *     // ... data to create a Transaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaction we want to update
     *   }
     * })
     */
    upsert<T extends TransactionUpsertArgs>(args: SelectSubset<T, TransactionUpsertArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transaction.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends TransactionCountArgs>(
      args?: Subset<T, TransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionAggregateArgs>(args: Subset<T, TransactionAggregateArgs>): Prisma.PrismaPromise<GetTransactionAggregateType<T>>

    /**
     * Group by Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionGroupByArgs['orderBy'] }
        : { orderBy?: TransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaction model
   */
  readonly fields: TransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends BookingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BookingDefaultArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaction model
   */
  interface TransactionFieldRefs {
    readonly id: FieldRef<"Transaction", 'Int'>
    readonly bookingId: FieldRef<"Transaction", 'Int'>
    readonly amount: FieldRef<"Transaction", 'Float'>
    readonly status: FieldRef<"Transaction", 'PaymentStatus'>
    readonly method: FieldRef<"Transaction", 'PaymentMethod'>
    readonly paidAt: FieldRef<"Transaction", 'DateTime'>
    readonly createdById: FieldRef<"Transaction", 'Int'>
    readonly updatedById: FieldRef<"Transaction", 'Int'>
    readonly deletedById: FieldRef<"Transaction", 'Int'>
    readonly deletedAt: FieldRef<"Transaction", 'DateTime'>
    readonly createdAt: FieldRef<"Transaction", 'DateTime'>
    readonly orderCode: FieldRef<"Transaction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Transaction findUnique
   */
  export type TransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction findUniqueOrThrow
   */
  export type TransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction findFirst
   */
  export type TransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction findFirstOrThrow
   */
  export type TransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction findMany
   */
  export type TransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction create
   */
  export type TransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaction.
     */
    data: XOR<TransactionCreateInput, TransactionUncheckedCreateInput>
  }

  /**
   * Transaction createMany
   */
  export type TransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transactions.
     */
    data: TransactionCreateManyInput | TransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaction createManyAndReturn
   */
  export type TransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * The data used to create many Transactions.
     */
    data: TransactionCreateManyInput | TransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaction update
   */
  export type TransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaction.
     */
    data: XOR<TransactionUpdateInput, TransactionUncheckedUpdateInput>
    /**
     * Choose, which Transaction to update.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction updateMany
   */
  export type TransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transactions.
     */
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyInput>
    /**
     * Filter which Transactions to update
     */
    where?: TransactionWhereInput
    /**
     * Limit how many Transactions to update.
     */
    limit?: number
  }

  /**
   * Transaction updateManyAndReturn
   */
  export type TransactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * The data used to update Transactions.
     */
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyInput>
    /**
     * Filter which Transactions to update
     */
    where?: TransactionWhereInput
    /**
     * Limit how many Transactions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaction upsert
   */
  export type TransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaction to update in case it exists.
     */
    where: TransactionWhereUniqueInput
    /**
     * In case the Transaction found by the `where` argument doesn't exist, create a new Transaction with this data.
     */
    create: XOR<TransactionCreateInput, TransactionUncheckedCreateInput>
    /**
     * In case the Transaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionUpdateInput, TransactionUncheckedUpdateInput>
  }

  /**
   * Transaction delete
   */
  export type TransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter which Transaction to delete.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction deleteMany
   */
  export type TransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transactions to delete
     */
    where?: TransactionWhereInput
    /**
     * Limit how many Transactions to delete.
     */
    limit?: number
  }

  /**
   * Transaction without action
   */
  export type TransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transaction
     */
    omit?: TransactionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    avatar: string | null
    totpSecret: string | null
    status: $Enums.UserStatus | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    name: string | null
    phone: string | null
    avatar: string | null
    totpSecret: string | null
    status: $Enums.UserStatus | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    name: number
    phone: number
    avatar: number
    totpSecret: number
    status: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    avatar?: true
    totpSecret?: true
    status?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    avatar?: true
    totpSecret?: true
    status?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    name?: true
    phone?: true
    avatar?: true
    totpSecret?: true
    status?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    email: string
    password: string
    name: string
    phone: string
    avatar: string | null
    totpSecret: string | null
    status: $Enums.UserStatus
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Category_Category_createdByIdToUser?: boolean | User$Category_Category_createdByIdToUserArgs<ExtArgs>
    Category_Category_deletedByIdToUser?: boolean | User$Category_Category_deletedByIdToUserArgs<ExtArgs>
    Category_Category_updatedByIdToUser?: boolean | User$Category_Category_updatedByIdToUserArgs<ExtArgs>
    CustomerProfile?: boolean | User$CustomerProfileArgs<ExtArgs>
    Device?: boolean | User$DeviceArgs<ExtArgs>
    Language_Language_createdByIdToUser?: boolean | User$Language_Language_createdByIdToUserArgs<ExtArgs>
    Language_Language_deletedByIdToUser?: boolean | User$Language_Language_deletedByIdToUserArgs<ExtArgs>
    Language_Language_updatedByIdToUser?: boolean | User$Language_Language_updatedByIdToUserArgs<ExtArgs>
    Notification?: boolean | User$NotificationArgs<ExtArgs>
    Permission_Permission_createdByIdToUser?: boolean | User$Permission_Permission_createdByIdToUserArgs<ExtArgs>
    Permission_Permission_deletedByIdToUser?: boolean | User$Permission_Permission_deletedByIdToUserArgs<ExtArgs>
    Permission_Permission_updatedByIdToUser?: boolean | User$Permission_Permission_updatedByIdToUserArgs<ExtArgs>
    RefreshToken?: boolean | User$RefreshTokenArgs<ExtArgs>
    Role_Role_createdByIdToUser?: boolean | User$Role_Role_createdByIdToUserArgs<ExtArgs>
    Role_Role_deletedByIdToUser?: boolean | User$Role_Role_deletedByIdToUserArgs<ExtArgs>
    Role_Role_updatedByIdToUser?: boolean | User$Role_Role_updatedByIdToUserArgs<ExtArgs>
    Service_Service_createdByIdToUser?: boolean | User$Service_Service_createdByIdToUserArgs<ExtArgs>
    Service_Service_deletedByIdToUser?: boolean | User$Service_Service_deletedByIdToUserArgs<ExtArgs>
    Service_Service_updatedByIdToUser?: boolean | User$Service_Service_updatedByIdToUserArgs<ExtArgs>
    ServiceProvider_ServiceProvider_userIdToUser?: boolean | User$ServiceProvider_ServiceProvider_userIdToUserArgs<ExtArgs>
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: boolean | User$ServiceProvider_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
    Staff?: boolean | User$StaffArgs<ExtArgs>
    User_User_createdByIdToUser?: boolean | User$User_User_createdByIdToUserArgs<ExtArgs>
    other_User_User_createdByIdToUser?: boolean | User$other_User_User_createdByIdToUserArgs<ExtArgs>
    User_User_deletedByIdToUser?: boolean | User$User_User_deletedByIdToUserArgs<ExtArgs>
    other_User_User_deletedByIdToUser?: boolean | User$other_User_User_deletedByIdToUserArgs<ExtArgs>
    User_User_updatedByIdToUser?: boolean | User$User_User_updatedByIdToUserArgs<ExtArgs>
    other_User_User_updatedByIdToUser?: boolean | User$other_User_User_updatedByIdToUserArgs<ExtArgs>
    Role_UserRoles?: boolean | User$Role_UserRolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_User_createdByIdToUser?: boolean | User$User_User_createdByIdToUserArgs<ExtArgs>
    User_User_deletedByIdToUser?: boolean | User$User_User_deletedByIdToUserArgs<ExtArgs>
    User_User_updatedByIdToUser?: boolean | User$User_User_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User_User_createdByIdToUser?: boolean | User$User_User_createdByIdToUserArgs<ExtArgs>
    User_User_deletedByIdToUser?: boolean | User$User_User_deletedByIdToUserArgs<ExtArgs>
    User_User_updatedByIdToUser?: boolean | User$User_User_updatedByIdToUserArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
    phone?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "password" | "name" | "phone" | "avatar" | "totpSecret" | "status" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category_Category_createdByIdToUser?: boolean | User$Category_Category_createdByIdToUserArgs<ExtArgs>
    Category_Category_deletedByIdToUser?: boolean | User$Category_Category_deletedByIdToUserArgs<ExtArgs>
    Category_Category_updatedByIdToUser?: boolean | User$Category_Category_updatedByIdToUserArgs<ExtArgs>
    CustomerProfile?: boolean | User$CustomerProfileArgs<ExtArgs>
    Device?: boolean | User$DeviceArgs<ExtArgs>
    Language_Language_createdByIdToUser?: boolean | User$Language_Language_createdByIdToUserArgs<ExtArgs>
    Language_Language_deletedByIdToUser?: boolean | User$Language_Language_deletedByIdToUserArgs<ExtArgs>
    Language_Language_updatedByIdToUser?: boolean | User$Language_Language_updatedByIdToUserArgs<ExtArgs>
    Notification?: boolean | User$NotificationArgs<ExtArgs>
    Permission_Permission_createdByIdToUser?: boolean | User$Permission_Permission_createdByIdToUserArgs<ExtArgs>
    Permission_Permission_deletedByIdToUser?: boolean | User$Permission_Permission_deletedByIdToUserArgs<ExtArgs>
    Permission_Permission_updatedByIdToUser?: boolean | User$Permission_Permission_updatedByIdToUserArgs<ExtArgs>
    RefreshToken?: boolean | User$RefreshTokenArgs<ExtArgs>
    Role_Role_createdByIdToUser?: boolean | User$Role_Role_createdByIdToUserArgs<ExtArgs>
    Role_Role_deletedByIdToUser?: boolean | User$Role_Role_deletedByIdToUserArgs<ExtArgs>
    Role_Role_updatedByIdToUser?: boolean | User$Role_Role_updatedByIdToUserArgs<ExtArgs>
    Service_Service_createdByIdToUser?: boolean | User$Service_Service_createdByIdToUserArgs<ExtArgs>
    Service_Service_deletedByIdToUser?: boolean | User$Service_Service_deletedByIdToUserArgs<ExtArgs>
    Service_Service_updatedByIdToUser?: boolean | User$Service_Service_updatedByIdToUserArgs<ExtArgs>
    ServiceProvider_ServiceProvider_userIdToUser?: boolean | User$ServiceProvider_ServiceProvider_userIdToUserArgs<ExtArgs>
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: boolean | User$ServiceProvider_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>
    Staff?: boolean | User$StaffArgs<ExtArgs>
    User_User_createdByIdToUser?: boolean | User$User_User_createdByIdToUserArgs<ExtArgs>
    other_User_User_createdByIdToUser?: boolean | User$other_User_User_createdByIdToUserArgs<ExtArgs>
    User_User_deletedByIdToUser?: boolean | User$User_User_deletedByIdToUserArgs<ExtArgs>
    other_User_User_deletedByIdToUser?: boolean | User$other_User_User_deletedByIdToUserArgs<ExtArgs>
    User_User_updatedByIdToUser?: boolean | User$User_User_updatedByIdToUserArgs<ExtArgs>
    other_User_User_updatedByIdToUser?: boolean | User$other_User_User_updatedByIdToUserArgs<ExtArgs>
    Role_UserRoles?: boolean | User$Role_UserRolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_User_createdByIdToUser?: boolean | User$User_User_createdByIdToUserArgs<ExtArgs>
    User_User_deletedByIdToUser?: boolean | User$User_User_deletedByIdToUserArgs<ExtArgs>
    User_User_updatedByIdToUser?: boolean | User$User_User_updatedByIdToUserArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User_User_createdByIdToUser?: boolean | User$User_User_createdByIdToUserArgs<ExtArgs>
    User_User_deletedByIdToUser?: boolean | User$User_User_deletedByIdToUserArgs<ExtArgs>
    User_User_updatedByIdToUser?: boolean | User$User_User_updatedByIdToUserArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      Category_Category_createdByIdToUser: Prisma.$CategoryPayload<ExtArgs>[]
      Category_Category_deletedByIdToUser: Prisma.$CategoryPayload<ExtArgs>[]
      Category_Category_updatedByIdToUser: Prisma.$CategoryPayload<ExtArgs>[]
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs> | null
      Device: Prisma.$DevicePayload<ExtArgs>[]
      Language_Language_createdByIdToUser: Prisma.$LanguagePayload<ExtArgs>[]
      Language_Language_deletedByIdToUser: Prisma.$LanguagePayload<ExtArgs>[]
      Language_Language_updatedByIdToUser: Prisma.$LanguagePayload<ExtArgs>[]
      Notification: Prisma.$NotificationPayload<ExtArgs>[]
      Permission_Permission_createdByIdToUser: Prisma.$PermissionPayload<ExtArgs>[]
      Permission_Permission_deletedByIdToUser: Prisma.$PermissionPayload<ExtArgs>[]
      Permission_Permission_updatedByIdToUser: Prisma.$PermissionPayload<ExtArgs>[]
      RefreshToken: Prisma.$RefreshTokenPayload<ExtArgs>[]
      Role_Role_createdByIdToUser: Prisma.$RolePayload<ExtArgs>[]
      Role_Role_deletedByIdToUser: Prisma.$RolePayload<ExtArgs>[]
      Role_Role_updatedByIdToUser: Prisma.$RolePayload<ExtArgs>[]
      Service_Service_createdByIdToUser: Prisma.$ServicePayload<ExtArgs>[]
      Service_Service_deletedByIdToUser: Prisma.$ServicePayload<ExtArgs>[]
      Service_Service_updatedByIdToUser: Prisma.$ServicePayload<ExtArgs>[]
      ServiceProvider_ServiceProvider_userIdToUser: Prisma.$ServiceProviderPayload<ExtArgs> | null
      ServiceProvider_ServiceProvider_verifiedByIdToUser: Prisma.$ServiceProviderPayload<ExtArgs>[]
      Staff: Prisma.$StaffPayload<ExtArgs> | null
      User_User_createdByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      other_User_User_createdByIdToUser: Prisma.$UserPayload<ExtArgs>[]
      User_User_deletedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      other_User_User_deletedByIdToUser: Prisma.$UserPayload<ExtArgs>[]
      User_User_updatedByIdToUser: Prisma.$UserPayload<ExtArgs> | null
      other_User_User_updatedByIdToUser: Prisma.$UserPayload<ExtArgs>[]
      Role_UserRoles: Prisma.$RolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string
      name: string
      phone: string
      avatar: string | null
      totpSecret: string | null
      status: $Enums.UserStatus
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Category_Category_createdByIdToUser<T extends User$Category_Category_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Category_Category_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Category_Category_deletedByIdToUser<T extends User$Category_Category_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Category_Category_deletedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Category_Category_updatedByIdToUser<T extends User$Category_Category_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Category_Category_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CustomerProfile<T extends User$CustomerProfileArgs<ExtArgs> = {}>(args?: Subset<T, User$CustomerProfileArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Device<T extends User$DeviceArgs<ExtArgs> = {}>(args?: Subset<T, User$DeviceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Language_Language_createdByIdToUser<T extends User$Language_Language_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Language_Language_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Language_Language_deletedByIdToUser<T extends User$Language_Language_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Language_Language_deletedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Language_Language_updatedByIdToUser<T extends User$Language_Language_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Language_Language_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Notification<T extends User$NotificationArgs<ExtArgs> = {}>(args?: Subset<T, User$NotificationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Permission_Permission_createdByIdToUser<T extends User$Permission_Permission_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Permission_Permission_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Permission_Permission_deletedByIdToUser<T extends User$Permission_Permission_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Permission_Permission_deletedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Permission_Permission_updatedByIdToUser<T extends User$Permission_Permission_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Permission_Permission_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RefreshToken<T extends User$RefreshTokenArgs<ExtArgs> = {}>(args?: Subset<T, User$RefreshTokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Role_Role_createdByIdToUser<T extends User$Role_Role_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Role_Role_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Role_Role_deletedByIdToUser<T extends User$Role_Role_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Role_Role_deletedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Role_Role_updatedByIdToUser<T extends User$Role_Role_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Role_Role_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Service_Service_createdByIdToUser<T extends User$Service_Service_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Service_Service_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Service_Service_deletedByIdToUser<T extends User$Service_Service_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Service_Service_deletedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Service_Service_updatedByIdToUser<T extends User$Service_Service_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$Service_Service_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ServiceProvider_ServiceProvider_userIdToUser<T extends User$ServiceProvider_ServiceProvider_userIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$ServiceProvider_ServiceProvider_userIdToUserArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ServiceProvider_ServiceProvider_verifiedByIdToUser<T extends User$ServiceProvider_ServiceProvider_verifiedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$ServiceProvider_ServiceProvider_verifiedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Staff<T extends User$StaffArgs<ExtArgs> = {}>(args?: Subset<T, User$StaffArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User_User_createdByIdToUser<T extends User$User_User_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$User_User_createdByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_User_User_createdByIdToUser<T extends User$other_User_User_createdByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$other_User_User_createdByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_User_deletedByIdToUser<T extends User$User_User_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$User_User_deletedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_User_User_deletedByIdToUser<T extends User$other_User_User_deletedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$other_User_User_deletedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User_User_updatedByIdToUser<T extends User$User_User_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$User_User_updatedByIdToUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_User_User_updatedByIdToUser<T extends User$other_User_User_updatedByIdToUserArgs<ExtArgs> = {}>(args?: Subset<T, User$other_User_User_updatedByIdToUserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Role_UserRoles<T extends User$Role_UserRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$Role_UserRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly totpSecret: FieldRef<"User", 'String'>
    readonly status: FieldRef<"User", 'UserStatus'>
    readonly createdById: FieldRef<"User", 'Int'>
    readonly updatedById: FieldRef<"User", 'Int'>
    readonly deletedById: FieldRef<"User", 'Int'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.Category_Category_createdByIdToUser
   */
  export type User$Category_Category_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.Category_Category_deletedByIdToUser
   */
  export type User$Category_Category_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.Category_Category_updatedByIdToUser
   */
  export type User$Category_Category_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.CustomerProfile
   */
  export type User$CustomerProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerProfile
     */
    select?: CustomerProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CustomerProfile
     */
    omit?: CustomerProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerProfileInclude<ExtArgs> | null
    where?: CustomerProfileWhereInput
  }

  /**
   * User.Device
   */
  export type User$DeviceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    where?: DeviceWhereInput
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    cursor?: DeviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * User.Language_Language_createdByIdToUser
   */
  export type User$Language_Language_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    cursor?: LanguageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * User.Language_Language_deletedByIdToUser
   */
  export type User$Language_Language_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    cursor?: LanguageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * User.Language_Language_updatedByIdToUser
   */
  export type User$Language_Language_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    cursor?: LanguageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * User.Notification
   */
  export type User$NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.Permission_Permission_createdByIdToUser
   */
  export type User$Permission_Permission_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * User.Permission_Permission_deletedByIdToUser
   */
  export type User$Permission_Permission_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * User.Permission_Permission_updatedByIdToUser
   */
  export type User$Permission_Permission_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * User.RefreshToken
   */
  export type User$RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User.Role_Role_createdByIdToUser
   */
  export type User$Role_Role_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.Role_Role_deletedByIdToUser
   */
  export type User$Role_Role_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.Role_Role_updatedByIdToUser
   */
  export type User$Role_Role_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.Service_Service_createdByIdToUser
   */
  export type User$Service_Service_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * User.Service_Service_deletedByIdToUser
   */
  export type User$Service_Service_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * User.Service_Service_updatedByIdToUser
   */
  export type User$Service_Service_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    cursor?: ServiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * User.ServiceProvider_ServiceProvider_userIdToUser
   */
  export type User$ServiceProvider_ServiceProvider_userIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    where?: ServiceProviderWhereInput
  }

  /**
   * User.ServiceProvider_ServiceProvider_verifiedByIdToUser
   */
  export type User$ServiceProvider_ServiceProvider_verifiedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceProvider
     */
    select?: ServiceProviderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceProvider
     */
    omit?: ServiceProviderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceProviderInclude<ExtArgs> | null
    where?: ServiceProviderWhereInput
    orderBy?: ServiceProviderOrderByWithRelationInput | ServiceProviderOrderByWithRelationInput[]
    cursor?: ServiceProviderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServiceProviderScalarFieldEnum | ServiceProviderScalarFieldEnum[]
  }

  /**
   * User.Staff
   */
  export type User$StaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Staff
     */
    select?: StaffSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Staff
     */
    omit?: StaffOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StaffInclude<ExtArgs> | null
    where?: StaffWhereInput
  }

  /**
   * User.User_User_createdByIdToUser
   */
  export type User$User_User_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.other_User_User_createdByIdToUser
   */
  export type User$other_User_User_createdByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.User_User_deletedByIdToUser
   */
  export type User$User_User_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.other_User_User_deletedByIdToUser
   */
  export type User$other_User_User_deletedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.User_User_updatedByIdToUser
   */
  export type User$User_User_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.other_User_User_updatedByIdToUser
   */
  export type User$other_User_User_updatedByIdToUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.Role_UserRoles
   */
  export type User$Role_UserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model VerificationCode
   */

  export type AggregateVerificationCode = {
    _count: VerificationCodeCountAggregateOutputType | null
    _avg: VerificationCodeAvgAggregateOutputType | null
    _sum: VerificationCodeSumAggregateOutputType | null
    _min: VerificationCodeMinAggregateOutputType | null
    _max: VerificationCodeMaxAggregateOutputType | null
  }

  export type VerificationCodeAvgAggregateOutputType = {
    id: number | null
  }

  export type VerificationCodeSumAggregateOutputType = {
    id: number | null
  }

  export type VerificationCodeMinAggregateOutputType = {
    id: number | null
    email: string | null
    code: string | null
    type: $Enums.VerificationCodeType | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type VerificationCodeMaxAggregateOutputType = {
    id: number | null
    email: string | null
    code: string | null
    type: $Enums.VerificationCodeType | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type VerificationCodeCountAggregateOutputType = {
    id: number
    email: number
    code: number
    type: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type VerificationCodeAvgAggregateInputType = {
    id?: true
  }

  export type VerificationCodeSumAggregateInputType = {
    id?: true
  }

  export type VerificationCodeMinAggregateInputType = {
    id?: true
    email?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
  }

  export type VerificationCodeMaxAggregateInputType = {
    id?: true
    email?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
  }

  export type VerificationCodeCountAggregateInputType = {
    id?: true
    email?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type VerificationCodeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationCode to aggregate.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationCodes
    **/
    _count?: true | VerificationCodeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VerificationCodeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VerificationCodeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationCodeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationCodeMaxAggregateInputType
  }

  export type GetVerificationCodeAggregateType<T extends VerificationCodeAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationCode]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationCode[P]>
      : GetScalarType<T[P], AggregateVerificationCode[P]>
  }




  export type VerificationCodeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationCodeWhereInput
    orderBy?: VerificationCodeOrderByWithAggregationInput | VerificationCodeOrderByWithAggregationInput[]
    by: VerificationCodeScalarFieldEnum[] | VerificationCodeScalarFieldEnum
    having?: VerificationCodeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationCodeCountAggregateInputType | true
    _avg?: VerificationCodeAvgAggregateInputType
    _sum?: VerificationCodeSumAggregateInputType
    _min?: VerificationCodeMinAggregateInputType
    _max?: VerificationCodeMaxAggregateInputType
  }

  export type VerificationCodeGroupByOutputType = {
    id: number
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date
    createdAt: Date
    _count: VerificationCodeCountAggregateOutputType | null
    _avg: VerificationCodeAvgAggregateOutputType | null
    _sum: VerificationCodeSumAggregateOutputType | null
    _min: VerificationCodeMinAggregateOutputType | null
    _max: VerificationCodeMaxAggregateOutputType | null
  }

  type GetVerificationCodeGroupByPayload<T extends VerificationCodeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationCodeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationCodeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationCodeGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationCodeGroupByOutputType[P]>
        }
      >
    >


  export type VerificationCodeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["verificationCode"]>

  export type VerificationCodeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["verificationCode"]>

  export type VerificationCodeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["verificationCode"]>

  export type VerificationCodeSelectScalar = {
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type VerificationCodeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "code" | "type" | "expiresAt" | "createdAt", ExtArgs["result"]["verificationCode"]>

  export type $VerificationCodePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationCode"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      code: string
      type: $Enums.VerificationCodeType
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["verificationCode"]>
    composites: {}
  }

  type VerificationCodeGetPayload<S extends boolean | null | undefined | VerificationCodeDefaultArgs> = $Result.GetResult<Prisma.$VerificationCodePayload, S>

  type VerificationCodeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationCodeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationCodeCountAggregateInputType | true
    }

  export interface VerificationCodeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationCode'], meta: { name: 'VerificationCode' } }
    /**
     * Find zero or one VerificationCode that matches the filter.
     * @param {VerificationCodeFindUniqueArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationCodeFindUniqueArgs>(args: SelectSubset<T, VerificationCodeFindUniqueArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationCode that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationCodeFindUniqueOrThrowArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationCodeFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationCodeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationCode that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeFindFirstArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationCodeFindFirstArgs>(args?: SelectSubset<T, VerificationCodeFindFirstArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationCode that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeFindFirstOrThrowArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationCodeFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationCodeFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationCodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationCodes
     * const verificationCodes = await prisma.verificationCode.findMany()
     * 
     * // Get first 10 VerificationCodes
     * const verificationCodes = await prisma.verificationCode.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationCodeWithIdOnly = await prisma.verificationCode.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationCodeFindManyArgs>(args?: SelectSubset<T, VerificationCodeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationCode.
     * @param {VerificationCodeCreateArgs} args - Arguments to create a VerificationCode.
     * @example
     * // Create one VerificationCode
     * const VerificationCode = await prisma.verificationCode.create({
     *   data: {
     *     // ... data to create a VerificationCode
     *   }
     * })
     * 
     */
    create<T extends VerificationCodeCreateArgs>(args: SelectSubset<T, VerificationCodeCreateArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationCodes.
     * @param {VerificationCodeCreateManyArgs} args - Arguments to create many VerificationCodes.
     * @example
     * // Create many VerificationCodes
     * const verificationCode = await prisma.verificationCode.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationCodeCreateManyArgs>(args?: SelectSubset<T, VerificationCodeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationCodes and returns the data saved in the database.
     * @param {VerificationCodeCreateManyAndReturnArgs} args - Arguments to create many VerificationCodes.
     * @example
     * // Create many VerificationCodes
     * const verificationCode = await prisma.verificationCode.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationCodes and only return the `id`
     * const verificationCodeWithIdOnly = await prisma.verificationCode.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationCodeCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationCodeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationCode.
     * @param {VerificationCodeDeleteArgs} args - Arguments to delete one VerificationCode.
     * @example
     * // Delete one VerificationCode
     * const VerificationCode = await prisma.verificationCode.delete({
     *   where: {
     *     // ... filter to delete one VerificationCode
     *   }
     * })
     * 
     */
    delete<T extends VerificationCodeDeleteArgs>(args: SelectSubset<T, VerificationCodeDeleteArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationCode.
     * @param {VerificationCodeUpdateArgs} args - Arguments to update one VerificationCode.
     * @example
     * // Update one VerificationCode
     * const verificationCode = await prisma.verificationCode.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationCodeUpdateArgs>(args: SelectSubset<T, VerificationCodeUpdateArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationCodes.
     * @param {VerificationCodeDeleteManyArgs} args - Arguments to filter VerificationCodes to delete.
     * @example
     * // Delete a few VerificationCodes
     * const { count } = await prisma.verificationCode.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationCodeDeleteManyArgs>(args?: SelectSubset<T, VerificationCodeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationCodes
     * const verificationCode = await prisma.verificationCode.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationCodeUpdateManyArgs>(args: SelectSubset<T, VerificationCodeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationCodes and returns the data updated in the database.
     * @param {VerificationCodeUpdateManyAndReturnArgs} args - Arguments to update many VerificationCodes.
     * @example
     * // Update many VerificationCodes
     * const verificationCode = await prisma.verificationCode.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationCodes and only return the `id`
     * const verificationCodeWithIdOnly = await prisma.verificationCode.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationCodeUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationCodeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationCode.
     * @param {VerificationCodeUpsertArgs} args - Arguments to update or create a VerificationCode.
     * @example
     * // Update or create a VerificationCode
     * const verificationCode = await prisma.verificationCode.upsert({
     *   create: {
     *     // ... data to create a VerificationCode
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationCode we want to update
     *   }
     * })
     */
    upsert<T extends VerificationCodeUpsertArgs>(args: SelectSubset<T, VerificationCodeUpsertArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeCountArgs} args - Arguments to filter VerificationCodes to count.
     * @example
     * // Count the number of VerificationCodes
     * const count = await prisma.verificationCode.count({
     *   where: {
     *     // ... the filter for the VerificationCodes we want to count
     *   }
     * })
    **/
    count<T extends VerificationCodeCountArgs>(
      args?: Subset<T, VerificationCodeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationCodeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationCodeAggregateArgs>(args: Subset<T, VerificationCodeAggregateArgs>): Prisma.PrismaPromise<GetVerificationCodeAggregateType<T>>

    /**
     * Group by VerificationCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationCodeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationCodeGroupByArgs['orderBy'] }
        : { orderBy?: VerificationCodeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationCodeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationCodeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationCode model
   */
  readonly fields: VerificationCodeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationCode.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationCodeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationCode model
   */
  interface VerificationCodeFieldRefs {
    readonly id: FieldRef<"VerificationCode", 'Int'>
    readonly email: FieldRef<"VerificationCode", 'String'>
    readonly code: FieldRef<"VerificationCode", 'String'>
    readonly type: FieldRef<"VerificationCode", 'VerificationCodeType'>
    readonly expiresAt: FieldRef<"VerificationCode", 'DateTime'>
    readonly createdAt: FieldRef<"VerificationCode", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationCode findUnique
   */
  export type VerificationCodeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode findUniqueOrThrow
   */
  export type VerificationCodeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode findFirst
   */
  export type VerificationCodeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationCodes.
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationCodes.
     */
    distinct?: VerificationCodeScalarFieldEnum | VerificationCodeScalarFieldEnum[]
  }

  /**
   * VerificationCode findFirstOrThrow
   */
  export type VerificationCodeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationCodes.
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationCodes.
     */
    distinct?: VerificationCodeScalarFieldEnum | VerificationCodeScalarFieldEnum[]
  }

  /**
   * VerificationCode findMany
   */
  export type VerificationCodeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCodes to fetch.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationCodes.
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    distinct?: VerificationCodeScalarFieldEnum | VerificationCodeScalarFieldEnum[]
  }

  /**
   * VerificationCode create
   */
  export type VerificationCodeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationCode.
     */
    data: XOR<VerificationCodeCreateInput, VerificationCodeUncheckedCreateInput>
  }

  /**
   * VerificationCode createMany
   */
  export type VerificationCodeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationCodes.
     */
    data: VerificationCodeCreateManyInput | VerificationCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationCode createManyAndReturn
   */
  export type VerificationCodeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationCodes.
     */
    data: VerificationCodeCreateManyInput | VerificationCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationCode update
   */
  export type VerificationCodeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationCode.
     */
    data: XOR<VerificationCodeUpdateInput, VerificationCodeUncheckedUpdateInput>
    /**
     * Choose, which VerificationCode to update.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode updateMany
   */
  export type VerificationCodeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationCodes.
     */
    data: XOR<VerificationCodeUpdateManyMutationInput, VerificationCodeUncheckedUpdateManyInput>
    /**
     * Filter which VerificationCodes to update
     */
    where?: VerificationCodeWhereInput
    /**
     * Limit how many VerificationCodes to update.
     */
    limit?: number
  }

  /**
   * VerificationCode updateManyAndReturn
   */
  export type VerificationCodeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data used to update VerificationCodes.
     */
    data: XOR<VerificationCodeUpdateManyMutationInput, VerificationCodeUncheckedUpdateManyInput>
    /**
     * Filter which VerificationCodes to update
     */
    where?: VerificationCodeWhereInput
    /**
     * Limit how many VerificationCodes to update.
     */
    limit?: number
  }

  /**
   * VerificationCode upsert
   */
  export type VerificationCodeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationCode to update in case it exists.
     */
    where: VerificationCodeWhereUniqueInput
    /**
     * In case the VerificationCode found by the `where` argument doesn't exist, create a new VerificationCode with this data.
     */
    create: XOR<VerificationCodeCreateInput, VerificationCodeUncheckedCreateInput>
    /**
     * In case the VerificationCode was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationCodeUpdateInput, VerificationCodeUncheckedUpdateInput>
  }

  /**
   * VerificationCode delete
   */
  export type VerificationCodeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter which VerificationCode to delete.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode deleteMany
   */
  export type VerificationCodeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationCodes to delete
     */
    where?: VerificationCodeWhereInput
    /**
     * Limit how many VerificationCodes to delete.
     */
    limit?: number
  }

  /**
   * VerificationCode without action
   */
  export type VerificationCodeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
  }


  /**
   * Model WorkLog
   */

  export type AggregateWorkLog = {
    _count: WorkLogCountAggregateOutputType | null
    _avg: WorkLogAvgAggregateOutputType | null
    _sum: WorkLogSumAggregateOutputType | null
    _min: WorkLogMinAggregateOutputType | null
    _max: WorkLogMaxAggregateOutputType | null
  }

  export type WorkLogAvgAggregateOutputType = {
    id: number | null
    staffId: number | null
    bookingId: number | null
  }

  export type WorkLogSumAggregateOutputType = {
    id: number | null
    staffId: number | null
    bookingId: number | null
  }

  export type WorkLogMinAggregateOutputType = {
    id: number | null
    staffId: number | null
    bookingId: number | null
    checkIn: Date | null
    checkOut: Date | null
    note: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WorkLogMaxAggregateOutputType = {
    id: number | null
    staffId: number | null
    bookingId: number | null
    checkIn: Date | null
    checkOut: Date | null
    note: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type WorkLogCountAggregateOutputType = {
    id: number
    staffId: number
    bookingId: number
    checkIn: number
    checkOut: number
    note: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type WorkLogAvgAggregateInputType = {
    id?: true
    staffId?: true
    bookingId?: true
  }

  export type WorkLogSumAggregateInputType = {
    id?: true
    staffId?: true
    bookingId?: true
  }

  export type WorkLogMinAggregateInputType = {
    id?: true
    staffId?: true
    bookingId?: true
    checkIn?: true
    checkOut?: true
    note?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WorkLogMaxAggregateInputType = {
    id?: true
    staffId?: true
    bookingId?: true
    checkIn?: true
    checkOut?: true
    note?: true
    createdAt?: true
    updatedAt?: true
  }

  export type WorkLogCountAggregateInputType = {
    id?: true
    staffId?: true
    bookingId?: true
    checkIn?: true
    checkOut?: true
    note?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type WorkLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WorkLog to aggregate.
     */
    where?: WorkLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkLogs to fetch.
     */
    orderBy?: WorkLogOrderByWithRelationInput | WorkLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WorkLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WorkLogs
    **/
    _count?: true | WorkLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WorkLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WorkLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WorkLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WorkLogMaxAggregateInputType
  }

  export type GetWorkLogAggregateType<T extends WorkLogAggregateArgs> = {
        [P in keyof T & keyof AggregateWorkLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWorkLog[P]>
      : GetScalarType<T[P], AggregateWorkLog[P]>
  }




  export type WorkLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WorkLogWhereInput
    orderBy?: WorkLogOrderByWithAggregationInput | WorkLogOrderByWithAggregationInput[]
    by: WorkLogScalarFieldEnum[] | WorkLogScalarFieldEnum
    having?: WorkLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WorkLogCountAggregateInputType | true
    _avg?: WorkLogAvgAggregateInputType
    _sum?: WorkLogSumAggregateInputType
    _min?: WorkLogMinAggregateInputType
    _max?: WorkLogMaxAggregateInputType
  }

  export type WorkLogGroupByOutputType = {
    id: number
    staffId: number
    bookingId: number
    checkIn: Date | null
    checkOut: Date | null
    note: string | null
    createdAt: Date
    updatedAt: Date
    _count: WorkLogCountAggregateOutputType | null
    _avg: WorkLogAvgAggregateOutputType | null
    _sum: WorkLogSumAggregateOutputType | null
    _min: WorkLogMinAggregateOutputType | null
    _max: WorkLogMaxAggregateOutputType | null
  }

  type GetWorkLogGroupByPayload<T extends WorkLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WorkLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WorkLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WorkLogGroupByOutputType[P]>
            : GetScalarType<T[P], WorkLogGroupByOutputType[P]>
        }
      >
    >


  export type WorkLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staffId?: boolean
    bookingId?: boolean
    checkIn?: boolean
    checkOut?: boolean
    note?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workLog"]>

  export type WorkLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staffId?: boolean
    bookingId?: boolean
    checkIn?: boolean
    checkOut?: boolean
    note?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workLog"]>

  export type WorkLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staffId?: boolean
    bookingId?: boolean
    checkIn?: boolean
    checkOut?: boolean
    note?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["workLog"]>

  export type WorkLogSelectScalar = {
    id?: boolean
    staffId?: boolean
    bookingId?: boolean
    checkIn?: boolean
    checkOut?: boolean
    note?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type WorkLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staffId" | "bookingId" | "checkIn" | "checkOut" | "note" | "createdAt" | "updatedAt", ExtArgs["result"]["workLog"]>
  export type WorkLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type WorkLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type WorkLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }

  export type $WorkLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WorkLog"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs>
      Staff: Prisma.$StaffPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      staffId: number
      bookingId: number
      checkIn: Date | null
      checkOut: Date | null
      note: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["workLog"]>
    composites: {}
  }

  type WorkLogGetPayload<S extends boolean | null | undefined | WorkLogDefaultArgs> = $Result.GetResult<Prisma.$WorkLogPayload, S>

  type WorkLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WorkLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WorkLogCountAggregateInputType | true
    }

  export interface WorkLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WorkLog'], meta: { name: 'WorkLog' } }
    /**
     * Find zero or one WorkLog that matches the filter.
     * @param {WorkLogFindUniqueArgs} args - Arguments to find a WorkLog
     * @example
     * // Get one WorkLog
     * const workLog = await prisma.workLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WorkLogFindUniqueArgs>(args: SelectSubset<T, WorkLogFindUniqueArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one WorkLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WorkLogFindUniqueOrThrowArgs} args - Arguments to find a WorkLog
     * @example
     * // Get one WorkLog
     * const workLog = await prisma.workLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WorkLogFindUniqueOrThrowArgs>(args: SelectSubset<T, WorkLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WorkLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogFindFirstArgs} args - Arguments to find a WorkLog
     * @example
     * // Get one WorkLog
     * const workLog = await prisma.workLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WorkLogFindFirstArgs>(args?: SelectSubset<T, WorkLogFindFirstArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first WorkLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogFindFirstOrThrowArgs} args - Arguments to find a WorkLog
     * @example
     * // Get one WorkLog
     * const workLog = await prisma.workLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WorkLogFindFirstOrThrowArgs>(args?: SelectSubset<T, WorkLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more WorkLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WorkLogs
     * const workLogs = await prisma.workLog.findMany()
     * 
     * // Get first 10 WorkLogs
     * const workLogs = await prisma.workLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const workLogWithIdOnly = await prisma.workLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WorkLogFindManyArgs>(args?: SelectSubset<T, WorkLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a WorkLog.
     * @param {WorkLogCreateArgs} args - Arguments to create a WorkLog.
     * @example
     * // Create one WorkLog
     * const WorkLog = await prisma.workLog.create({
     *   data: {
     *     // ... data to create a WorkLog
     *   }
     * })
     * 
     */
    create<T extends WorkLogCreateArgs>(args: SelectSubset<T, WorkLogCreateArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many WorkLogs.
     * @param {WorkLogCreateManyArgs} args - Arguments to create many WorkLogs.
     * @example
     * // Create many WorkLogs
     * const workLog = await prisma.workLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WorkLogCreateManyArgs>(args?: SelectSubset<T, WorkLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many WorkLogs and returns the data saved in the database.
     * @param {WorkLogCreateManyAndReturnArgs} args - Arguments to create many WorkLogs.
     * @example
     * // Create many WorkLogs
     * const workLog = await prisma.workLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many WorkLogs and only return the `id`
     * const workLogWithIdOnly = await prisma.workLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends WorkLogCreateManyAndReturnArgs>(args?: SelectSubset<T, WorkLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a WorkLog.
     * @param {WorkLogDeleteArgs} args - Arguments to delete one WorkLog.
     * @example
     * // Delete one WorkLog
     * const WorkLog = await prisma.workLog.delete({
     *   where: {
     *     // ... filter to delete one WorkLog
     *   }
     * })
     * 
     */
    delete<T extends WorkLogDeleteArgs>(args: SelectSubset<T, WorkLogDeleteArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one WorkLog.
     * @param {WorkLogUpdateArgs} args - Arguments to update one WorkLog.
     * @example
     * // Update one WorkLog
     * const workLog = await prisma.workLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WorkLogUpdateArgs>(args: SelectSubset<T, WorkLogUpdateArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more WorkLogs.
     * @param {WorkLogDeleteManyArgs} args - Arguments to filter WorkLogs to delete.
     * @example
     * // Delete a few WorkLogs
     * const { count } = await prisma.workLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WorkLogDeleteManyArgs>(args?: SelectSubset<T, WorkLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WorkLogs
     * const workLog = await prisma.workLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WorkLogUpdateManyArgs>(args: SelectSubset<T, WorkLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WorkLogs and returns the data updated in the database.
     * @param {WorkLogUpdateManyAndReturnArgs} args - Arguments to update many WorkLogs.
     * @example
     * // Update many WorkLogs
     * const workLog = await prisma.workLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more WorkLogs and only return the `id`
     * const workLogWithIdOnly = await prisma.workLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends WorkLogUpdateManyAndReturnArgs>(args: SelectSubset<T, WorkLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one WorkLog.
     * @param {WorkLogUpsertArgs} args - Arguments to update or create a WorkLog.
     * @example
     * // Update or create a WorkLog
     * const workLog = await prisma.workLog.upsert({
     *   create: {
     *     // ... data to create a WorkLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WorkLog we want to update
     *   }
     * })
     */
    upsert<T extends WorkLogUpsertArgs>(args: SelectSubset<T, WorkLogUpsertArgs<ExtArgs>>): Prisma__WorkLogClient<$Result.GetResult<Prisma.$WorkLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of WorkLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogCountArgs} args - Arguments to filter WorkLogs to count.
     * @example
     * // Count the number of WorkLogs
     * const count = await prisma.workLog.count({
     *   where: {
     *     // ... the filter for the WorkLogs we want to count
     *   }
     * })
    **/
    count<T extends WorkLogCountArgs>(
      args?: Subset<T, WorkLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WorkLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WorkLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WorkLogAggregateArgs>(args: Subset<T, WorkLogAggregateArgs>): Prisma.PrismaPromise<GetWorkLogAggregateType<T>>

    /**
     * Group by WorkLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WorkLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WorkLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WorkLogGroupByArgs['orderBy'] }
        : { orderBy?: WorkLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WorkLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WorkLog model
   */
  readonly fields: WorkLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WorkLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WorkLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends BookingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BookingDefaultArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Staff<T extends StaffDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StaffDefaultArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WorkLog model
   */
  interface WorkLogFieldRefs {
    readonly id: FieldRef<"WorkLog", 'Int'>
    readonly staffId: FieldRef<"WorkLog", 'Int'>
    readonly bookingId: FieldRef<"WorkLog", 'Int'>
    readonly checkIn: FieldRef<"WorkLog", 'DateTime'>
    readonly checkOut: FieldRef<"WorkLog", 'DateTime'>
    readonly note: FieldRef<"WorkLog", 'String'>
    readonly createdAt: FieldRef<"WorkLog", 'DateTime'>
    readonly updatedAt: FieldRef<"WorkLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * WorkLog findUnique
   */
  export type WorkLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * Filter, which WorkLog to fetch.
     */
    where: WorkLogWhereUniqueInput
  }

  /**
   * WorkLog findUniqueOrThrow
   */
  export type WorkLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * Filter, which WorkLog to fetch.
     */
    where: WorkLogWhereUniqueInput
  }

  /**
   * WorkLog findFirst
   */
  export type WorkLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * Filter, which WorkLog to fetch.
     */
    where?: WorkLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkLogs to fetch.
     */
    orderBy?: WorkLogOrderByWithRelationInput | WorkLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkLogs.
     */
    cursor?: WorkLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkLogs.
     */
    distinct?: WorkLogScalarFieldEnum | WorkLogScalarFieldEnum[]
  }

  /**
   * WorkLog findFirstOrThrow
   */
  export type WorkLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * Filter, which WorkLog to fetch.
     */
    where?: WorkLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkLogs to fetch.
     */
    orderBy?: WorkLogOrderByWithRelationInput | WorkLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WorkLogs.
     */
    cursor?: WorkLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WorkLogs.
     */
    distinct?: WorkLogScalarFieldEnum | WorkLogScalarFieldEnum[]
  }

  /**
   * WorkLog findMany
   */
  export type WorkLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * Filter, which WorkLogs to fetch.
     */
    where?: WorkLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WorkLogs to fetch.
     */
    orderBy?: WorkLogOrderByWithRelationInput | WorkLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WorkLogs.
     */
    cursor?: WorkLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WorkLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WorkLogs.
     */
    skip?: number
    distinct?: WorkLogScalarFieldEnum | WorkLogScalarFieldEnum[]
  }

  /**
   * WorkLog create
   */
  export type WorkLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * The data needed to create a WorkLog.
     */
    data: XOR<WorkLogCreateInput, WorkLogUncheckedCreateInput>
  }

  /**
   * WorkLog createMany
   */
  export type WorkLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WorkLogs.
     */
    data: WorkLogCreateManyInput | WorkLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * WorkLog createManyAndReturn
   */
  export type WorkLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * The data used to create many WorkLogs.
     */
    data: WorkLogCreateManyInput | WorkLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * WorkLog update
   */
  export type WorkLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * The data needed to update a WorkLog.
     */
    data: XOR<WorkLogUpdateInput, WorkLogUncheckedUpdateInput>
    /**
     * Choose, which WorkLog to update.
     */
    where: WorkLogWhereUniqueInput
  }

  /**
   * WorkLog updateMany
   */
  export type WorkLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WorkLogs.
     */
    data: XOR<WorkLogUpdateManyMutationInput, WorkLogUncheckedUpdateManyInput>
    /**
     * Filter which WorkLogs to update
     */
    where?: WorkLogWhereInput
    /**
     * Limit how many WorkLogs to update.
     */
    limit?: number
  }

  /**
   * WorkLog updateManyAndReturn
   */
  export type WorkLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * The data used to update WorkLogs.
     */
    data: XOR<WorkLogUpdateManyMutationInput, WorkLogUncheckedUpdateManyInput>
    /**
     * Filter which WorkLogs to update
     */
    where?: WorkLogWhereInput
    /**
     * Limit how many WorkLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * WorkLog upsert
   */
  export type WorkLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * The filter to search for the WorkLog to update in case it exists.
     */
    where: WorkLogWhereUniqueInput
    /**
     * In case the WorkLog found by the `where` argument doesn't exist, create a new WorkLog with this data.
     */
    create: XOR<WorkLogCreateInput, WorkLogUncheckedCreateInput>
    /**
     * In case the WorkLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WorkLogUpdateInput, WorkLogUncheckedUpdateInput>
  }

  /**
   * WorkLog delete
   */
  export type WorkLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
    /**
     * Filter which WorkLog to delete.
     */
    where: WorkLogWhereUniqueInput
  }

  /**
   * WorkLog deleteMany
   */
  export type WorkLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WorkLogs to delete
     */
    where?: WorkLogWhereInput
    /**
     * Limit how many WorkLogs to delete.
     */
    limit?: number
  }

  /**
   * WorkLog without action
   */
  export type WorkLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WorkLog
     */
    select?: WorkLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the WorkLog
     */
    omit?: WorkLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WorkLogInclude<ExtArgs> | null
  }


  /**
   * Model InspectionReport
   */

  export type AggregateInspectionReport = {
    _count: InspectionReportCountAggregateOutputType | null
    _avg: InspectionReportAvgAggregateOutputType | null
    _sum: InspectionReportSumAggregateOutputType | null
    _min: InspectionReportMinAggregateOutputType | null
    _max: InspectionReportMaxAggregateOutputType | null
  }

  export type InspectionReportAvgAggregateOutputType = {
    id: number | null
    bookingId: number | null
    staffId: number | null
    estimatedTime: number | null
  }

  export type InspectionReportSumAggregateOutputType = {
    id: number | null
    bookingId: number | null
    staffId: number | null
    estimatedTime: number | null
  }

  export type InspectionReportMinAggregateOutputType = {
    id: number | null
    bookingId: number | null
    staffId: number | null
    estimatedTime: number | null
    note: string | null
    createdAt: Date | null
  }

  export type InspectionReportMaxAggregateOutputType = {
    id: number | null
    bookingId: number | null
    staffId: number | null
    estimatedTime: number | null
    note: string | null
    createdAt: Date | null
  }

  export type InspectionReportCountAggregateOutputType = {
    id: number
    bookingId: number
    staffId: number
    estimatedTime: number
    note: number
    images: number
    createdAt: number
    _all: number
  }


  export type InspectionReportAvgAggregateInputType = {
    id?: true
    bookingId?: true
    staffId?: true
    estimatedTime?: true
  }

  export type InspectionReportSumAggregateInputType = {
    id?: true
    bookingId?: true
    staffId?: true
    estimatedTime?: true
  }

  export type InspectionReportMinAggregateInputType = {
    id?: true
    bookingId?: true
    staffId?: true
    estimatedTime?: true
    note?: true
    createdAt?: true
  }

  export type InspectionReportMaxAggregateInputType = {
    id?: true
    bookingId?: true
    staffId?: true
    estimatedTime?: true
    note?: true
    createdAt?: true
  }

  export type InspectionReportCountAggregateInputType = {
    id?: true
    bookingId?: true
    staffId?: true
    estimatedTime?: true
    note?: true
    images?: true
    createdAt?: true
    _all?: true
  }

  export type InspectionReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InspectionReport to aggregate.
     */
    where?: InspectionReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InspectionReports to fetch.
     */
    orderBy?: InspectionReportOrderByWithRelationInput | InspectionReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InspectionReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InspectionReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InspectionReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InspectionReports
    **/
    _count?: true | InspectionReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InspectionReportAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InspectionReportSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InspectionReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InspectionReportMaxAggregateInputType
  }

  export type GetInspectionReportAggregateType<T extends InspectionReportAggregateArgs> = {
        [P in keyof T & keyof AggregateInspectionReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInspectionReport[P]>
      : GetScalarType<T[P], AggregateInspectionReport[P]>
  }




  export type InspectionReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InspectionReportWhereInput
    orderBy?: InspectionReportOrderByWithAggregationInput | InspectionReportOrderByWithAggregationInput[]
    by: InspectionReportScalarFieldEnum[] | InspectionReportScalarFieldEnum
    having?: InspectionReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InspectionReportCountAggregateInputType | true
    _avg?: InspectionReportAvgAggregateInputType
    _sum?: InspectionReportSumAggregateInputType
    _min?: InspectionReportMinAggregateInputType
    _max?: InspectionReportMaxAggregateInputType
  }

  export type InspectionReportGroupByOutputType = {
    id: number
    bookingId: number
    staffId: number
    estimatedTime: number | null
    note: string | null
    images: string[]
    createdAt: Date
    _count: InspectionReportCountAggregateOutputType | null
    _avg: InspectionReportAvgAggregateOutputType | null
    _sum: InspectionReportSumAggregateOutputType | null
    _min: InspectionReportMinAggregateOutputType | null
    _max: InspectionReportMaxAggregateOutputType | null
  }

  type GetInspectionReportGroupByPayload<T extends InspectionReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InspectionReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InspectionReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InspectionReportGroupByOutputType[P]>
            : GetScalarType<T[P], InspectionReportGroupByOutputType[P]>
        }
      >
    >


  export type InspectionReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    staffId?: boolean
    estimatedTime?: boolean
    note?: boolean
    images?: boolean
    createdAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inspectionReport"]>

  export type InspectionReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    staffId?: boolean
    estimatedTime?: boolean
    note?: boolean
    images?: boolean
    createdAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inspectionReport"]>

  export type InspectionReportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    staffId?: boolean
    estimatedTime?: boolean
    note?: boolean
    images?: boolean
    createdAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inspectionReport"]>

  export type InspectionReportSelectScalar = {
    id?: boolean
    bookingId?: boolean
    staffId?: boolean
    estimatedTime?: boolean
    note?: boolean
    images?: boolean
    createdAt?: boolean
  }

  export type InspectionReportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "staffId" | "estimatedTime" | "note" | "images" | "createdAt", ExtArgs["result"]["inspectionReport"]>
  export type InspectionReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type InspectionReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }
  export type InspectionReportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Staff?: boolean | StaffDefaultArgs<ExtArgs>
  }

  export type $InspectionReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InspectionReport"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs>
      Staff: Prisma.$StaffPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: number
      staffId: number
      estimatedTime: number | null
      note: string | null
      images: string[]
      createdAt: Date
    }, ExtArgs["result"]["inspectionReport"]>
    composites: {}
  }

  type InspectionReportGetPayload<S extends boolean | null | undefined | InspectionReportDefaultArgs> = $Result.GetResult<Prisma.$InspectionReportPayload, S>

  type InspectionReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InspectionReportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InspectionReportCountAggregateInputType | true
    }

  export interface InspectionReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InspectionReport'], meta: { name: 'InspectionReport' } }
    /**
     * Find zero or one InspectionReport that matches the filter.
     * @param {InspectionReportFindUniqueArgs} args - Arguments to find a InspectionReport
     * @example
     * // Get one InspectionReport
     * const inspectionReport = await prisma.inspectionReport.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InspectionReportFindUniqueArgs>(args: SelectSubset<T, InspectionReportFindUniqueArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InspectionReport that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InspectionReportFindUniqueOrThrowArgs} args - Arguments to find a InspectionReport
     * @example
     * // Get one InspectionReport
     * const inspectionReport = await prisma.inspectionReport.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InspectionReportFindUniqueOrThrowArgs>(args: SelectSubset<T, InspectionReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InspectionReport that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportFindFirstArgs} args - Arguments to find a InspectionReport
     * @example
     * // Get one InspectionReport
     * const inspectionReport = await prisma.inspectionReport.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InspectionReportFindFirstArgs>(args?: SelectSubset<T, InspectionReportFindFirstArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InspectionReport that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportFindFirstOrThrowArgs} args - Arguments to find a InspectionReport
     * @example
     * // Get one InspectionReport
     * const inspectionReport = await prisma.inspectionReport.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InspectionReportFindFirstOrThrowArgs>(args?: SelectSubset<T, InspectionReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InspectionReports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InspectionReports
     * const inspectionReports = await prisma.inspectionReport.findMany()
     * 
     * // Get first 10 InspectionReports
     * const inspectionReports = await prisma.inspectionReport.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inspectionReportWithIdOnly = await prisma.inspectionReport.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InspectionReportFindManyArgs>(args?: SelectSubset<T, InspectionReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InspectionReport.
     * @param {InspectionReportCreateArgs} args - Arguments to create a InspectionReport.
     * @example
     * // Create one InspectionReport
     * const InspectionReport = await prisma.inspectionReport.create({
     *   data: {
     *     // ... data to create a InspectionReport
     *   }
     * })
     * 
     */
    create<T extends InspectionReportCreateArgs>(args: SelectSubset<T, InspectionReportCreateArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InspectionReports.
     * @param {InspectionReportCreateManyArgs} args - Arguments to create many InspectionReports.
     * @example
     * // Create many InspectionReports
     * const inspectionReport = await prisma.inspectionReport.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InspectionReportCreateManyArgs>(args?: SelectSubset<T, InspectionReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InspectionReports and returns the data saved in the database.
     * @param {InspectionReportCreateManyAndReturnArgs} args - Arguments to create many InspectionReports.
     * @example
     * // Create many InspectionReports
     * const inspectionReport = await prisma.inspectionReport.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InspectionReports and only return the `id`
     * const inspectionReportWithIdOnly = await prisma.inspectionReport.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InspectionReportCreateManyAndReturnArgs>(args?: SelectSubset<T, InspectionReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InspectionReport.
     * @param {InspectionReportDeleteArgs} args - Arguments to delete one InspectionReport.
     * @example
     * // Delete one InspectionReport
     * const InspectionReport = await prisma.inspectionReport.delete({
     *   where: {
     *     // ... filter to delete one InspectionReport
     *   }
     * })
     * 
     */
    delete<T extends InspectionReportDeleteArgs>(args: SelectSubset<T, InspectionReportDeleteArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InspectionReport.
     * @param {InspectionReportUpdateArgs} args - Arguments to update one InspectionReport.
     * @example
     * // Update one InspectionReport
     * const inspectionReport = await prisma.inspectionReport.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InspectionReportUpdateArgs>(args: SelectSubset<T, InspectionReportUpdateArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InspectionReports.
     * @param {InspectionReportDeleteManyArgs} args - Arguments to filter InspectionReports to delete.
     * @example
     * // Delete a few InspectionReports
     * const { count } = await prisma.inspectionReport.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InspectionReportDeleteManyArgs>(args?: SelectSubset<T, InspectionReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InspectionReports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InspectionReports
     * const inspectionReport = await prisma.inspectionReport.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InspectionReportUpdateManyArgs>(args: SelectSubset<T, InspectionReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InspectionReports and returns the data updated in the database.
     * @param {InspectionReportUpdateManyAndReturnArgs} args - Arguments to update many InspectionReports.
     * @example
     * // Update many InspectionReports
     * const inspectionReport = await prisma.inspectionReport.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InspectionReports and only return the `id`
     * const inspectionReportWithIdOnly = await prisma.inspectionReport.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InspectionReportUpdateManyAndReturnArgs>(args: SelectSubset<T, InspectionReportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InspectionReport.
     * @param {InspectionReportUpsertArgs} args - Arguments to update or create a InspectionReport.
     * @example
     * // Update or create a InspectionReport
     * const inspectionReport = await prisma.inspectionReport.upsert({
     *   create: {
     *     // ... data to create a InspectionReport
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InspectionReport we want to update
     *   }
     * })
     */
    upsert<T extends InspectionReportUpsertArgs>(args: SelectSubset<T, InspectionReportUpsertArgs<ExtArgs>>): Prisma__InspectionReportClient<$Result.GetResult<Prisma.$InspectionReportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InspectionReports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportCountArgs} args - Arguments to filter InspectionReports to count.
     * @example
     * // Count the number of InspectionReports
     * const count = await prisma.inspectionReport.count({
     *   where: {
     *     // ... the filter for the InspectionReports we want to count
     *   }
     * })
    **/
    count<T extends InspectionReportCountArgs>(
      args?: Subset<T, InspectionReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InspectionReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InspectionReport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InspectionReportAggregateArgs>(args: Subset<T, InspectionReportAggregateArgs>): Prisma.PrismaPromise<GetInspectionReportAggregateType<T>>

    /**
     * Group by InspectionReport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspectionReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InspectionReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InspectionReportGroupByArgs['orderBy'] }
        : { orderBy?: InspectionReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InspectionReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInspectionReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InspectionReport model
   */
  readonly fields: InspectionReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InspectionReport.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InspectionReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends BookingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BookingDefaultArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Staff<T extends StaffDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StaffDefaultArgs<ExtArgs>>): Prisma__StaffClient<$Result.GetResult<Prisma.$StaffPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InspectionReport model
   */
  interface InspectionReportFieldRefs {
    readonly id: FieldRef<"InspectionReport", 'Int'>
    readonly bookingId: FieldRef<"InspectionReport", 'Int'>
    readonly staffId: FieldRef<"InspectionReport", 'Int'>
    readonly estimatedTime: FieldRef<"InspectionReport", 'Int'>
    readonly note: FieldRef<"InspectionReport", 'String'>
    readonly images: FieldRef<"InspectionReport", 'String[]'>
    readonly createdAt: FieldRef<"InspectionReport", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InspectionReport findUnique
   */
  export type InspectionReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * Filter, which InspectionReport to fetch.
     */
    where: InspectionReportWhereUniqueInput
  }

  /**
   * InspectionReport findUniqueOrThrow
   */
  export type InspectionReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * Filter, which InspectionReport to fetch.
     */
    where: InspectionReportWhereUniqueInput
  }

  /**
   * InspectionReport findFirst
   */
  export type InspectionReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * Filter, which InspectionReport to fetch.
     */
    where?: InspectionReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InspectionReports to fetch.
     */
    orderBy?: InspectionReportOrderByWithRelationInput | InspectionReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InspectionReports.
     */
    cursor?: InspectionReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InspectionReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InspectionReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InspectionReports.
     */
    distinct?: InspectionReportScalarFieldEnum | InspectionReportScalarFieldEnum[]
  }

  /**
   * InspectionReport findFirstOrThrow
   */
  export type InspectionReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * Filter, which InspectionReport to fetch.
     */
    where?: InspectionReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InspectionReports to fetch.
     */
    orderBy?: InspectionReportOrderByWithRelationInput | InspectionReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InspectionReports.
     */
    cursor?: InspectionReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InspectionReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InspectionReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InspectionReports.
     */
    distinct?: InspectionReportScalarFieldEnum | InspectionReportScalarFieldEnum[]
  }

  /**
   * InspectionReport findMany
   */
  export type InspectionReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * Filter, which InspectionReports to fetch.
     */
    where?: InspectionReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InspectionReports to fetch.
     */
    orderBy?: InspectionReportOrderByWithRelationInput | InspectionReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InspectionReports.
     */
    cursor?: InspectionReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InspectionReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InspectionReports.
     */
    skip?: number
    distinct?: InspectionReportScalarFieldEnum | InspectionReportScalarFieldEnum[]
  }

  /**
   * InspectionReport create
   */
  export type InspectionReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * The data needed to create a InspectionReport.
     */
    data: XOR<InspectionReportCreateInput, InspectionReportUncheckedCreateInput>
  }

  /**
   * InspectionReport createMany
   */
  export type InspectionReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InspectionReports.
     */
    data: InspectionReportCreateManyInput | InspectionReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InspectionReport createManyAndReturn
   */
  export type InspectionReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * The data used to create many InspectionReports.
     */
    data: InspectionReportCreateManyInput | InspectionReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InspectionReport update
   */
  export type InspectionReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * The data needed to update a InspectionReport.
     */
    data: XOR<InspectionReportUpdateInput, InspectionReportUncheckedUpdateInput>
    /**
     * Choose, which InspectionReport to update.
     */
    where: InspectionReportWhereUniqueInput
  }

  /**
   * InspectionReport updateMany
   */
  export type InspectionReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InspectionReports.
     */
    data: XOR<InspectionReportUpdateManyMutationInput, InspectionReportUncheckedUpdateManyInput>
    /**
     * Filter which InspectionReports to update
     */
    where?: InspectionReportWhereInput
    /**
     * Limit how many InspectionReports to update.
     */
    limit?: number
  }

  /**
   * InspectionReport updateManyAndReturn
   */
  export type InspectionReportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * The data used to update InspectionReports.
     */
    data: XOR<InspectionReportUpdateManyMutationInput, InspectionReportUncheckedUpdateManyInput>
    /**
     * Filter which InspectionReports to update
     */
    where?: InspectionReportWhereInput
    /**
     * Limit how many InspectionReports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InspectionReport upsert
   */
  export type InspectionReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * The filter to search for the InspectionReport to update in case it exists.
     */
    where: InspectionReportWhereUniqueInput
    /**
     * In case the InspectionReport found by the `where` argument doesn't exist, create a new InspectionReport with this data.
     */
    create: XOR<InspectionReportCreateInput, InspectionReportUncheckedCreateInput>
    /**
     * In case the InspectionReport was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InspectionReportUpdateInput, InspectionReportUncheckedUpdateInput>
  }

  /**
   * InspectionReport delete
   */
  export type InspectionReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
    /**
     * Filter which InspectionReport to delete.
     */
    where: InspectionReportWhereUniqueInput
  }

  /**
   * InspectionReport deleteMany
   */
  export type InspectionReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InspectionReports to delete
     */
    where?: InspectionReportWhereInput
    /**
     * Limit how many InspectionReports to delete.
     */
    limit?: number
  }

  /**
   * InspectionReport without action
   */
  export type InspectionReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspectionReport
     */
    select?: InspectionReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InspectionReport
     */
    omit?: InspectionReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspectionReportInclude<ExtArgs> | null
  }


  /**
   * Model ProposedService
   */

  export type AggregateProposedService = {
    _count: ProposedServiceCountAggregateOutputType | null
    _avg: ProposedServiceAvgAggregateOutputType | null
    _sum: ProposedServiceSumAggregateOutputType | null
    _min: ProposedServiceMinAggregateOutputType | null
    _max: ProposedServiceMaxAggregateOutputType | null
  }

  export type ProposedServiceAvgAggregateOutputType = {
    id: number | null
    bookingId: number | null
    serviceId: number | null
    quantity: number | null
    price: number | null
  }

  export type ProposedServiceSumAggregateOutputType = {
    id: number | null
    bookingId: number | null
    serviceId: number | null
    quantity: number | null
    price: number | null
  }

  export type ProposedServiceMinAggregateOutputType = {
    id: number | null
    bookingId: number | null
    serviceId: number | null
    quantity: number | null
    price: number | null
    notes: string | null
    createdAt: Date | null
  }

  export type ProposedServiceMaxAggregateOutputType = {
    id: number | null
    bookingId: number | null
    serviceId: number | null
    quantity: number | null
    price: number | null
    notes: string | null
    createdAt: Date | null
  }

  export type ProposedServiceCountAggregateOutputType = {
    id: number
    bookingId: number
    serviceId: number
    quantity: number
    price: number
    notes: number
    createdAt: number
    _all: number
  }


  export type ProposedServiceAvgAggregateInputType = {
    id?: true
    bookingId?: true
    serviceId?: true
    quantity?: true
    price?: true
  }

  export type ProposedServiceSumAggregateInputType = {
    id?: true
    bookingId?: true
    serviceId?: true
    quantity?: true
    price?: true
  }

  export type ProposedServiceMinAggregateInputType = {
    id?: true
    bookingId?: true
    serviceId?: true
    quantity?: true
    price?: true
    notes?: true
    createdAt?: true
  }

  export type ProposedServiceMaxAggregateInputType = {
    id?: true
    bookingId?: true
    serviceId?: true
    quantity?: true
    price?: true
    notes?: true
    createdAt?: true
  }

  export type ProposedServiceCountAggregateInputType = {
    id?: true
    bookingId?: true
    serviceId?: true
    quantity?: true
    price?: true
    notes?: true
    createdAt?: true
    _all?: true
  }

  export type ProposedServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProposedService to aggregate.
     */
    where?: ProposedServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProposedServices to fetch.
     */
    orderBy?: ProposedServiceOrderByWithRelationInput | ProposedServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProposedServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProposedServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProposedServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProposedServices
    **/
    _count?: true | ProposedServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProposedServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProposedServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProposedServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProposedServiceMaxAggregateInputType
  }

  export type GetProposedServiceAggregateType<T extends ProposedServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateProposedService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProposedService[P]>
      : GetScalarType<T[P], AggregateProposedService[P]>
  }




  export type ProposedServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProposedServiceWhereInput
    orderBy?: ProposedServiceOrderByWithAggregationInput | ProposedServiceOrderByWithAggregationInput[]
    by: ProposedServiceScalarFieldEnum[] | ProposedServiceScalarFieldEnum
    having?: ProposedServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProposedServiceCountAggregateInputType | true
    _avg?: ProposedServiceAvgAggregateInputType
    _sum?: ProposedServiceSumAggregateInputType
    _min?: ProposedServiceMinAggregateInputType
    _max?: ProposedServiceMaxAggregateInputType
  }

  export type ProposedServiceGroupByOutputType = {
    id: number
    bookingId: number
    serviceId: number
    quantity: number
    price: number
    notes: string | null
    createdAt: Date
    _count: ProposedServiceCountAggregateOutputType | null
    _avg: ProposedServiceAvgAggregateOutputType | null
    _sum: ProposedServiceSumAggregateOutputType | null
    _min: ProposedServiceMinAggregateOutputType | null
    _max: ProposedServiceMaxAggregateOutputType | null
  }

  type GetProposedServiceGroupByPayload<T extends ProposedServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProposedServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProposedServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProposedServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ProposedServiceGroupByOutputType[P]>
        }
      >
    >


  export type ProposedServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    serviceId?: boolean
    quantity?: boolean
    price?: boolean
    notes?: boolean
    createdAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proposedService"]>

  export type ProposedServiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    serviceId?: boolean
    quantity?: boolean
    price?: boolean
    notes?: boolean
    createdAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proposedService"]>

  export type ProposedServiceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bookingId?: boolean
    serviceId?: boolean
    quantity?: boolean
    price?: boolean
    notes?: boolean
    createdAt?: boolean
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proposedService"]>

  export type ProposedServiceSelectScalar = {
    id?: boolean
    bookingId?: boolean
    serviceId?: boolean
    quantity?: boolean
    price?: boolean
    notes?: boolean
    createdAt?: boolean
  }

  export type ProposedServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bookingId" | "serviceId" | "quantity" | "price" | "notes" | "createdAt", ExtArgs["result"]["proposedService"]>
  export type ProposedServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }
  export type ProposedServiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }
  export type ProposedServiceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | BookingDefaultArgs<ExtArgs>
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
  }

  export type $ProposedServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProposedService"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs>
      Service: Prisma.$ServicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bookingId: number
      serviceId: number
      quantity: number
      price: number
      notes: string | null
      createdAt: Date
    }, ExtArgs["result"]["proposedService"]>
    composites: {}
  }

  type ProposedServiceGetPayload<S extends boolean | null | undefined | ProposedServiceDefaultArgs> = $Result.GetResult<Prisma.$ProposedServicePayload, S>

  type ProposedServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProposedServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProposedServiceCountAggregateInputType | true
    }

  export interface ProposedServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProposedService'], meta: { name: 'ProposedService' } }
    /**
     * Find zero or one ProposedService that matches the filter.
     * @param {ProposedServiceFindUniqueArgs} args - Arguments to find a ProposedService
     * @example
     * // Get one ProposedService
     * const proposedService = await prisma.proposedService.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProposedServiceFindUniqueArgs>(args: SelectSubset<T, ProposedServiceFindUniqueArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProposedService that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProposedServiceFindUniqueOrThrowArgs} args - Arguments to find a ProposedService
     * @example
     * // Get one ProposedService
     * const proposedService = await prisma.proposedService.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProposedServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, ProposedServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProposedService that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceFindFirstArgs} args - Arguments to find a ProposedService
     * @example
     * // Get one ProposedService
     * const proposedService = await prisma.proposedService.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProposedServiceFindFirstArgs>(args?: SelectSubset<T, ProposedServiceFindFirstArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProposedService that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceFindFirstOrThrowArgs} args - Arguments to find a ProposedService
     * @example
     * // Get one ProposedService
     * const proposedService = await prisma.proposedService.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProposedServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, ProposedServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProposedServices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProposedServices
     * const proposedServices = await prisma.proposedService.findMany()
     * 
     * // Get first 10 ProposedServices
     * const proposedServices = await prisma.proposedService.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proposedServiceWithIdOnly = await prisma.proposedService.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProposedServiceFindManyArgs>(args?: SelectSubset<T, ProposedServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProposedService.
     * @param {ProposedServiceCreateArgs} args - Arguments to create a ProposedService.
     * @example
     * // Create one ProposedService
     * const ProposedService = await prisma.proposedService.create({
     *   data: {
     *     // ... data to create a ProposedService
     *   }
     * })
     * 
     */
    create<T extends ProposedServiceCreateArgs>(args: SelectSubset<T, ProposedServiceCreateArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProposedServices.
     * @param {ProposedServiceCreateManyArgs} args - Arguments to create many ProposedServices.
     * @example
     * // Create many ProposedServices
     * const proposedService = await prisma.proposedService.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProposedServiceCreateManyArgs>(args?: SelectSubset<T, ProposedServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProposedServices and returns the data saved in the database.
     * @param {ProposedServiceCreateManyAndReturnArgs} args - Arguments to create many ProposedServices.
     * @example
     * // Create many ProposedServices
     * const proposedService = await prisma.proposedService.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProposedServices and only return the `id`
     * const proposedServiceWithIdOnly = await prisma.proposedService.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProposedServiceCreateManyAndReturnArgs>(args?: SelectSubset<T, ProposedServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProposedService.
     * @param {ProposedServiceDeleteArgs} args - Arguments to delete one ProposedService.
     * @example
     * // Delete one ProposedService
     * const ProposedService = await prisma.proposedService.delete({
     *   where: {
     *     // ... filter to delete one ProposedService
     *   }
     * })
     * 
     */
    delete<T extends ProposedServiceDeleteArgs>(args: SelectSubset<T, ProposedServiceDeleteArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProposedService.
     * @param {ProposedServiceUpdateArgs} args - Arguments to update one ProposedService.
     * @example
     * // Update one ProposedService
     * const proposedService = await prisma.proposedService.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProposedServiceUpdateArgs>(args: SelectSubset<T, ProposedServiceUpdateArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProposedServices.
     * @param {ProposedServiceDeleteManyArgs} args - Arguments to filter ProposedServices to delete.
     * @example
     * // Delete a few ProposedServices
     * const { count } = await prisma.proposedService.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProposedServiceDeleteManyArgs>(args?: SelectSubset<T, ProposedServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProposedServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProposedServices
     * const proposedService = await prisma.proposedService.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProposedServiceUpdateManyArgs>(args: SelectSubset<T, ProposedServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProposedServices and returns the data updated in the database.
     * @param {ProposedServiceUpdateManyAndReturnArgs} args - Arguments to update many ProposedServices.
     * @example
     * // Update many ProposedServices
     * const proposedService = await prisma.proposedService.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProposedServices and only return the `id`
     * const proposedServiceWithIdOnly = await prisma.proposedService.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProposedServiceUpdateManyAndReturnArgs>(args: SelectSubset<T, ProposedServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProposedService.
     * @param {ProposedServiceUpsertArgs} args - Arguments to update or create a ProposedService.
     * @example
     * // Update or create a ProposedService
     * const proposedService = await prisma.proposedService.upsert({
     *   create: {
     *     // ... data to create a ProposedService
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProposedService we want to update
     *   }
     * })
     */
    upsert<T extends ProposedServiceUpsertArgs>(args: SelectSubset<T, ProposedServiceUpsertArgs<ExtArgs>>): Prisma__ProposedServiceClient<$Result.GetResult<Prisma.$ProposedServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProposedServices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceCountArgs} args - Arguments to filter ProposedServices to count.
     * @example
     * // Count the number of ProposedServices
     * const count = await prisma.proposedService.count({
     *   where: {
     *     // ... the filter for the ProposedServices we want to count
     *   }
     * })
    **/
    count<T extends ProposedServiceCountArgs>(
      args?: Subset<T, ProposedServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProposedServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProposedService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProposedServiceAggregateArgs>(args: Subset<T, ProposedServiceAggregateArgs>): Prisma.PrismaPromise<GetProposedServiceAggregateType<T>>

    /**
     * Group by ProposedService.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProposedServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProposedServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProposedServiceGroupByArgs['orderBy'] }
        : { orderBy?: ProposedServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProposedServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProposedServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProposedService model
   */
  readonly fields: ProposedServiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProposedService.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProposedServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends BookingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BookingDefaultArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProposedService model
   */
  interface ProposedServiceFieldRefs {
    readonly id: FieldRef<"ProposedService", 'Int'>
    readonly bookingId: FieldRef<"ProposedService", 'Int'>
    readonly serviceId: FieldRef<"ProposedService", 'Int'>
    readonly quantity: FieldRef<"ProposedService", 'Int'>
    readonly price: FieldRef<"ProposedService", 'Float'>
    readonly notes: FieldRef<"ProposedService", 'String'>
    readonly createdAt: FieldRef<"ProposedService", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProposedService findUnique
   */
  export type ProposedServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProposedService to fetch.
     */
    where: ProposedServiceWhereUniqueInput
  }

  /**
   * ProposedService findUniqueOrThrow
   */
  export type ProposedServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProposedService to fetch.
     */
    where: ProposedServiceWhereUniqueInput
  }

  /**
   * ProposedService findFirst
   */
  export type ProposedServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProposedService to fetch.
     */
    where?: ProposedServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProposedServices to fetch.
     */
    orderBy?: ProposedServiceOrderByWithRelationInput | ProposedServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProposedServices.
     */
    cursor?: ProposedServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProposedServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProposedServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProposedServices.
     */
    distinct?: ProposedServiceScalarFieldEnum | ProposedServiceScalarFieldEnum[]
  }

  /**
   * ProposedService findFirstOrThrow
   */
  export type ProposedServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProposedService to fetch.
     */
    where?: ProposedServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProposedServices to fetch.
     */
    orderBy?: ProposedServiceOrderByWithRelationInput | ProposedServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProposedServices.
     */
    cursor?: ProposedServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProposedServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProposedServices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProposedServices.
     */
    distinct?: ProposedServiceScalarFieldEnum | ProposedServiceScalarFieldEnum[]
  }

  /**
   * ProposedService findMany
   */
  export type ProposedServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * Filter, which ProposedServices to fetch.
     */
    where?: ProposedServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProposedServices to fetch.
     */
    orderBy?: ProposedServiceOrderByWithRelationInput | ProposedServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProposedServices.
     */
    cursor?: ProposedServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProposedServices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProposedServices.
     */
    skip?: number
    distinct?: ProposedServiceScalarFieldEnum | ProposedServiceScalarFieldEnum[]
  }

  /**
   * ProposedService create
   */
  export type ProposedServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a ProposedService.
     */
    data: XOR<ProposedServiceCreateInput, ProposedServiceUncheckedCreateInput>
  }

  /**
   * ProposedService createMany
   */
  export type ProposedServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProposedServices.
     */
    data: ProposedServiceCreateManyInput | ProposedServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProposedService createManyAndReturn
   */
  export type ProposedServiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * The data used to create many ProposedServices.
     */
    data: ProposedServiceCreateManyInput | ProposedServiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProposedService update
   */
  export type ProposedServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a ProposedService.
     */
    data: XOR<ProposedServiceUpdateInput, ProposedServiceUncheckedUpdateInput>
    /**
     * Choose, which ProposedService to update.
     */
    where: ProposedServiceWhereUniqueInput
  }

  /**
   * ProposedService updateMany
   */
  export type ProposedServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProposedServices.
     */
    data: XOR<ProposedServiceUpdateManyMutationInput, ProposedServiceUncheckedUpdateManyInput>
    /**
     * Filter which ProposedServices to update
     */
    where?: ProposedServiceWhereInput
    /**
     * Limit how many ProposedServices to update.
     */
    limit?: number
  }

  /**
   * ProposedService updateManyAndReturn
   */
  export type ProposedServiceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * The data used to update ProposedServices.
     */
    data: XOR<ProposedServiceUpdateManyMutationInput, ProposedServiceUncheckedUpdateManyInput>
    /**
     * Filter which ProposedServices to update
     */
    where?: ProposedServiceWhereInput
    /**
     * Limit how many ProposedServices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProposedService upsert
   */
  export type ProposedServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the ProposedService to update in case it exists.
     */
    where: ProposedServiceWhereUniqueInput
    /**
     * In case the ProposedService found by the `where` argument doesn't exist, create a new ProposedService with this data.
     */
    create: XOR<ProposedServiceCreateInput, ProposedServiceUncheckedCreateInput>
    /**
     * In case the ProposedService was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProposedServiceUpdateInput, ProposedServiceUncheckedUpdateInput>
  }

  /**
   * ProposedService delete
   */
  export type ProposedServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
    /**
     * Filter which ProposedService to delete.
     */
    where: ProposedServiceWhereUniqueInput
  }

  /**
   * ProposedService deleteMany
   */
  export type ProposedServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProposedServices to delete
     */
    where?: ProposedServiceWhereInput
    /**
     * Limit how many ProposedServices to delete.
     */
    limit?: number
  }

  /**
   * ProposedService without action
   */
  export type ProposedServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProposedService
     */
    select?: ProposedServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProposedService
     */
    omit?: ProposedServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProposedServiceInclude<ExtArgs> | null
  }


  /**
   * Model ServiceItem
   */

  export type AggregateServiceItem = {
    _count: ServiceItemCountAggregateOutputType | null
    _avg: ServiceItemAvgAggregateOutputType | null
    _sum: ServiceItemSumAggregateOutputType | null
    _min: ServiceItemMinAggregateOutputType | null
    _max: ServiceItemMaxAggregateOutputType | null
  }

  export type ServiceItemAvgAggregateOutputType = {
    id: number | null
    unitPrice: number | null
    warrantyPeriod: number | null
    stockQuantity: number | null
    providerId: number | null
  }

  export type ServiceItemSumAggregateOutputType = {
    id: number | null
    unitPrice: number | null
    warrantyPeriod: number | null
    stockQuantity: number | null
    providerId: number | null
  }

  export type ServiceItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    unitPrice: number | null
    warrantyPeriod: number | null
    createdAt: Date | null
    deletedAt: Date | null
    updatedAt: Date | null
    brand: string | null
    description: string | null
    isActive: boolean | null
    model: string | null
    stockQuantity: number | null
    unit: $Enums.Unit | null
    providerId: number | null
  }

  export type ServiceItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    unitPrice: number | null
    warrantyPeriod: number | null
    createdAt: Date | null
    deletedAt: Date | null
    updatedAt: Date | null
    brand: string | null
    description: string | null
    isActive: boolean | null
    model: string | null
    stockQuantity: number | null
    unit: $Enums.Unit | null
    providerId: number | null
  }

  export type ServiceItemCountAggregateOutputType = {
    id: number
    name: number
    unitPrice: number
    warrantyPeriod: number
    createdAt: number
    deletedAt: number
    updatedAt: number
    brand: number
    description: number
    isActive: number
    model: number
    stockQuantity: number
    unit: number
    providerId: number
    _all: number
  }


  export type ServiceItemAvgAggregateInputType = {
    id?: true
    unitPrice?: true
    warrantyPeriod?: true
    stockQuantity?: true
    providerId?: true
  }

  export type ServiceItemSumAggregateInputType = {
    id?: true
    unitPrice?: true
    warrantyPeriod?: true
    stockQuantity?: true
    providerId?: true
  }

  export type ServiceItemMinAggregateInputType = {
    id?: true
    name?: true
    unitPrice?: true
    warrantyPeriod?: true
    createdAt?: true
    deletedAt?: true
    updatedAt?: true
    brand?: true
    description?: true
    isActive?: true
    model?: true
    stockQuantity?: true
    unit?: true
    providerId?: true
  }

  export type ServiceItemMaxAggregateInputType = {
    id?: true
    name?: true
    unitPrice?: true
    warrantyPeriod?: true
    createdAt?: true
    deletedAt?: true
    updatedAt?: true
    brand?: true
    description?: true
    isActive?: true
    model?: true
    stockQuantity?: true
    unit?: true
    providerId?: true
  }

  export type ServiceItemCountAggregateInputType = {
    id?: true
    name?: true
    unitPrice?: true
    warrantyPeriod?: true
    createdAt?: true
    deletedAt?: true
    updatedAt?: true
    brand?: true
    description?: true
    isActive?: true
    model?: true
    stockQuantity?: true
    unit?: true
    providerId?: true
    _all?: true
  }

  export type ServiceItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceItem to aggregate.
     */
    where?: ServiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceItems to fetch.
     */
    orderBy?: ServiceItemOrderByWithRelationInput | ServiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceItems
    **/
    _count?: true | ServiceItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceItemMaxAggregateInputType
  }

  export type GetServiceItemAggregateType<T extends ServiceItemAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceItem[P]>
      : GetScalarType<T[P], AggregateServiceItem[P]>
  }




  export type ServiceItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceItemWhereInput
    orderBy?: ServiceItemOrderByWithAggregationInput | ServiceItemOrderByWithAggregationInput[]
    by: ServiceItemScalarFieldEnum[] | ServiceItemScalarFieldEnum
    having?: ServiceItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceItemCountAggregateInputType | true
    _avg?: ServiceItemAvgAggregateInputType
    _sum?: ServiceItemSumAggregateInputType
    _min?: ServiceItemMinAggregateInputType
    _max?: ServiceItemMaxAggregateInputType
  }

  export type ServiceItemGroupByOutputType = {
    id: number
    name: string
    unitPrice: number
    warrantyPeriod: number | null
    createdAt: Date
    deletedAt: Date | null
    updatedAt: Date
    brand: string | null
    description: string | null
    isActive: boolean
    model: string | null
    stockQuantity: number
    unit: $Enums.Unit
    providerId: number
    _count: ServiceItemCountAggregateOutputType | null
    _avg: ServiceItemAvgAggregateOutputType | null
    _sum: ServiceItemSumAggregateOutputType | null
    _min: ServiceItemMinAggregateOutputType | null
    _max: ServiceItemMaxAggregateOutputType | null
  }

  type GetServiceItemGroupByPayload<T extends ServiceItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceItemGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceItemGroupByOutputType[P]>
        }
      >
    >


  export type ServiceItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    unitPrice?: boolean
    warrantyPeriod?: boolean
    createdAt?: boolean
    deletedAt?: boolean
    updatedAt?: boolean
    brand?: boolean
    description?: boolean
    isActive?: boolean
    model?: boolean
    stockQuantity?: boolean
    unit?: boolean
    providerId?: boolean
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    Service_ServiceItems?: boolean | ServiceItem$Service_ServiceItemsArgs<ExtArgs>
    _count?: boolean | ServiceItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceItem"]>

  export type ServiceItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    unitPrice?: boolean
    warrantyPeriod?: boolean
    createdAt?: boolean
    deletedAt?: boolean
    updatedAt?: boolean
    brand?: boolean
    description?: boolean
    isActive?: boolean
    model?: boolean
    stockQuantity?: boolean
    unit?: boolean
    providerId?: boolean
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceItem"]>

  export type ServiceItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    unitPrice?: boolean
    warrantyPeriod?: boolean
    createdAt?: boolean
    deletedAt?: boolean
    updatedAt?: boolean
    brand?: boolean
    description?: boolean
    isActive?: boolean
    model?: boolean
    stockQuantity?: boolean
    unit?: boolean
    providerId?: boolean
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceItem"]>

  export type ServiceItemSelectScalar = {
    id?: boolean
    name?: boolean
    unitPrice?: boolean
    warrantyPeriod?: boolean
    createdAt?: boolean
    deletedAt?: boolean
    updatedAt?: boolean
    brand?: boolean
    description?: boolean
    isActive?: boolean
    model?: boolean
    stockQuantity?: boolean
    unit?: boolean
    providerId?: boolean
  }

  export type ServiceItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "unitPrice" | "warrantyPeriod" | "createdAt" | "deletedAt" | "updatedAt" | "brand" | "description" | "isActive" | "model" | "stockQuantity" | "unit" | "providerId", ExtArgs["result"]["serviceItem"]>
  export type ServiceItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
    Service_ServiceItems?: boolean | ServiceItem$Service_ServiceItemsArgs<ExtArgs>
    _count?: boolean | ServiceItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ServiceItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }
  export type ServiceItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }

  export type $ServiceItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceItem"
    objects: {
      ServiceProvider: Prisma.$ServiceProviderPayload<ExtArgs>
      Service_ServiceItems: Prisma.$Service_ServiceItemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      unitPrice: number
      warrantyPeriod: number | null
      createdAt: Date
      deletedAt: Date | null
      updatedAt: Date
      brand: string | null
      description: string | null
      isActive: boolean
      model: string | null
      stockQuantity: number
      unit: $Enums.Unit
      providerId: number
    }, ExtArgs["result"]["serviceItem"]>
    composites: {}
  }

  type ServiceItemGetPayload<S extends boolean | null | undefined | ServiceItemDefaultArgs> = $Result.GetResult<Prisma.$ServiceItemPayload, S>

  type ServiceItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceItemCountAggregateInputType | true
    }

  export interface ServiceItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceItem'], meta: { name: 'ServiceItem' } }
    /**
     * Find zero or one ServiceItem that matches the filter.
     * @param {ServiceItemFindUniqueArgs} args - Arguments to find a ServiceItem
     * @example
     * // Get one ServiceItem
     * const serviceItem = await prisma.serviceItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceItemFindUniqueArgs>(args: SelectSubset<T, ServiceItemFindUniqueArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceItemFindUniqueOrThrowArgs} args - Arguments to find a ServiceItem
     * @example
     * // Get one ServiceItem
     * const serviceItem = await prisma.serviceItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceItemFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemFindFirstArgs} args - Arguments to find a ServiceItem
     * @example
     * // Get one ServiceItem
     * const serviceItem = await prisma.serviceItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceItemFindFirstArgs>(args?: SelectSubset<T, ServiceItemFindFirstArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemFindFirstOrThrowArgs} args - Arguments to find a ServiceItem
     * @example
     * // Get one ServiceItem
     * const serviceItem = await prisma.serviceItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceItemFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceItems
     * const serviceItems = await prisma.serviceItem.findMany()
     * 
     * // Get first 10 ServiceItems
     * const serviceItems = await prisma.serviceItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceItemWithIdOnly = await prisma.serviceItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceItemFindManyArgs>(args?: SelectSubset<T, ServiceItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceItem.
     * @param {ServiceItemCreateArgs} args - Arguments to create a ServiceItem.
     * @example
     * // Create one ServiceItem
     * const ServiceItem = await prisma.serviceItem.create({
     *   data: {
     *     // ... data to create a ServiceItem
     *   }
     * })
     * 
     */
    create<T extends ServiceItemCreateArgs>(args: SelectSubset<T, ServiceItemCreateArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceItems.
     * @param {ServiceItemCreateManyArgs} args - Arguments to create many ServiceItems.
     * @example
     * // Create many ServiceItems
     * const serviceItem = await prisma.serviceItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceItemCreateManyArgs>(args?: SelectSubset<T, ServiceItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceItems and returns the data saved in the database.
     * @param {ServiceItemCreateManyAndReturnArgs} args - Arguments to create many ServiceItems.
     * @example
     * // Create many ServiceItems
     * const serviceItem = await prisma.serviceItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceItems and only return the `id`
     * const serviceItemWithIdOnly = await prisma.serviceItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceItemCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceItem.
     * @param {ServiceItemDeleteArgs} args - Arguments to delete one ServiceItem.
     * @example
     * // Delete one ServiceItem
     * const ServiceItem = await prisma.serviceItem.delete({
     *   where: {
     *     // ... filter to delete one ServiceItem
     *   }
     * })
     * 
     */
    delete<T extends ServiceItemDeleteArgs>(args: SelectSubset<T, ServiceItemDeleteArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceItem.
     * @param {ServiceItemUpdateArgs} args - Arguments to update one ServiceItem.
     * @example
     * // Update one ServiceItem
     * const serviceItem = await prisma.serviceItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceItemUpdateArgs>(args: SelectSubset<T, ServiceItemUpdateArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceItems.
     * @param {ServiceItemDeleteManyArgs} args - Arguments to filter ServiceItems to delete.
     * @example
     * // Delete a few ServiceItems
     * const { count } = await prisma.serviceItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceItemDeleteManyArgs>(args?: SelectSubset<T, ServiceItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceItems
     * const serviceItem = await prisma.serviceItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceItemUpdateManyArgs>(args: SelectSubset<T, ServiceItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceItems and returns the data updated in the database.
     * @param {ServiceItemUpdateManyAndReturnArgs} args - Arguments to update many ServiceItems.
     * @example
     * // Update many ServiceItems
     * const serviceItem = await prisma.serviceItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceItems and only return the `id`
     * const serviceItemWithIdOnly = await prisma.serviceItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceItemUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceItem.
     * @param {ServiceItemUpsertArgs} args - Arguments to update or create a ServiceItem.
     * @example
     * // Update or create a ServiceItem
     * const serviceItem = await prisma.serviceItem.upsert({
     *   create: {
     *     // ... data to create a ServiceItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceItem we want to update
     *   }
     * })
     */
    upsert<T extends ServiceItemUpsertArgs>(args: SelectSubset<T, ServiceItemUpsertArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemCountArgs} args - Arguments to filter ServiceItems to count.
     * @example
     * // Count the number of ServiceItems
     * const count = await prisma.serviceItem.count({
     *   where: {
     *     // ... the filter for the ServiceItems we want to count
     *   }
     * })
    **/
    count<T extends ServiceItemCountArgs>(
      args?: Subset<T, ServiceItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceItemAggregateArgs>(args: Subset<T, ServiceItemAggregateArgs>): Prisma.PrismaPromise<GetServiceItemAggregateType<T>>

    /**
     * Group by ServiceItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceItemGroupByArgs['orderBy'] }
        : { orderBy?: ServiceItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceItem model
   */
  readonly fields: ServiceItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ServiceProvider<T extends ServiceProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProviderDefaultArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Service_ServiceItems<T extends ServiceItem$Service_ServiceItemsArgs<ExtArgs> = {}>(args?: Subset<T, ServiceItem$Service_ServiceItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceItem model
   */
  interface ServiceItemFieldRefs {
    readonly id: FieldRef<"ServiceItem", 'Int'>
    readonly name: FieldRef<"ServiceItem", 'String'>
    readonly unitPrice: FieldRef<"ServiceItem", 'Float'>
    readonly warrantyPeriod: FieldRef<"ServiceItem", 'Int'>
    readonly createdAt: FieldRef<"ServiceItem", 'DateTime'>
    readonly deletedAt: FieldRef<"ServiceItem", 'DateTime'>
    readonly updatedAt: FieldRef<"ServiceItem", 'DateTime'>
    readonly brand: FieldRef<"ServiceItem", 'String'>
    readonly description: FieldRef<"ServiceItem", 'String'>
    readonly isActive: FieldRef<"ServiceItem", 'Boolean'>
    readonly model: FieldRef<"ServiceItem", 'String'>
    readonly stockQuantity: FieldRef<"ServiceItem", 'Int'>
    readonly unit: FieldRef<"ServiceItem", 'Unit'>
    readonly providerId: FieldRef<"ServiceItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ServiceItem findUnique
   */
  export type ServiceItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * Filter, which ServiceItem to fetch.
     */
    where: ServiceItemWhereUniqueInput
  }

  /**
   * ServiceItem findUniqueOrThrow
   */
  export type ServiceItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * Filter, which ServiceItem to fetch.
     */
    where: ServiceItemWhereUniqueInput
  }

  /**
   * ServiceItem findFirst
   */
  export type ServiceItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * Filter, which ServiceItem to fetch.
     */
    where?: ServiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceItems to fetch.
     */
    orderBy?: ServiceItemOrderByWithRelationInput | ServiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceItems.
     */
    cursor?: ServiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceItems.
     */
    distinct?: ServiceItemScalarFieldEnum | ServiceItemScalarFieldEnum[]
  }

  /**
   * ServiceItem findFirstOrThrow
   */
  export type ServiceItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * Filter, which ServiceItem to fetch.
     */
    where?: ServiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceItems to fetch.
     */
    orderBy?: ServiceItemOrderByWithRelationInput | ServiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceItems.
     */
    cursor?: ServiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceItems.
     */
    distinct?: ServiceItemScalarFieldEnum | ServiceItemScalarFieldEnum[]
  }

  /**
   * ServiceItem findMany
   */
  export type ServiceItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * Filter, which ServiceItems to fetch.
     */
    where?: ServiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceItems to fetch.
     */
    orderBy?: ServiceItemOrderByWithRelationInput | ServiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceItems.
     */
    cursor?: ServiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceItems.
     */
    skip?: number
    distinct?: ServiceItemScalarFieldEnum | ServiceItemScalarFieldEnum[]
  }

  /**
   * ServiceItem create
   */
  export type ServiceItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceItem.
     */
    data: XOR<ServiceItemCreateInput, ServiceItemUncheckedCreateInput>
  }

  /**
   * ServiceItem createMany
   */
  export type ServiceItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceItems.
     */
    data: ServiceItemCreateManyInput | ServiceItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceItem createManyAndReturn
   */
  export type ServiceItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceItems.
     */
    data: ServiceItemCreateManyInput | ServiceItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceItem update
   */
  export type ServiceItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceItem.
     */
    data: XOR<ServiceItemUpdateInput, ServiceItemUncheckedUpdateInput>
    /**
     * Choose, which ServiceItem to update.
     */
    where: ServiceItemWhereUniqueInput
  }

  /**
   * ServiceItem updateMany
   */
  export type ServiceItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceItems.
     */
    data: XOR<ServiceItemUpdateManyMutationInput, ServiceItemUncheckedUpdateManyInput>
    /**
     * Filter which ServiceItems to update
     */
    where?: ServiceItemWhereInput
    /**
     * Limit how many ServiceItems to update.
     */
    limit?: number
  }

  /**
   * ServiceItem updateManyAndReturn
   */
  export type ServiceItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * The data used to update ServiceItems.
     */
    data: XOR<ServiceItemUpdateManyMutationInput, ServiceItemUncheckedUpdateManyInput>
    /**
     * Filter which ServiceItems to update
     */
    where?: ServiceItemWhereInput
    /**
     * Limit how many ServiceItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceItem upsert
   */
  export type ServiceItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceItem to update in case it exists.
     */
    where: ServiceItemWhereUniqueInput
    /**
     * In case the ServiceItem found by the `where` argument doesn't exist, create a new ServiceItem with this data.
     */
    create: XOR<ServiceItemCreateInput, ServiceItemUncheckedCreateInput>
    /**
     * In case the ServiceItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceItemUpdateInput, ServiceItemUncheckedUpdateInput>
  }

  /**
   * ServiceItem delete
   */
  export type ServiceItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
    /**
     * Filter which ServiceItem to delete.
     */
    where: ServiceItemWhereUniqueInput
  }

  /**
   * ServiceItem deleteMany
   */
  export type ServiceItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceItems to delete
     */
    where?: ServiceItemWhereInput
    /**
     * Limit how many ServiceItems to delete.
     */
    limit?: number
  }

  /**
   * ServiceItem.Service_ServiceItems
   */
  export type ServiceItem$Service_ServiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    where?: Service_ServiceItemsWhereInput
    orderBy?: Service_ServiceItemsOrderByWithRelationInput | Service_ServiceItemsOrderByWithRelationInput[]
    cursor?: Service_ServiceItemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Service_ServiceItemsScalarFieldEnum | Service_ServiceItemsScalarFieldEnum[]
  }

  /**
   * ServiceItem without action
   */
  export type ServiceItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceItem
     */
    select?: ServiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceItem
     */
    omit?: ServiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceItemInclude<ExtArgs> | null
  }


  /**
   * Model ServiceRequest
   */

  export type AggregateServiceRequest = {
    _count: ServiceRequestCountAggregateOutputType | null
    _avg: ServiceRequestAvgAggregateOutputType | null
    _sum: ServiceRequestSumAggregateOutputType | null
    _min: ServiceRequestMinAggregateOutputType | null
    _max: ServiceRequestMaxAggregateOutputType | null
  }

  export type ServiceRequestAvgAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    categoryId: number | null
  }

  export type ServiceRequestSumAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    categoryId: number | null
  }

  export type ServiceRequestMinAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    note: string | null
    preferredDate: Date | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
    phoneNumber: string | null
    categoryId: number | null
  }

  export type ServiceRequestMaxAggregateOutputType = {
    id: number | null
    customerId: number | null
    providerId: number | null
    note: string | null
    preferredDate: Date | null
    status: $Enums.RequestStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    location: string | null
    phoneNumber: string | null
    categoryId: number | null
  }

  export type ServiceRequestCountAggregateOutputType = {
    id: number
    customerId: number
    providerId: number
    note: number
    preferredDate: number
    status: number
    createdAt: number
    updatedAt: number
    location: number
    phoneNumber: number
    categoryId: number
    _all: number
  }


  export type ServiceRequestAvgAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    categoryId?: true
  }

  export type ServiceRequestSumAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    categoryId?: true
  }

  export type ServiceRequestMinAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    note?: true
    preferredDate?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    phoneNumber?: true
    categoryId?: true
  }

  export type ServiceRequestMaxAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    note?: true
    preferredDate?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    phoneNumber?: true
    categoryId?: true
  }

  export type ServiceRequestCountAggregateInputType = {
    id?: true
    customerId?: true
    providerId?: true
    note?: true
    preferredDate?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    location?: true
    phoneNumber?: true
    categoryId?: true
    _all?: true
  }

  export type ServiceRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceRequest to aggregate.
     */
    where?: ServiceRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceRequests to fetch.
     */
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ServiceRequests
    **/
    _count?: true | ServiceRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceRequestMaxAggregateInputType
  }

  export type GetServiceRequestAggregateType<T extends ServiceRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateServiceRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServiceRequest[P]>
      : GetScalarType<T[P], AggregateServiceRequest[P]>
  }




  export type ServiceRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceRequestWhereInput
    orderBy?: ServiceRequestOrderByWithAggregationInput | ServiceRequestOrderByWithAggregationInput[]
    by: ServiceRequestScalarFieldEnum[] | ServiceRequestScalarFieldEnum
    having?: ServiceRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceRequestCountAggregateInputType | true
    _avg?: ServiceRequestAvgAggregateInputType
    _sum?: ServiceRequestSumAggregateInputType
    _min?: ServiceRequestMinAggregateInputType
    _max?: ServiceRequestMaxAggregateInputType
  }

  export type ServiceRequestGroupByOutputType = {
    id: number
    customerId: number
    providerId: number
    note: string | null
    preferredDate: Date
    status: $Enums.RequestStatus
    createdAt: Date
    updatedAt: Date
    location: string
    phoneNumber: string
    categoryId: number
    _count: ServiceRequestCountAggregateOutputType | null
    _avg: ServiceRequestAvgAggregateOutputType | null
    _sum: ServiceRequestSumAggregateOutputType | null
    _min: ServiceRequestMinAggregateOutputType | null
    _max: ServiceRequestMaxAggregateOutputType | null
  }

  type GetServiceRequestGroupByPayload<T extends ServiceRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceRequestGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceRequestGroupByOutputType[P]>
        }
      >
    >


  export type ServiceRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    note?: boolean
    preferredDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    phoneNumber?: boolean
    categoryId?: boolean
    Booking?: boolean | ServiceRequest$BookingArgs<ExtArgs>
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceRequest"]>

  export type ServiceRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    note?: boolean
    preferredDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    phoneNumber?: boolean
    categoryId?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceRequest"]>

  export type ServiceRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    note?: boolean
    preferredDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    phoneNumber?: boolean
    categoryId?: boolean
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["serviceRequest"]>

  export type ServiceRequestSelectScalar = {
    id?: boolean
    customerId?: boolean
    providerId?: boolean
    note?: boolean
    preferredDate?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    location?: boolean
    phoneNumber?: boolean
    categoryId?: boolean
  }

  export type ServiceRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "providerId" | "note" | "preferredDate" | "status" | "createdAt" | "updatedAt" | "location" | "phoneNumber" | "categoryId", ExtArgs["result"]["serviceRequest"]>
  export type ServiceRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Booking?: boolean | ServiceRequest$BookingArgs<ExtArgs>
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }
  export type ServiceRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }
  export type ServiceRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Category?: boolean | CategoryDefaultArgs<ExtArgs>
    CustomerProfile?: boolean | CustomerProfileDefaultArgs<ExtArgs>
    ServiceProvider?: boolean | ServiceProviderDefaultArgs<ExtArgs>
  }

  export type $ServiceRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ServiceRequest"
    objects: {
      Booking: Prisma.$BookingPayload<ExtArgs> | null
      Category: Prisma.$CategoryPayload<ExtArgs>
      CustomerProfile: Prisma.$CustomerProfilePayload<ExtArgs>
      ServiceProvider: Prisma.$ServiceProviderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      customerId: number
      providerId: number
      note: string | null
      preferredDate: Date
      status: $Enums.RequestStatus
      createdAt: Date
      updatedAt: Date
      location: string
      phoneNumber: string
      categoryId: number
    }, ExtArgs["result"]["serviceRequest"]>
    composites: {}
  }

  type ServiceRequestGetPayload<S extends boolean | null | undefined | ServiceRequestDefaultArgs> = $Result.GetResult<Prisma.$ServiceRequestPayload, S>

  type ServiceRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceRequestCountAggregateInputType | true
    }

  export interface ServiceRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ServiceRequest'], meta: { name: 'ServiceRequest' } }
    /**
     * Find zero or one ServiceRequest that matches the filter.
     * @param {ServiceRequestFindUniqueArgs} args - Arguments to find a ServiceRequest
     * @example
     * // Get one ServiceRequest
     * const serviceRequest = await prisma.serviceRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceRequestFindUniqueArgs>(args: SelectSubset<T, ServiceRequestFindUniqueArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ServiceRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceRequestFindUniqueOrThrowArgs} args - Arguments to find a ServiceRequest
     * @example
     * // Get one ServiceRequest
     * const serviceRequest = await prisma.serviceRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestFindFirstArgs} args - Arguments to find a ServiceRequest
     * @example
     * // Get one ServiceRequest
     * const serviceRequest = await prisma.serviceRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceRequestFindFirstArgs>(args?: SelectSubset<T, ServiceRequestFindFirstArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ServiceRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestFindFirstOrThrowArgs} args - Arguments to find a ServiceRequest
     * @example
     * // Get one ServiceRequest
     * const serviceRequest = await prisma.serviceRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ServiceRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ServiceRequests
     * const serviceRequests = await prisma.serviceRequest.findMany()
     * 
     * // Get first 10 ServiceRequests
     * const serviceRequests = await prisma.serviceRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceRequestWithIdOnly = await prisma.serviceRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceRequestFindManyArgs>(args?: SelectSubset<T, ServiceRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ServiceRequest.
     * @param {ServiceRequestCreateArgs} args - Arguments to create a ServiceRequest.
     * @example
     * // Create one ServiceRequest
     * const ServiceRequest = await prisma.serviceRequest.create({
     *   data: {
     *     // ... data to create a ServiceRequest
     *   }
     * })
     * 
     */
    create<T extends ServiceRequestCreateArgs>(args: SelectSubset<T, ServiceRequestCreateArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ServiceRequests.
     * @param {ServiceRequestCreateManyArgs} args - Arguments to create many ServiceRequests.
     * @example
     * // Create many ServiceRequests
     * const serviceRequest = await prisma.serviceRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceRequestCreateManyArgs>(args?: SelectSubset<T, ServiceRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ServiceRequests and returns the data saved in the database.
     * @param {ServiceRequestCreateManyAndReturnArgs} args - Arguments to create many ServiceRequests.
     * @example
     * // Create many ServiceRequests
     * const serviceRequest = await prisma.serviceRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ServiceRequests and only return the `id`
     * const serviceRequestWithIdOnly = await prisma.serviceRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ServiceRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, ServiceRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ServiceRequest.
     * @param {ServiceRequestDeleteArgs} args - Arguments to delete one ServiceRequest.
     * @example
     * // Delete one ServiceRequest
     * const ServiceRequest = await prisma.serviceRequest.delete({
     *   where: {
     *     // ... filter to delete one ServiceRequest
     *   }
     * })
     * 
     */
    delete<T extends ServiceRequestDeleteArgs>(args: SelectSubset<T, ServiceRequestDeleteArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ServiceRequest.
     * @param {ServiceRequestUpdateArgs} args - Arguments to update one ServiceRequest.
     * @example
     * // Update one ServiceRequest
     * const serviceRequest = await prisma.serviceRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceRequestUpdateArgs>(args: SelectSubset<T, ServiceRequestUpdateArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ServiceRequests.
     * @param {ServiceRequestDeleteManyArgs} args - Arguments to filter ServiceRequests to delete.
     * @example
     * // Delete a few ServiceRequests
     * const { count } = await prisma.serviceRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceRequestDeleteManyArgs>(args?: SelectSubset<T, ServiceRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ServiceRequests
     * const serviceRequest = await prisma.serviceRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceRequestUpdateManyArgs>(args: SelectSubset<T, ServiceRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ServiceRequests and returns the data updated in the database.
     * @param {ServiceRequestUpdateManyAndReturnArgs} args - Arguments to update many ServiceRequests.
     * @example
     * // Update many ServiceRequests
     * const serviceRequest = await prisma.serviceRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ServiceRequests and only return the `id`
     * const serviceRequestWithIdOnly = await prisma.serviceRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ServiceRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, ServiceRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ServiceRequest.
     * @param {ServiceRequestUpsertArgs} args - Arguments to update or create a ServiceRequest.
     * @example
     * // Update or create a ServiceRequest
     * const serviceRequest = await prisma.serviceRequest.upsert({
     *   create: {
     *     // ... data to create a ServiceRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ServiceRequest we want to update
     *   }
     * })
     */
    upsert<T extends ServiceRequestUpsertArgs>(args: SelectSubset<T, ServiceRequestUpsertArgs<ExtArgs>>): Prisma__ServiceRequestClient<$Result.GetResult<Prisma.$ServiceRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ServiceRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestCountArgs} args - Arguments to filter ServiceRequests to count.
     * @example
     * // Count the number of ServiceRequests
     * const count = await prisma.serviceRequest.count({
     *   where: {
     *     // ... the filter for the ServiceRequests we want to count
     *   }
     * })
    **/
    count<T extends ServiceRequestCountArgs>(
      args?: Subset<T, ServiceRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ServiceRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceRequestAggregateArgs>(args: Subset<T, ServiceRequestAggregateArgs>): Prisma.PrismaPromise<GetServiceRequestAggregateType<T>>

    /**
     * Group by ServiceRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceRequestGroupByArgs['orderBy'] }
        : { orderBy?: ServiceRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ServiceRequest model
   */
  readonly fields: ServiceRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ServiceRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Booking<T extends ServiceRequest$BookingArgs<ExtArgs> = {}>(args?: Subset<T, ServiceRequest$BookingArgs<ExtArgs>>): Prisma__BookingClient<$Result.GetResult<Prisma.$BookingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CustomerProfile<T extends CustomerProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerProfileDefaultArgs<ExtArgs>>): Prisma__CustomerProfileClient<$Result.GetResult<Prisma.$CustomerProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ServiceProvider<T extends ServiceProviderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceProviderDefaultArgs<ExtArgs>>): Prisma__ServiceProviderClient<$Result.GetResult<Prisma.$ServiceProviderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ServiceRequest model
   */
  interface ServiceRequestFieldRefs {
    readonly id: FieldRef<"ServiceRequest", 'Int'>
    readonly customerId: FieldRef<"ServiceRequest", 'Int'>
    readonly providerId: FieldRef<"ServiceRequest", 'Int'>
    readonly note: FieldRef<"ServiceRequest", 'String'>
    readonly preferredDate: FieldRef<"ServiceRequest", 'DateTime'>
    readonly status: FieldRef<"ServiceRequest", 'RequestStatus'>
    readonly createdAt: FieldRef<"ServiceRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"ServiceRequest", 'DateTime'>
    readonly location: FieldRef<"ServiceRequest", 'String'>
    readonly phoneNumber: FieldRef<"ServiceRequest", 'String'>
    readonly categoryId: FieldRef<"ServiceRequest", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ServiceRequest findUnique
   */
  export type ServiceRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceRequest to fetch.
     */
    where: ServiceRequestWhereUniqueInput
  }

  /**
   * ServiceRequest findUniqueOrThrow
   */
  export type ServiceRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceRequest to fetch.
     */
    where: ServiceRequestWhereUniqueInput
  }

  /**
   * ServiceRequest findFirst
   */
  export type ServiceRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceRequest to fetch.
     */
    where?: ServiceRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceRequests to fetch.
     */
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceRequests.
     */
    cursor?: ServiceRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceRequests.
     */
    distinct?: ServiceRequestScalarFieldEnum | ServiceRequestScalarFieldEnum[]
  }

  /**
   * ServiceRequest findFirstOrThrow
   */
  export type ServiceRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceRequest to fetch.
     */
    where?: ServiceRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceRequests to fetch.
     */
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ServiceRequests.
     */
    cursor?: ServiceRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ServiceRequests.
     */
    distinct?: ServiceRequestScalarFieldEnum | ServiceRequestScalarFieldEnum[]
  }

  /**
   * ServiceRequest findMany
   */
  export type ServiceRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * Filter, which ServiceRequests to fetch.
     */
    where?: ServiceRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ServiceRequests to fetch.
     */
    orderBy?: ServiceRequestOrderByWithRelationInput | ServiceRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ServiceRequests.
     */
    cursor?: ServiceRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ServiceRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ServiceRequests.
     */
    skip?: number
    distinct?: ServiceRequestScalarFieldEnum | ServiceRequestScalarFieldEnum[]
  }

  /**
   * ServiceRequest create
   */
  export type ServiceRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a ServiceRequest.
     */
    data: XOR<ServiceRequestCreateInput, ServiceRequestUncheckedCreateInput>
  }

  /**
   * ServiceRequest createMany
   */
  export type ServiceRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ServiceRequests.
     */
    data: ServiceRequestCreateManyInput | ServiceRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ServiceRequest createManyAndReturn
   */
  export type ServiceRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * The data used to create many ServiceRequests.
     */
    data: ServiceRequestCreateManyInput | ServiceRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceRequest update
   */
  export type ServiceRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a ServiceRequest.
     */
    data: XOR<ServiceRequestUpdateInput, ServiceRequestUncheckedUpdateInput>
    /**
     * Choose, which ServiceRequest to update.
     */
    where: ServiceRequestWhereUniqueInput
  }

  /**
   * ServiceRequest updateMany
   */
  export type ServiceRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ServiceRequests.
     */
    data: XOR<ServiceRequestUpdateManyMutationInput, ServiceRequestUncheckedUpdateManyInput>
    /**
     * Filter which ServiceRequests to update
     */
    where?: ServiceRequestWhereInput
    /**
     * Limit how many ServiceRequests to update.
     */
    limit?: number
  }

  /**
   * ServiceRequest updateManyAndReturn
   */
  export type ServiceRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * The data used to update ServiceRequests.
     */
    data: XOR<ServiceRequestUpdateManyMutationInput, ServiceRequestUncheckedUpdateManyInput>
    /**
     * Filter which ServiceRequests to update
     */
    where?: ServiceRequestWhereInput
    /**
     * Limit how many ServiceRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ServiceRequest upsert
   */
  export type ServiceRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the ServiceRequest to update in case it exists.
     */
    where: ServiceRequestWhereUniqueInput
    /**
     * In case the ServiceRequest found by the `where` argument doesn't exist, create a new ServiceRequest with this data.
     */
    create: XOR<ServiceRequestCreateInput, ServiceRequestUncheckedCreateInput>
    /**
     * In case the ServiceRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceRequestUpdateInput, ServiceRequestUncheckedUpdateInput>
  }

  /**
   * ServiceRequest delete
   */
  export type ServiceRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
    /**
     * Filter which ServiceRequest to delete.
     */
    where: ServiceRequestWhereUniqueInput
  }

  /**
   * ServiceRequest deleteMany
   */
  export type ServiceRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ServiceRequests to delete
     */
    where?: ServiceRequestWhereInput
    /**
     * Limit how many ServiceRequests to delete.
     */
    limit?: number
  }

  /**
   * ServiceRequest.Booking
   */
  export type ServiceRequest$BookingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Booking
     */
    select?: BookingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Booking
     */
    omit?: BookingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BookingInclude<ExtArgs> | null
    where?: BookingWhereInput
  }

  /**
   * ServiceRequest without action
   */
  export type ServiceRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceRequest
     */
    select?: ServiceRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ServiceRequest
     */
    omit?: ServiceRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceRequestInclude<ExtArgs> | null
  }


  /**
   * Model Service_ServiceItems
   */

  export type AggregateService_ServiceItems = {
    _count: Service_ServiceItemsCountAggregateOutputType | null
    _avg: Service_ServiceItemsAvgAggregateOutputType | null
    _sum: Service_ServiceItemsSumAggregateOutputType | null
    _min: Service_ServiceItemsMinAggregateOutputType | null
    _max: Service_ServiceItemsMaxAggregateOutputType | null
  }

  export type Service_ServiceItemsAvgAggregateOutputType = {
    serviceId: number | null
    serviceItemId: number | null
  }

  export type Service_ServiceItemsSumAggregateOutputType = {
    serviceId: number | null
    serviceItemId: number | null
  }

  export type Service_ServiceItemsMinAggregateOutputType = {
    serviceId: number | null
    serviceItemId: number | null
  }

  export type Service_ServiceItemsMaxAggregateOutputType = {
    serviceId: number | null
    serviceItemId: number | null
  }

  export type Service_ServiceItemsCountAggregateOutputType = {
    serviceId: number
    serviceItemId: number
    _all: number
  }


  export type Service_ServiceItemsAvgAggregateInputType = {
    serviceId?: true
    serviceItemId?: true
  }

  export type Service_ServiceItemsSumAggregateInputType = {
    serviceId?: true
    serviceItemId?: true
  }

  export type Service_ServiceItemsMinAggregateInputType = {
    serviceId?: true
    serviceItemId?: true
  }

  export type Service_ServiceItemsMaxAggregateInputType = {
    serviceId?: true
    serviceItemId?: true
  }

  export type Service_ServiceItemsCountAggregateInputType = {
    serviceId?: true
    serviceItemId?: true
    _all?: true
  }

  export type Service_ServiceItemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Service_ServiceItems to aggregate.
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Service_ServiceItems to fetch.
     */
    orderBy?: Service_ServiceItemsOrderByWithRelationInput | Service_ServiceItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Service_ServiceItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Service_ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Service_ServiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Service_ServiceItems
    **/
    _count?: true | Service_ServiceItemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Service_ServiceItemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Service_ServiceItemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Service_ServiceItemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Service_ServiceItemsMaxAggregateInputType
  }

  export type GetService_ServiceItemsAggregateType<T extends Service_ServiceItemsAggregateArgs> = {
        [P in keyof T & keyof AggregateService_ServiceItems]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService_ServiceItems[P]>
      : GetScalarType<T[P], AggregateService_ServiceItems[P]>
  }




  export type Service_ServiceItemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Service_ServiceItemsWhereInput
    orderBy?: Service_ServiceItemsOrderByWithAggregationInput | Service_ServiceItemsOrderByWithAggregationInput[]
    by: Service_ServiceItemsScalarFieldEnum[] | Service_ServiceItemsScalarFieldEnum
    having?: Service_ServiceItemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Service_ServiceItemsCountAggregateInputType | true
    _avg?: Service_ServiceItemsAvgAggregateInputType
    _sum?: Service_ServiceItemsSumAggregateInputType
    _min?: Service_ServiceItemsMinAggregateInputType
    _max?: Service_ServiceItemsMaxAggregateInputType
  }

  export type Service_ServiceItemsGroupByOutputType = {
    serviceId: number
    serviceItemId: number
    _count: Service_ServiceItemsCountAggregateOutputType | null
    _avg: Service_ServiceItemsAvgAggregateOutputType | null
    _sum: Service_ServiceItemsSumAggregateOutputType | null
    _min: Service_ServiceItemsMinAggregateOutputType | null
    _max: Service_ServiceItemsMaxAggregateOutputType | null
  }

  type GetService_ServiceItemsGroupByPayload<T extends Service_ServiceItemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Service_ServiceItemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Service_ServiceItemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Service_ServiceItemsGroupByOutputType[P]>
            : GetScalarType<T[P], Service_ServiceItemsGroupByOutputType[P]>
        }
      >
    >


  export type Service_ServiceItemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    serviceId?: boolean
    serviceItemId?: boolean
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    ServiceItem?: boolean | ServiceItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service_ServiceItems"]>

  export type Service_ServiceItemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    serviceId?: boolean
    serviceItemId?: boolean
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    ServiceItem?: boolean | ServiceItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service_ServiceItems"]>

  export type Service_ServiceItemsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    serviceId?: boolean
    serviceItemId?: boolean
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    ServiceItem?: boolean | ServiceItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service_ServiceItems"]>

  export type Service_ServiceItemsSelectScalar = {
    serviceId?: boolean
    serviceItemId?: boolean
  }

  export type Service_ServiceItemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"serviceId" | "serviceItemId", ExtArgs["result"]["service_ServiceItems"]>
  export type Service_ServiceItemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    ServiceItem?: boolean | ServiceItemDefaultArgs<ExtArgs>
  }
  export type Service_ServiceItemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    ServiceItem?: boolean | ServiceItemDefaultArgs<ExtArgs>
  }
  export type Service_ServiceItemsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Service?: boolean | ServiceDefaultArgs<ExtArgs>
    ServiceItem?: boolean | ServiceItemDefaultArgs<ExtArgs>
  }

  export type $Service_ServiceItemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Service_ServiceItems"
    objects: {
      Service: Prisma.$ServicePayload<ExtArgs>
      ServiceItem: Prisma.$ServiceItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      serviceId: number
      serviceItemId: number
    }, ExtArgs["result"]["service_ServiceItems"]>
    composites: {}
  }

  type Service_ServiceItemsGetPayload<S extends boolean | null | undefined | Service_ServiceItemsDefaultArgs> = $Result.GetResult<Prisma.$Service_ServiceItemsPayload, S>

  type Service_ServiceItemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Service_ServiceItemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Service_ServiceItemsCountAggregateInputType | true
    }

  export interface Service_ServiceItemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Service_ServiceItems'], meta: { name: 'Service_ServiceItems' } }
    /**
     * Find zero or one Service_ServiceItems that matches the filter.
     * @param {Service_ServiceItemsFindUniqueArgs} args - Arguments to find a Service_ServiceItems
     * @example
     * // Get one Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Service_ServiceItemsFindUniqueArgs>(args: SelectSubset<T, Service_ServiceItemsFindUniqueArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Service_ServiceItems that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Service_ServiceItemsFindUniqueOrThrowArgs} args - Arguments to find a Service_ServiceItems
     * @example
     * // Get one Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Service_ServiceItemsFindUniqueOrThrowArgs>(args: SelectSubset<T, Service_ServiceItemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service_ServiceItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsFindFirstArgs} args - Arguments to find a Service_ServiceItems
     * @example
     * // Get one Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Service_ServiceItemsFindFirstArgs>(args?: SelectSubset<T, Service_ServiceItemsFindFirstArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service_ServiceItems that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsFindFirstOrThrowArgs} args - Arguments to find a Service_ServiceItems
     * @example
     * // Get one Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Service_ServiceItemsFindFirstOrThrowArgs>(args?: SelectSubset<T, Service_ServiceItemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Service_ServiceItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.findMany()
     * 
     * // Get first 10 Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.findMany({ take: 10 })
     * 
     * // Only select the `serviceId`
     * const service_ServiceItemsWithServiceIdOnly = await prisma.service_ServiceItems.findMany({ select: { serviceId: true } })
     * 
     */
    findMany<T extends Service_ServiceItemsFindManyArgs>(args?: SelectSubset<T, Service_ServiceItemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Service_ServiceItems.
     * @param {Service_ServiceItemsCreateArgs} args - Arguments to create a Service_ServiceItems.
     * @example
     * // Create one Service_ServiceItems
     * const Service_ServiceItems = await prisma.service_ServiceItems.create({
     *   data: {
     *     // ... data to create a Service_ServiceItems
     *   }
     * })
     * 
     */
    create<T extends Service_ServiceItemsCreateArgs>(args: SelectSubset<T, Service_ServiceItemsCreateArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Service_ServiceItems.
     * @param {Service_ServiceItemsCreateManyArgs} args - Arguments to create many Service_ServiceItems.
     * @example
     * // Create many Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Service_ServiceItemsCreateManyArgs>(args?: SelectSubset<T, Service_ServiceItemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Service_ServiceItems and returns the data saved in the database.
     * @param {Service_ServiceItemsCreateManyAndReturnArgs} args - Arguments to create many Service_ServiceItems.
     * @example
     * // Create many Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Service_ServiceItems and only return the `serviceId`
     * const service_ServiceItemsWithServiceIdOnly = await prisma.service_ServiceItems.createManyAndReturn({
     *   select: { serviceId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Service_ServiceItemsCreateManyAndReturnArgs>(args?: SelectSubset<T, Service_ServiceItemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Service_ServiceItems.
     * @param {Service_ServiceItemsDeleteArgs} args - Arguments to delete one Service_ServiceItems.
     * @example
     * // Delete one Service_ServiceItems
     * const Service_ServiceItems = await prisma.service_ServiceItems.delete({
     *   where: {
     *     // ... filter to delete one Service_ServiceItems
     *   }
     * })
     * 
     */
    delete<T extends Service_ServiceItemsDeleteArgs>(args: SelectSubset<T, Service_ServiceItemsDeleteArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Service_ServiceItems.
     * @param {Service_ServiceItemsUpdateArgs} args - Arguments to update one Service_ServiceItems.
     * @example
     * // Update one Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Service_ServiceItemsUpdateArgs>(args: SelectSubset<T, Service_ServiceItemsUpdateArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Service_ServiceItems.
     * @param {Service_ServiceItemsDeleteManyArgs} args - Arguments to filter Service_ServiceItems to delete.
     * @example
     * // Delete a few Service_ServiceItems
     * const { count } = await prisma.service_ServiceItems.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Service_ServiceItemsDeleteManyArgs>(args?: SelectSubset<T, Service_ServiceItemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Service_ServiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Service_ServiceItemsUpdateManyArgs>(args: SelectSubset<T, Service_ServiceItemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Service_ServiceItems and returns the data updated in the database.
     * @param {Service_ServiceItemsUpdateManyAndReturnArgs} args - Arguments to update many Service_ServiceItems.
     * @example
     * // Update many Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Service_ServiceItems and only return the `serviceId`
     * const service_ServiceItemsWithServiceIdOnly = await prisma.service_ServiceItems.updateManyAndReturn({
     *   select: { serviceId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Service_ServiceItemsUpdateManyAndReturnArgs>(args: SelectSubset<T, Service_ServiceItemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Service_ServiceItems.
     * @param {Service_ServiceItemsUpsertArgs} args - Arguments to update or create a Service_ServiceItems.
     * @example
     * // Update or create a Service_ServiceItems
     * const service_ServiceItems = await prisma.service_ServiceItems.upsert({
     *   create: {
     *     // ... data to create a Service_ServiceItems
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service_ServiceItems we want to update
     *   }
     * })
     */
    upsert<T extends Service_ServiceItemsUpsertArgs>(args: SelectSubset<T, Service_ServiceItemsUpsertArgs<ExtArgs>>): Prisma__Service_ServiceItemsClient<$Result.GetResult<Prisma.$Service_ServiceItemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Service_ServiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsCountArgs} args - Arguments to filter Service_ServiceItems to count.
     * @example
     * // Count the number of Service_ServiceItems
     * const count = await prisma.service_ServiceItems.count({
     *   where: {
     *     // ... the filter for the Service_ServiceItems we want to count
     *   }
     * })
    **/
    count<T extends Service_ServiceItemsCountArgs>(
      args?: Subset<T, Service_ServiceItemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Service_ServiceItemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service_ServiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Service_ServiceItemsAggregateArgs>(args: Subset<T, Service_ServiceItemsAggregateArgs>): Prisma.PrismaPromise<GetService_ServiceItemsAggregateType<T>>

    /**
     * Group by Service_ServiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Service_ServiceItemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Service_ServiceItemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Service_ServiceItemsGroupByArgs['orderBy'] }
        : { orderBy?: Service_ServiceItemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Service_ServiceItemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetService_ServiceItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Service_ServiceItems model
   */
  readonly fields: Service_ServiceItemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Service_ServiceItems.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Service_ServiceItemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ServiceItem<T extends ServiceItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceItemDefaultArgs<ExtArgs>>): Prisma__ServiceItemClient<$Result.GetResult<Prisma.$ServiceItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Service_ServiceItems model
   */
  interface Service_ServiceItemsFieldRefs {
    readonly serviceId: FieldRef<"Service_ServiceItems", 'Int'>
    readonly serviceItemId: FieldRef<"Service_ServiceItems", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Service_ServiceItems findUnique
   */
  export type Service_ServiceItemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * Filter, which Service_ServiceItems to fetch.
     */
    where: Service_ServiceItemsWhereUniqueInput
  }

  /**
   * Service_ServiceItems findUniqueOrThrow
   */
  export type Service_ServiceItemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * Filter, which Service_ServiceItems to fetch.
     */
    where: Service_ServiceItemsWhereUniqueInput
  }

  /**
   * Service_ServiceItems findFirst
   */
  export type Service_ServiceItemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * Filter, which Service_ServiceItems to fetch.
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Service_ServiceItems to fetch.
     */
    orderBy?: Service_ServiceItemsOrderByWithRelationInput | Service_ServiceItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Service_ServiceItems.
     */
    cursor?: Service_ServiceItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Service_ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Service_ServiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Service_ServiceItems.
     */
    distinct?: Service_ServiceItemsScalarFieldEnum | Service_ServiceItemsScalarFieldEnum[]
  }

  /**
   * Service_ServiceItems findFirstOrThrow
   */
  export type Service_ServiceItemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * Filter, which Service_ServiceItems to fetch.
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Service_ServiceItems to fetch.
     */
    orderBy?: Service_ServiceItemsOrderByWithRelationInput | Service_ServiceItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Service_ServiceItems.
     */
    cursor?: Service_ServiceItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Service_ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Service_ServiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Service_ServiceItems.
     */
    distinct?: Service_ServiceItemsScalarFieldEnum | Service_ServiceItemsScalarFieldEnum[]
  }

  /**
   * Service_ServiceItems findMany
   */
  export type Service_ServiceItemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * Filter, which Service_ServiceItems to fetch.
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Service_ServiceItems to fetch.
     */
    orderBy?: Service_ServiceItemsOrderByWithRelationInput | Service_ServiceItemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Service_ServiceItems.
     */
    cursor?: Service_ServiceItemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Service_ServiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Service_ServiceItems.
     */
    skip?: number
    distinct?: Service_ServiceItemsScalarFieldEnum | Service_ServiceItemsScalarFieldEnum[]
  }

  /**
   * Service_ServiceItems create
   */
  export type Service_ServiceItemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * The data needed to create a Service_ServiceItems.
     */
    data: XOR<Service_ServiceItemsCreateInput, Service_ServiceItemsUncheckedCreateInput>
  }

  /**
   * Service_ServiceItems createMany
   */
  export type Service_ServiceItemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Service_ServiceItems.
     */
    data: Service_ServiceItemsCreateManyInput | Service_ServiceItemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Service_ServiceItems createManyAndReturn
   */
  export type Service_ServiceItemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * The data used to create many Service_ServiceItems.
     */
    data: Service_ServiceItemsCreateManyInput | Service_ServiceItemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Service_ServiceItems update
   */
  export type Service_ServiceItemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * The data needed to update a Service_ServiceItems.
     */
    data: XOR<Service_ServiceItemsUpdateInput, Service_ServiceItemsUncheckedUpdateInput>
    /**
     * Choose, which Service_ServiceItems to update.
     */
    where: Service_ServiceItemsWhereUniqueInput
  }

  /**
   * Service_ServiceItems updateMany
   */
  export type Service_ServiceItemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Service_ServiceItems.
     */
    data: XOR<Service_ServiceItemsUpdateManyMutationInput, Service_ServiceItemsUncheckedUpdateManyInput>
    /**
     * Filter which Service_ServiceItems to update
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * Limit how many Service_ServiceItems to update.
     */
    limit?: number
  }

  /**
   * Service_ServiceItems updateManyAndReturn
   */
  export type Service_ServiceItemsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * The data used to update Service_ServiceItems.
     */
    data: XOR<Service_ServiceItemsUpdateManyMutationInput, Service_ServiceItemsUncheckedUpdateManyInput>
    /**
     * Filter which Service_ServiceItems to update
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * Limit how many Service_ServiceItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Service_ServiceItems upsert
   */
  export type Service_ServiceItemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * The filter to search for the Service_ServiceItems to update in case it exists.
     */
    where: Service_ServiceItemsWhereUniqueInput
    /**
     * In case the Service_ServiceItems found by the `where` argument doesn't exist, create a new Service_ServiceItems with this data.
     */
    create: XOR<Service_ServiceItemsCreateInput, Service_ServiceItemsUncheckedCreateInput>
    /**
     * In case the Service_ServiceItems was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Service_ServiceItemsUpdateInput, Service_ServiceItemsUncheckedUpdateInput>
  }

  /**
   * Service_ServiceItems delete
   */
  export type Service_ServiceItemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
    /**
     * Filter which Service_ServiceItems to delete.
     */
    where: Service_ServiceItemsWhereUniqueInput
  }

  /**
   * Service_ServiceItems deleteMany
   */
  export type Service_ServiceItemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Service_ServiceItems to delete
     */
    where?: Service_ServiceItemsWhereInput
    /**
     * Limit how many Service_ServiceItems to delete.
     */
    limit?: number
  }

  /**
   * Service_ServiceItems without action
   */
  export type Service_ServiceItemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service_ServiceItems
     */
    select?: Service_ServiceItemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service_ServiceItems
     */
    omit?: Service_ServiceItemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Service_ServiceItemsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const BookingScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    providerId: 'providerId',
    status: 'status',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    staffId: 'staffId',
    serviceRequestId: 'serviceRequestId'
  };

  export type BookingScalarFieldEnum = (typeof BookingScalarFieldEnum)[keyof typeof BookingScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    logo: 'logo',
    parentCategoryId: 'parentCategoryId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const CategoryTranslationScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    languageId: 'languageId',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type CategoryTranslationScalarFieldEnum = (typeof CategoryTranslationScalarFieldEnum)[keyof typeof CategoryTranslationScalarFieldEnum]


  export const ChatMessageScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    sender: 'sender',
    message: 'message',
    sentAt: 'sentAt',
    isRead: 'isRead'
  };

  export type ChatMessageScalarFieldEnum = (typeof ChatMessageScalarFieldEnum)[keyof typeof ChatMessageScalarFieldEnum]


  export const CustomerProfileScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    address: 'address',
    dateOfBirth: 'dateOfBirth',
    gender: 'gender',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomerProfileScalarFieldEnum = (typeof CustomerProfileScalarFieldEnum)[keyof typeof CustomerProfileScalarFieldEnum]


  export const DeviceScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    userAgent: 'userAgent',
    ip: 'ip',
    lastActive: 'lastActive',
    createdAt: 'createdAt',
    isActive: 'isActive'
  };

  export type DeviceScalarFieldEnum = (typeof DeviceScalarFieldEnum)[keyof typeof DeviceScalarFieldEnum]


  export const LanguageScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type LanguageScalarFieldEnum = (typeof LanguageScalarFieldEnum)[keyof typeof LanguageScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    content: 'content',
    isRead: 'isRead',
    createdAt: 'createdAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PackageRecommendationScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    packageId: 'packageId',
    reason: 'reason',
    accepted: 'accepted',
    recommendedAt: 'recommendedAt',
    acceptedAt: 'acceptedAt'
  };

  export type PackageRecommendationScalarFieldEnum = (typeof PackageRecommendationScalarFieldEnum)[keyof typeof PackageRecommendationScalarFieldEnum]


  export const PaymentTransactionScalarFieldEnum: {
    id: 'id',
    gateway: 'gateway',
    transactionDate: 'transactionDate',
    accountNumber: 'accountNumber',
    subAccount: 'subAccount',
    amountIn: 'amountIn',
    amountOut: 'amountOut',
    accumulated: 'accumulated',
    referenceNumber: 'referenceNumber',
    transactionContent: 'transactionContent',
    body: 'body',
    createdAt: 'createdAt'
  };

  export type PaymentTransactionScalarFieldEnum = (typeof PaymentTransactionScalarFieldEnum)[keyof typeof PaymentTransactionScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    path: 'path',
    method: 'method',
    module: 'module',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const RecurringBookingScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    serviceId: 'serviceId',
    interval: 'interval',
    nextRunDate: 'nextRunDate',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RecurringBookingScalarFieldEnum = (typeof RecurringBookingScalarFieldEnum)[keyof typeof RecurringBookingScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    deviceId: 'deviceId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    staffId: 'staffId',
    serviceId: 'serviceId',
    rating: 'rating',
    comment: 'comment',
    createdAt: 'createdAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const RewardPointScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    points: 'points',
    reason: 'reason',
    createdAt: 'createdAt'
  };

  export type RewardPointScalarFieldEnum = (typeof RewardPointScalarFieldEnum)[keyof typeof RewardPointScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const ServiceScalarFieldEnum: {
    id: 'id',
    basePrice: 'basePrice',
    virtualPrice: 'virtualPrice',
    images: 'images',
    durationMinutes: 'durationMinutes',
    providerId: 'providerId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    name: 'name',
    publishedAt: 'publishedAt',
    description: 'description',
    categoryId: 'categoryId',
    unit: 'unit'
  };

  export type ServiceScalarFieldEnum = (typeof ServiceScalarFieldEnum)[keyof typeof ServiceScalarFieldEnum]


  export const ServiceProviderScalarFieldEnum: {
    id: 'id',
    description: 'description',
    address: 'address',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    userId: 'userId',
    companyType: 'companyType',
    industry: 'industry',
    licenseNo: 'licenseNo',
    logo: 'logo',
    taxId: 'taxId',
    verificationStatus: 'verificationStatus',
    verifiedAt: 'verifiedAt',
    verifiedById: 'verifiedById'
  };

  export type ServiceProviderScalarFieldEnum = (typeof ServiceProviderScalarFieldEnum)[keyof typeof ServiceProviderScalarFieldEnum]


  export const ServiceProviderTranslationScalarFieldEnum: {
    id: 'id',
    providerId: 'providerId',
    languageId: 'languageId',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ServiceProviderTranslationScalarFieldEnum = (typeof ServiceProviderTranslationScalarFieldEnum)[keyof typeof ServiceProviderTranslationScalarFieldEnum]


  export const ServiceTranslationScalarFieldEnum: {
    id: 'id',
    serviceId: 'serviceId',
    languageId: 'languageId',
    name: 'name',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ServiceTranslationScalarFieldEnum = (typeof ServiceTranslationScalarFieldEnum)[keyof typeof ServiceTranslationScalarFieldEnum]


  export const StaffScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    providerId: 'providerId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isActive: 'isActive'
  };

  export type StaffScalarFieldEnum = (typeof StaffScalarFieldEnum)[keyof typeof StaffScalarFieldEnum]


  export const StaffCategoryScalarFieldEnum: {
    staffId: 'staffId',
    categoryId: 'categoryId'
  };

  export type StaffCategoryScalarFieldEnum = (typeof StaffCategoryScalarFieldEnum)[keyof typeof StaffCategoryScalarFieldEnum]


  export const TransactionScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    amount: 'amount',
    status: 'status',
    method: 'method',
    paidAt: 'paidAt',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    orderCode: 'orderCode'
  };

  export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    name: 'name',
    phone: 'phone',
    avatar: 'avatar',
    totpSecret: 'totpSecret',
    status: 'status',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const VerificationCodeScalarFieldEnum: {
    id: 'id',
    email: 'email',
    code: 'code',
    type: 'type',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type VerificationCodeScalarFieldEnum = (typeof VerificationCodeScalarFieldEnum)[keyof typeof VerificationCodeScalarFieldEnum]


  export const WorkLogScalarFieldEnum: {
    id: 'id',
    staffId: 'staffId',
    bookingId: 'bookingId',
    checkIn: 'checkIn',
    checkOut: 'checkOut',
    note: 'note',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type WorkLogScalarFieldEnum = (typeof WorkLogScalarFieldEnum)[keyof typeof WorkLogScalarFieldEnum]


  export const InspectionReportScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    staffId: 'staffId',
    estimatedTime: 'estimatedTime',
    note: 'note',
    images: 'images',
    createdAt: 'createdAt'
  };

  export type InspectionReportScalarFieldEnum = (typeof InspectionReportScalarFieldEnum)[keyof typeof InspectionReportScalarFieldEnum]


  export const ProposedServiceScalarFieldEnum: {
    id: 'id',
    bookingId: 'bookingId',
    serviceId: 'serviceId',
    quantity: 'quantity',
    price: 'price',
    notes: 'notes',
    createdAt: 'createdAt'
  };

  export type ProposedServiceScalarFieldEnum = (typeof ProposedServiceScalarFieldEnum)[keyof typeof ProposedServiceScalarFieldEnum]


  export const ServiceItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    unitPrice: 'unitPrice',
    warrantyPeriod: 'warrantyPeriod',
    createdAt: 'createdAt',
    deletedAt: 'deletedAt',
    updatedAt: 'updatedAt',
    brand: 'brand',
    description: 'description',
    isActive: 'isActive',
    model: 'model',
    stockQuantity: 'stockQuantity',
    unit: 'unit',
    providerId: 'providerId'
  };

  export type ServiceItemScalarFieldEnum = (typeof ServiceItemScalarFieldEnum)[keyof typeof ServiceItemScalarFieldEnum]


  export const ServiceRequestScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    providerId: 'providerId',
    note: 'note',
    preferredDate: 'preferredDate',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    location: 'location',
    phoneNumber: 'phoneNumber',
    categoryId: 'categoryId'
  };

  export type ServiceRequestScalarFieldEnum = (typeof ServiceRequestScalarFieldEnum)[keyof typeof ServiceRequestScalarFieldEnum]


  export const Service_ServiceItemsScalarFieldEnum: {
    serviceId: 'serviceId',
    serviceItemId: 'serviceItemId'
  };

  export type Service_ServiceItemsScalarFieldEnum = (typeof Service_ServiceItemsScalarFieldEnum)[keyof typeof Service_ServiceItemsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'BookingStatus'
   */
  export type EnumBookingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BookingStatus'>
    


  /**
   * Reference to a field of type 'BookingStatus[]'
   */
  export type ListEnumBookingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BookingStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Gender'
   */
  export type EnumGenderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Gender'>
    


  /**
   * Reference to a field of type 'Gender[]'
   */
  export type ListEnumGenderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Gender[]'>
    


  /**
   * Reference to a field of type 'HTTPMethod'
   */
  export type EnumHTTPMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'HTTPMethod'>
    


  /**
   * Reference to a field of type 'HTTPMethod[]'
   */
  export type ListEnumHTTPMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'HTTPMethod[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Unit'
   */
  export type EnumUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Unit'>
    


  /**
   * Reference to a field of type 'Unit[]'
   */
  export type ListEnumUnitFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Unit[]'>
    


  /**
   * Reference to a field of type 'CompanyType'
   */
  export type EnumCompanyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyType'>
    


  /**
   * Reference to a field of type 'CompanyType[]'
   */
  export type ListEnumCompanyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyType[]'>
    


  /**
   * Reference to a field of type 'VerificationStatus'
   */
  export type EnumVerificationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationStatus'>
    


  /**
   * Reference to a field of type 'VerificationStatus[]'
   */
  export type ListEnumVerificationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'VerificationCodeType'
   */
  export type EnumVerificationCodeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationCodeType'>
    


  /**
   * Reference to a field of type 'VerificationCodeType[]'
   */
  export type ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationCodeType[]'>
    


  /**
   * Reference to a field of type 'RequestStatus'
   */
  export type EnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus'>
    


  /**
   * Reference to a field of type 'RequestStatus[]'
   */
  export type ListEnumRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RequestStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type BookingWhereInput = {
    AND?: BookingWhereInput | BookingWhereInput[]
    OR?: BookingWhereInput[]
    NOT?: BookingWhereInput | BookingWhereInput[]
    id?: IntFilter<"Booking"> | number
    customerId?: IntFilter<"Booking"> | number
    providerId?: IntFilter<"Booking"> | number
    status?: EnumBookingStatusFilter<"Booking"> | $Enums.BookingStatus
    deletedAt?: DateTimeNullableFilter<"Booking"> | Date | string | null
    createdAt?: DateTimeFilter<"Booking"> | Date | string
    updatedAt?: DateTimeFilter<"Booking"> | Date | string
    staffId?: IntNullableFilter<"Booking"> | number | null
    serviceRequestId?: IntNullableFilter<"Booking"> | number | null
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    ServiceRequest?: XOR<ServiceRequestNullableScalarRelationFilter, ServiceRequestWhereInput> | null
    Staff_Booking_staffIdToStaff?: XOR<StaffNullableScalarRelationFilter, StaffWhereInput> | null
    InspectionReport?: XOR<InspectionReportNullableScalarRelationFilter, InspectionReportWhereInput> | null
    ProposedService?: ProposedServiceListRelationFilter
    Transaction?: XOR<TransactionNullableScalarRelationFilter, TransactionWhereInput> | null
    WorkLog?: WorkLogListRelationFilter
  }

  export type BookingOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    status?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    staffId?: SortOrderInput | SortOrder
    serviceRequestId?: SortOrderInput | SortOrder
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
    ServiceProvider?: ServiceProviderOrderByWithRelationInput
    ServiceRequest?: ServiceRequestOrderByWithRelationInput
    Staff_Booking_staffIdToStaff?: StaffOrderByWithRelationInput
    InspectionReport?: InspectionReportOrderByWithRelationInput
    ProposedService?: ProposedServiceOrderByRelationAggregateInput
    Transaction?: TransactionOrderByWithRelationInput
    WorkLog?: WorkLogOrderByRelationAggregateInput
  }

  export type BookingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    staffId?: number
    serviceRequestId?: number
    AND?: BookingWhereInput | BookingWhereInput[]
    OR?: BookingWhereInput[]
    NOT?: BookingWhereInput | BookingWhereInput[]
    customerId?: IntFilter<"Booking"> | number
    providerId?: IntFilter<"Booking"> | number
    status?: EnumBookingStatusFilter<"Booking"> | $Enums.BookingStatus
    deletedAt?: DateTimeNullableFilter<"Booking"> | Date | string | null
    createdAt?: DateTimeFilter<"Booking"> | Date | string
    updatedAt?: DateTimeFilter<"Booking"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    ServiceRequest?: XOR<ServiceRequestNullableScalarRelationFilter, ServiceRequestWhereInput> | null
    Staff_Booking_staffIdToStaff?: XOR<StaffNullableScalarRelationFilter, StaffWhereInput> | null
    InspectionReport?: XOR<InspectionReportNullableScalarRelationFilter, InspectionReportWhereInput> | null
    ProposedService?: ProposedServiceListRelationFilter
    Transaction?: XOR<TransactionNullableScalarRelationFilter, TransactionWhereInput> | null
    WorkLog?: WorkLogListRelationFilter
  }, "id" | "staffId" | "serviceRequestId">

  export type BookingOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    status?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    staffId?: SortOrderInput | SortOrder
    serviceRequestId?: SortOrderInput | SortOrder
    _count?: BookingCountOrderByAggregateInput
    _avg?: BookingAvgOrderByAggregateInput
    _max?: BookingMaxOrderByAggregateInput
    _min?: BookingMinOrderByAggregateInput
    _sum?: BookingSumOrderByAggregateInput
  }

  export type BookingScalarWhereWithAggregatesInput = {
    AND?: BookingScalarWhereWithAggregatesInput | BookingScalarWhereWithAggregatesInput[]
    OR?: BookingScalarWhereWithAggregatesInput[]
    NOT?: BookingScalarWhereWithAggregatesInput | BookingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Booking"> | number
    customerId?: IntWithAggregatesFilter<"Booking"> | number
    providerId?: IntWithAggregatesFilter<"Booking"> | number
    status?: EnumBookingStatusWithAggregatesFilter<"Booking"> | $Enums.BookingStatus
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Booking"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Booking"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Booking"> | Date | string
    staffId?: IntNullableWithAggregatesFilter<"Booking"> | number | null
    serviceRequestId?: IntNullableWithAggregatesFilter<"Booking"> | number | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: IntFilter<"Category"> | number
    name?: StringFilter<"Category"> | string
    logo?: StringNullableFilter<"Category"> | string | null
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    createdById?: IntNullableFilter<"Category"> | number | null
    updatedById?: IntNullableFilter<"Category"> | number | null
    deletedById?: IntNullableFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    User_Category_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Category_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    other_Category?: CategoryListRelationFilter
    User_Category_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    CategoryTranslation?: CategoryTranslationListRelationFilter
    Service?: ServiceListRelationFilter
    ServiceRequest?: ServiceRequestListRelationFilter
    StaffCategory?: StaffCategoryListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrderInput | SortOrder
    parentCategoryId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    User_Category_createdByIdToUser?: UserOrderByWithRelationInput
    User_Category_deletedByIdToUser?: UserOrderByWithRelationInput
    Category?: CategoryOrderByWithRelationInput
    other_Category?: CategoryOrderByRelationAggregateInput
    User_Category_updatedByIdToUser?: UserOrderByWithRelationInput
    CategoryTranslation?: CategoryTranslationOrderByRelationAggregateInput
    Service?: ServiceOrderByRelationAggregateInput
    ServiceRequest?: ServiceRequestOrderByRelationAggregateInput
    StaffCategory?: StaffCategoryOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    logo?: StringNullableFilter<"Category"> | string | null
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    createdById?: IntNullableFilter<"Category"> | number | null
    updatedById?: IntNullableFilter<"Category"> | number | null
    deletedById?: IntNullableFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    User_Category_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Category_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    other_Category?: CategoryListRelationFilter
    User_Category_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    CategoryTranslation?: CategoryTranslationListRelationFilter
    Service?: ServiceListRelationFilter
    ServiceRequest?: ServiceRequestListRelationFilter
    StaffCategory?: StaffCategoryListRelationFilter
  }, "id">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrderInput | SortOrder
    parentCategoryId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Category"> | number
    name?: StringWithAggregatesFilter<"Category"> | string
    logo?: StringNullableWithAggregatesFilter<"Category"> | string | null
    parentCategoryId?: IntNullableWithAggregatesFilter<"Category"> | number | null
    createdById?: IntNullableWithAggregatesFilter<"Category"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Category"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Category"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
  }

  export type CategoryTranslationWhereInput = {
    AND?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    OR?: CategoryTranslationWhereInput[]
    NOT?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    id?: IntFilter<"CategoryTranslation"> | number
    categoryId?: IntFilter<"CategoryTranslation"> | number
    languageId?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringFilter<"CategoryTranslation"> | string
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"CategoryTranslation"> | Date | string | null
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    Language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
  }

  export type CategoryTranslationOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    Category?: CategoryOrderByWithRelationInput
    Language?: LanguageOrderByWithRelationInput
  }

  export type CategoryTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    OR?: CategoryTranslationWhereInput[]
    NOT?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    categoryId?: IntFilter<"CategoryTranslation"> | number
    languageId?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringFilter<"CategoryTranslation"> | string
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"CategoryTranslation"> | Date | string | null
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    Language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
  }, "id">

  export type CategoryTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: CategoryTranslationCountOrderByAggregateInput
    _avg?: CategoryTranslationAvgOrderByAggregateInput
    _max?: CategoryTranslationMaxOrderByAggregateInput
    _min?: CategoryTranslationMinOrderByAggregateInput
    _sum?: CategoryTranslationSumOrderByAggregateInput
  }

  export type CategoryTranslationScalarWhereWithAggregatesInput = {
    AND?: CategoryTranslationScalarWhereWithAggregatesInput | CategoryTranslationScalarWhereWithAggregatesInput[]
    OR?: CategoryTranslationScalarWhereWithAggregatesInput[]
    NOT?: CategoryTranslationScalarWhereWithAggregatesInput | CategoryTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CategoryTranslation"> | number
    categoryId?: IntWithAggregatesFilter<"CategoryTranslation"> | number
    languageId?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    name?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    description?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CategoryTranslation"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"CategoryTranslation"> | Date | string | null
  }

  export type ChatMessageWhereInput = {
    AND?: ChatMessageWhereInput | ChatMessageWhereInput[]
    OR?: ChatMessageWhereInput[]
    NOT?: ChatMessageWhereInput | ChatMessageWhereInput[]
    id?: IntFilter<"ChatMessage"> | number
    customerId?: IntFilter<"ChatMessage"> | number
    sender?: StringFilter<"ChatMessage"> | string
    message?: StringFilter<"ChatMessage"> | string
    sentAt?: DateTimeFilter<"ChatMessage"> | Date | string
    isRead?: BoolFilter<"ChatMessage"> | boolean
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
  }

  export type ChatMessageOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    sentAt?: SortOrder
    isRead?: SortOrder
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
  }

  export type ChatMessageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ChatMessageWhereInput | ChatMessageWhereInput[]
    OR?: ChatMessageWhereInput[]
    NOT?: ChatMessageWhereInput | ChatMessageWhereInput[]
    customerId?: IntFilter<"ChatMessage"> | number
    sender?: StringFilter<"ChatMessage"> | string
    message?: StringFilter<"ChatMessage"> | string
    sentAt?: DateTimeFilter<"ChatMessage"> | Date | string
    isRead?: BoolFilter<"ChatMessage"> | boolean
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
  }, "id">

  export type ChatMessageOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    sentAt?: SortOrder
    isRead?: SortOrder
    _count?: ChatMessageCountOrderByAggregateInput
    _avg?: ChatMessageAvgOrderByAggregateInput
    _max?: ChatMessageMaxOrderByAggregateInput
    _min?: ChatMessageMinOrderByAggregateInput
    _sum?: ChatMessageSumOrderByAggregateInput
  }

  export type ChatMessageScalarWhereWithAggregatesInput = {
    AND?: ChatMessageScalarWhereWithAggregatesInput | ChatMessageScalarWhereWithAggregatesInput[]
    OR?: ChatMessageScalarWhereWithAggregatesInput[]
    NOT?: ChatMessageScalarWhereWithAggregatesInput | ChatMessageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ChatMessage"> | number
    customerId?: IntWithAggregatesFilter<"ChatMessage"> | number
    sender?: StringWithAggregatesFilter<"ChatMessage"> | string
    message?: StringWithAggregatesFilter<"ChatMessage"> | string
    sentAt?: DateTimeWithAggregatesFilter<"ChatMessage"> | Date | string
    isRead?: BoolWithAggregatesFilter<"ChatMessage"> | boolean
  }

  export type CustomerProfileWhereInput = {
    AND?: CustomerProfileWhereInput | CustomerProfileWhereInput[]
    OR?: CustomerProfileWhereInput[]
    NOT?: CustomerProfileWhereInput | CustomerProfileWhereInput[]
    id?: IntFilter<"CustomerProfile"> | number
    userId?: IntFilter<"CustomerProfile"> | number
    address?: StringNullableFilter<"CustomerProfile"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"CustomerProfile"> | Date | string | null
    gender?: EnumGenderNullableFilter<"CustomerProfile"> | $Enums.Gender | null
    createdAt?: DateTimeFilter<"CustomerProfile"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerProfile"> | Date | string
    Booking?: BookingListRelationFilter
    ChatMessage?: ChatMessageListRelationFilter
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    PackageRecommendation?: PackageRecommendationListRelationFilter
    RecurringBooking?: RecurringBookingListRelationFilter
    Review?: ReviewListRelationFilter
    RewardPoint?: RewardPointListRelationFilter
    ServiceRequest?: ServiceRequestListRelationFilter
  }

  export type CustomerProfileOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Booking?: BookingOrderByRelationAggregateInput
    ChatMessage?: ChatMessageOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    PackageRecommendation?: PackageRecommendationOrderByRelationAggregateInput
    RecurringBooking?: RecurringBookingOrderByRelationAggregateInput
    Review?: ReviewOrderByRelationAggregateInput
    RewardPoint?: RewardPointOrderByRelationAggregateInput
    ServiceRequest?: ServiceRequestOrderByRelationAggregateInput
  }

  export type CustomerProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId?: number
    AND?: CustomerProfileWhereInput | CustomerProfileWhereInput[]
    OR?: CustomerProfileWhereInput[]
    NOT?: CustomerProfileWhereInput | CustomerProfileWhereInput[]
    address?: StringNullableFilter<"CustomerProfile"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"CustomerProfile"> | Date | string | null
    gender?: EnumGenderNullableFilter<"CustomerProfile"> | $Enums.Gender | null
    createdAt?: DateTimeFilter<"CustomerProfile"> | Date | string
    updatedAt?: DateTimeFilter<"CustomerProfile"> | Date | string
    Booking?: BookingListRelationFilter
    ChatMessage?: ChatMessageListRelationFilter
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    PackageRecommendation?: PackageRecommendationListRelationFilter
    RecurringBooking?: RecurringBookingListRelationFilter
    Review?: ReviewListRelationFilter
    RewardPoint?: RewardPointListRelationFilter
    ServiceRequest?: ServiceRequestListRelationFilter
  }, "id" | "userId">

  export type CustomerProfileOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomerProfileCountOrderByAggregateInput
    _avg?: CustomerProfileAvgOrderByAggregateInput
    _max?: CustomerProfileMaxOrderByAggregateInput
    _min?: CustomerProfileMinOrderByAggregateInput
    _sum?: CustomerProfileSumOrderByAggregateInput
  }

  export type CustomerProfileScalarWhereWithAggregatesInput = {
    AND?: CustomerProfileScalarWhereWithAggregatesInput | CustomerProfileScalarWhereWithAggregatesInput[]
    OR?: CustomerProfileScalarWhereWithAggregatesInput[]
    NOT?: CustomerProfileScalarWhereWithAggregatesInput | CustomerProfileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CustomerProfile"> | number
    userId?: IntWithAggregatesFilter<"CustomerProfile"> | number
    address?: StringNullableWithAggregatesFilter<"CustomerProfile"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"CustomerProfile"> | Date | string | null
    gender?: EnumGenderNullableWithAggregatesFilter<"CustomerProfile"> | $Enums.Gender | null
    createdAt?: DateTimeWithAggregatesFilter<"CustomerProfile"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CustomerProfile"> | Date | string
  }

  export type DeviceWhereInput = {
    AND?: DeviceWhereInput | DeviceWhereInput[]
    OR?: DeviceWhereInput[]
    NOT?: DeviceWhereInput | DeviceWhereInput[]
    id?: IntFilter<"Device"> | number
    userId?: IntFilter<"Device"> | number
    userAgent?: StringFilter<"Device"> | string
    ip?: StringFilter<"Device"> | string
    lastActive?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    isActive?: BoolFilter<"Device"> | boolean
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    RefreshToken?: RefreshTokenListRelationFilter
  }

  export type DeviceOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
    User?: UserOrderByWithRelationInput
    RefreshToken?: RefreshTokenOrderByRelationAggregateInput
  }

  export type DeviceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DeviceWhereInput | DeviceWhereInput[]
    OR?: DeviceWhereInput[]
    NOT?: DeviceWhereInput | DeviceWhereInput[]
    userId?: IntFilter<"Device"> | number
    userAgent?: StringFilter<"Device"> | string
    ip?: StringFilter<"Device"> | string
    lastActive?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    isActive?: BoolFilter<"Device"> | boolean
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    RefreshToken?: RefreshTokenListRelationFilter
  }, "id">

  export type DeviceOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
    _count?: DeviceCountOrderByAggregateInput
    _avg?: DeviceAvgOrderByAggregateInput
    _max?: DeviceMaxOrderByAggregateInput
    _min?: DeviceMinOrderByAggregateInput
    _sum?: DeviceSumOrderByAggregateInput
  }

  export type DeviceScalarWhereWithAggregatesInput = {
    AND?: DeviceScalarWhereWithAggregatesInput | DeviceScalarWhereWithAggregatesInput[]
    OR?: DeviceScalarWhereWithAggregatesInput[]
    NOT?: DeviceScalarWhereWithAggregatesInput | DeviceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Device"> | number
    userId?: IntWithAggregatesFilter<"Device"> | number
    userAgent?: StringWithAggregatesFilter<"Device"> | string
    ip?: StringWithAggregatesFilter<"Device"> | string
    lastActive?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    isActive?: BoolWithAggregatesFilter<"Device"> | boolean
  }

  export type LanguageWhereInput = {
    AND?: LanguageWhereInput | LanguageWhereInput[]
    OR?: LanguageWhereInput[]
    NOT?: LanguageWhereInput | LanguageWhereInput[]
    id?: StringFilter<"Language"> | string
    name?: StringFilter<"Language"> | string
    createdById?: IntNullableFilter<"Language"> | number | null
    updatedById?: IntNullableFilter<"Language"> | number | null
    deletedById?: IntNullableFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableFilter<"Language"> | Date | string | null
    createdAt?: DateTimeFilter<"Language"> | Date | string
    updatedAt?: DateTimeFilter<"Language"> | Date | string
    CategoryTranslation?: CategoryTranslationListRelationFilter
    User_Language_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Language_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Language_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceProviderTranslation?: ServiceProviderTranslationListRelationFilter
    ServiceTranslation?: ServiceTranslationListRelationFilter
  }

  export type LanguageOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    CategoryTranslation?: CategoryTranslationOrderByRelationAggregateInput
    User_Language_createdByIdToUser?: UserOrderByWithRelationInput
    User_Language_deletedByIdToUser?: UserOrderByWithRelationInput
    User_Language_updatedByIdToUser?: UserOrderByWithRelationInput
    ServiceProviderTranslation?: ServiceProviderTranslationOrderByRelationAggregateInput
    ServiceTranslation?: ServiceTranslationOrderByRelationAggregateInput
  }

  export type LanguageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LanguageWhereInput | LanguageWhereInput[]
    OR?: LanguageWhereInput[]
    NOT?: LanguageWhereInput | LanguageWhereInput[]
    name?: StringFilter<"Language"> | string
    createdById?: IntNullableFilter<"Language"> | number | null
    updatedById?: IntNullableFilter<"Language"> | number | null
    deletedById?: IntNullableFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableFilter<"Language"> | Date | string | null
    createdAt?: DateTimeFilter<"Language"> | Date | string
    updatedAt?: DateTimeFilter<"Language"> | Date | string
    CategoryTranslation?: CategoryTranslationListRelationFilter
    User_Language_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Language_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Language_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceProviderTranslation?: ServiceProviderTranslationListRelationFilter
    ServiceTranslation?: ServiceTranslationListRelationFilter
  }, "id">

  export type LanguageOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: LanguageCountOrderByAggregateInput
    _avg?: LanguageAvgOrderByAggregateInput
    _max?: LanguageMaxOrderByAggregateInput
    _min?: LanguageMinOrderByAggregateInput
    _sum?: LanguageSumOrderByAggregateInput
  }

  export type LanguageScalarWhereWithAggregatesInput = {
    AND?: LanguageScalarWhereWithAggregatesInput | LanguageScalarWhereWithAggregatesInput[]
    OR?: LanguageScalarWhereWithAggregatesInput[]
    NOT?: LanguageScalarWhereWithAggregatesInput | LanguageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Language"> | string
    name?: StringWithAggregatesFilter<"Language"> | string
    createdById?: IntNullableWithAggregatesFilter<"Language"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Language"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Language"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Language"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Language"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: IntFilter<"Notification"> | number
    userId?: IntFilter<"Notification"> | number
    content?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: IntFilter<"Notification"> | number
    content?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _avg?: NotificationAvgOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
    _sum?: NotificationSumOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Notification"> | number
    userId?: IntWithAggregatesFilter<"Notification"> | number
    content?: StringWithAggregatesFilter<"Notification"> | string
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type PackageRecommendationWhereInput = {
    AND?: PackageRecommendationWhereInput | PackageRecommendationWhereInput[]
    OR?: PackageRecommendationWhereInput[]
    NOT?: PackageRecommendationWhereInput | PackageRecommendationWhereInput[]
    id?: IntFilter<"PackageRecommendation"> | number
    customerId?: IntFilter<"PackageRecommendation"> | number
    packageId?: IntFilter<"PackageRecommendation"> | number
    reason?: StringNullableFilter<"PackageRecommendation"> | string | null
    accepted?: BoolFilter<"PackageRecommendation"> | boolean
    recommendedAt?: DateTimeFilter<"PackageRecommendation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"PackageRecommendation"> | Date | string | null
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
  }

  export type PackageRecommendationOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
    reason?: SortOrderInput | SortOrder
    accepted?: SortOrder
    recommendedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
  }

  export type PackageRecommendationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PackageRecommendationWhereInput | PackageRecommendationWhereInput[]
    OR?: PackageRecommendationWhereInput[]
    NOT?: PackageRecommendationWhereInput | PackageRecommendationWhereInput[]
    customerId?: IntFilter<"PackageRecommendation"> | number
    packageId?: IntFilter<"PackageRecommendation"> | number
    reason?: StringNullableFilter<"PackageRecommendation"> | string | null
    accepted?: BoolFilter<"PackageRecommendation"> | boolean
    recommendedAt?: DateTimeFilter<"PackageRecommendation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"PackageRecommendation"> | Date | string | null
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
  }, "id">

  export type PackageRecommendationOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
    reason?: SortOrderInput | SortOrder
    accepted?: SortOrder
    recommendedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    _count?: PackageRecommendationCountOrderByAggregateInput
    _avg?: PackageRecommendationAvgOrderByAggregateInput
    _max?: PackageRecommendationMaxOrderByAggregateInput
    _min?: PackageRecommendationMinOrderByAggregateInput
    _sum?: PackageRecommendationSumOrderByAggregateInput
  }

  export type PackageRecommendationScalarWhereWithAggregatesInput = {
    AND?: PackageRecommendationScalarWhereWithAggregatesInput | PackageRecommendationScalarWhereWithAggregatesInput[]
    OR?: PackageRecommendationScalarWhereWithAggregatesInput[]
    NOT?: PackageRecommendationScalarWhereWithAggregatesInput | PackageRecommendationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PackageRecommendation"> | number
    customerId?: IntWithAggregatesFilter<"PackageRecommendation"> | number
    packageId?: IntWithAggregatesFilter<"PackageRecommendation"> | number
    reason?: StringNullableWithAggregatesFilter<"PackageRecommendation"> | string | null
    accepted?: BoolWithAggregatesFilter<"PackageRecommendation"> | boolean
    recommendedAt?: DateTimeWithAggregatesFilter<"PackageRecommendation"> | Date | string
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"PackageRecommendation"> | Date | string | null
  }

  export type PaymentTransactionWhereInput = {
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    id?: IntFilter<"PaymentTransaction"> | number
    gateway?: StringFilter<"PaymentTransaction"> | string
    transactionDate?: DateTimeFilter<"PaymentTransaction"> | Date | string
    accountNumber?: StringNullableFilter<"PaymentTransaction"> | string | null
    subAccount?: StringNullableFilter<"PaymentTransaction"> | string | null
    amountIn?: IntFilter<"PaymentTransaction"> | number
    amountOut?: IntFilter<"PaymentTransaction"> | number
    accumulated?: IntFilter<"PaymentTransaction"> | number
    referenceNumber?: StringNullableFilter<"PaymentTransaction"> | string | null
    transactionContent?: StringNullableFilter<"PaymentTransaction"> | string | null
    body?: StringNullableFilter<"PaymentTransaction"> | string | null
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
  }

  export type PaymentTransactionOrderByWithRelationInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrderInput | SortOrder
    subAccount?: SortOrderInput | SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    referenceNumber?: SortOrderInput | SortOrder
    transactionContent?: SortOrderInput | SortOrder
    body?: SortOrderInput | SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    gateway?: StringFilter<"PaymentTransaction"> | string
    transactionDate?: DateTimeFilter<"PaymentTransaction"> | Date | string
    accountNumber?: StringNullableFilter<"PaymentTransaction"> | string | null
    subAccount?: StringNullableFilter<"PaymentTransaction"> | string | null
    amountIn?: IntFilter<"PaymentTransaction"> | number
    amountOut?: IntFilter<"PaymentTransaction"> | number
    accumulated?: IntFilter<"PaymentTransaction"> | number
    referenceNumber?: StringNullableFilter<"PaymentTransaction"> | string | null
    transactionContent?: StringNullableFilter<"PaymentTransaction"> | string | null
    body?: StringNullableFilter<"PaymentTransaction"> | string | null
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
  }, "id">

  export type PaymentTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrderInput | SortOrder
    subAccount?: SortOrderInput | SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    referenceNumber?: SortOrderInput | SortOrder
    transactionContent?: SortOrderInput | SortOrder
    body?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PaymentTransactionCountOrderByAggregateInput
    _avg?: PaymentTransactionAvgOrderByAggregateInput
    _max?: PaymentTransactionMaxOrderByAggregateInput
    _min?: PaymentTransactionMinOrderByAggregateInput
    _sum?: PaymentTransactionSumOrderByAggregateInput
  }

  export type PaymentTransactionScalarWhereWithAggregatesInput = {
    AND?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    OR?: PaymentTransactionScalarWhereWithAggregatesInput[]
    NOT?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    gateway?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    transactionDate?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
    accountNumber?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    subAccount?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    amountIn?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    amountOut?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    accumulated?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    referenceNumber?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    transactionContent?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    body?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
  }

  export type PermissionWhereInput = {
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    id?: IntFilter<"Permission"> | number
    name?: StringFilter<"Permission"> | string
    description?: StringNullableFilter<"Permission"> | string | null
    path?: StringFilter<"Permission"> | string
    method?: EnumHTTPMethodFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringNullableFilter<"Permission"> | string | null
    createdById?: IntNullableFilter<"Permission"> | number | null
    updatedById?: IntNullableFilter<"Permission"> | number | null
    deletedById?: IntNullableFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
    User_Permission_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Permission_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Permission_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Role?: RoleListRelationFilter
  }

  export type PermissionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    User_Permission_createdByIdToUser?: UserOrderByWithRelationInput
    User_Permission_deletedByIdToUser?: UserOrderByWithRelationInput
    User_Permission_updatedByIdToUser?: UserOrderByWithRelationInput
    Role?: RoleOrderByRelationAggregateInput
  }

  export type PermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    description?: StringNullableFilter<"Permission"> | string | null
    path?: StringFilter<"Permission"> | string
    method?: EnumHTTPMethodFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringNullableFilter<"Permission"> | string | null
    createdById?: IntNullableFilter<"Permission"> | number | null
    updatedById?: IntNullableFilter<"Permission"> | number | null
    deletedById?: IntNullableFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
    User_Permission_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Permission_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Permission_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Role?: RoleListRelationFilter
  }, "id" | "name">

  export type PermissionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PermissionCountOrderByAggregateInput
    _avg?: PermissionAvgOrderByAggregateInput
    _max?: PermissionMaxOrderByAggregateInput
    _min?: PermissionMinOrderByAggregateInput
    _sum?: PermissionSumOrderByAggregateInput
  }

  export type PermissionScalarWhereWithAggregatesInput = {
    AND?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    OR?: PermissionScalarWhereWithAggregatesInput[]
    NOT?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permission"> | number
    name?: StringWithAggregatesFilter<"Permission"> | string
    description?: StringNullableWithAggregatesFilter<"Permission"> | string | null
    path?: StringWithAggregatesFilter<"Permission"> | string
    method?: EnumHTTPMethodWithAggregatesFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringNullableWithAggregatesFilter<"Permission"> | string | null
    createdById?: IntNullableWithAggregatesFilter<"Permission"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Permission"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Permission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Permission"> | Date | string
  }

  export type RecurringBookingWhereInput = {
    AND?: RecurringBookingWhereInput | RecurringBookingWhereInput[]
    OR?: RecurringBookingWhereInput[]
    NOT?: RecurringBookingWhereInput | RecurringBookingWhereInput[]
    id?: IntFilter<"RecurringBooking"> | number
    customerId?: IntFilter<"RecurringBooking"> | number
    serviceId?: IntFilter<"RecurringBooking"> | number
    interval?: StringFilter<"RecurringBooking"> | string
    nextRunDate?: DateTimeFilter<"RecurringBooking"> | Date | string
    active?: BoolFilter<"RecurringBooking"> | boolean
    createdAt?: DateTimeFilter<"RecurringBooking"> | Date | string
    updatedAt?: DateTimeFilter<"RecurringBooking"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
  }

  export type RecurringBookingOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
    interval?: SortOrder
    nextRunDate?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
    Service?: ServiceOrderByWithRelationInput
  }

  export type RecurringBookingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RecurringBookingWhereInput | RecurringBookingWhereInput[]
    OR?: RecurringBookingWhereInput[]
    NOT?: RecurringBookingWhereInput | RecurringBookingWhereInput[]
    customerId?: IntFilter<"RecurringBooking"> | number
    serviceId?: IntFilter<"RecurringBooking"> | number
    interval?: StringFilter<"RecurringBooking"> | string
    nextRunDate?: DateTimeFilter<"RecurringBooking"> | Date | string
    active?: BoolFilter<"RecurringBooking"> | boolean
    createdAt?: DateTimeFilter<"RecurringBooking"> | Date | string
    updatedAt?: DateTimeFilter<"RecurringBooking"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
  }, "id">

  export type RecurringBookingOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
    interval?: SortOrder
    nextRunDate?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RecurringBookingCountOrderByAggregateInput
    _avg?: RecurringBookingAvgOrderByAggregateInput
    _max?: RecurringBookingMaxOrderByAggregateInput
    _min?: RecurringBookingMinOrderByAggregateInput
    _sum?: RecurringBookingSumOrderByAggregateInput
  }

  export type RecurringBookingScalarWhereWithAggregatesInput = {
    AND?: RecurringBookingScalarWhereWithAggregatesInput | RecurringBookingScalarWhereWithAggregatesInput[]
    OR?: RecurringBookingScalarWhereWithAggregatesInput[]
    NOT?: RecurringBookingScalarWhereWithAggregatesInput | RecurringBookingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RecurringBooking"> | number
    customerId?: IntWithAggregatesFilter<"RecurringBooking"> | number
    serviceId?: IntWithAggregatesFilter<"RecurringBooking"> | number
    interval?: StringWithAggregatesFilter<"RecurringBooking"> | string
    nextRunDate?: DateTimeWithAggregatesFilter<"RecurringBooking"> | Date | string
    active?: BoolWithAggregatesFilter<"RecurringBooking"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"RecurringBooking"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RecurringBooking"> | Date | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: IntFilter<"RefreshToken"> | number
    token?: StringFilter<"RefreshToken"> | string
    userId?: IntFilter<"RefreshToken"> | number
    deviceId?: IntFilter<"RefreshToken"> | number
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    Device?: XOR<DeviceScalarRelationFilter, DeviceWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    Device?: DeviceOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: IntFilter<"RefreshToken"> | number
    deviceId?: IntFilter<"RefreshToken"> | number
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    Device?: XOR<DeviceScalarRelationFilter, DeviceWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _avg?: RefreshTokenAvgOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
    _sum?: RefreshTokenSumOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RefreshToken"> | number
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: IntWithAggregatesFilter<"RefreshToken"> | number
    deviceId?: IntWithAggregatesFilter<"RefreshToken"> | number
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: IntFilter<"Review"> | number
    customerId?: IntFilter<"Review"> | number
    staffId?: IntFilter<"Review"> | number
    serviceId?: IntFilter<"Review"> | number
    rating?: IntFilter<"Review"> | number
    comment?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
    Service?: ServiceOrderByWithRelationInput
    Staff?: StaffOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    customerId?: IntFilter<"Review"> | number
    staffId?: IntFilter<"Review"> | number
    serviceId?: IntFilter<"Review"> | number
    rating?: IntFilter<"Review"> | number
    comment?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Review"> | number
    customerId?: IntWithAggregatesFilter<"Review"> | number
    staffId?: IntWithAggregatesFilter<"Review"> | number
    serviceId?: IntWithAggregatesFilter<"Review"> | number
    rating?: IntWithAggregatesFilter<"Review"> | number
    comment?: StringWithAggregatesFilter<"Review"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
  }

  export type RewardPointWhereInput = {
    AND?: RewardPointWhereInput | RewardPointWhereInput[]
    OR?: RewardPointWhereInput[]
    NOT?: RewardPointWhereInput | RewardPointWhereInput[]
    id?: IntFilter<"RewardPoint"> | number
    customerId?: IntFilter<"RewardPoint"> | number
    points?: IntFilter<"RewardPoint"> | number
    reason?: StringNullableFilter<"RewardPoint"> | string | null
    createdAt?: DateTimeFilter<"RewardPoint"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
  }

  export type RewardPointOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
  }

  export type RewardPointWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RewardPointWhereInput | RewardPointWhereInput[]
    OR?: RewardPointWhereInput[]
    NOT?: RewardPointWhereInput | RewardPointWhereInput[]
    customerId?: IntFilter<"RewardPoint"> | number
    points?: IntFilter<"RewardPoint"> | number
    reason?: StringNullableFilter<"RewardPoint"> | string | null
    createdAt?: DateTimeFilter<"RewardPoint"> | Date | string
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
  }, "id">

  export type RewardPointOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: RewardPointCountOrderByAggregateInput
    _avg?: RewardPointAvgOrderByAggregateInput
    _max?: RewardPointMaxOrderByAggregateInput
    _min?: RewardPointMinOrderByAggregateInput
    _sum?: RewardPointSumOrderByAggregateInput
  }

  export type RewardPointScalarWhereWithAggregatesInput = {
    AND?: RewardPointScalarWhereWithAggregatesInput | RewardPointScalarWhereWithAggregatesInput[]
    OR?: RewardPointScalarWhereWithAggregatesInput[]
    NOT?: RewardPointScalarWhereWithAggregatesInput | RewardPointScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RewardPoint"> | number
    customerId?: IntWithAggregatesFilter<"RewardPoint"> | number
    points?: IntWithAggregatesFilter<"RewardPoint"> | number
    reason?: StringNullableWithAggregatesFilter<"RewardPoint"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RewardPoint"> | Date | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    createdById?: IntNullableFilter<"Role"> | number | null
    updatedById?: IntNullableFilter<"Role"> | number | null
    deletedById?: IntNullableFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    User_Role_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Role_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Role_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Permission?: PermissionListRelationFilter
    User_UserRoles?: UserListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    User_Role_createdByIdToUser?: UserOrderByWithRelationInput
    User_Role_deletedByIdToUser?: UserOrderByWithRelationInput
    User_Role_updatedByIdToUser?: UserOrderByWithRelationInput
    Permission?: PermissionOrderByRelationAggregateInput
    User_UserRoles?: UserOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    createdById?: IntNullableFilter<"Role"> | number | null
    updatedById?: IntNullableFilter<"Role"> | number | null
    deletedById?: IntNullableFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    User_Role_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Role_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Role_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Permission?: PermissionListRelationFilter
    User_UserRoles?: UserListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
    createdById?: IntNullableWithAggregatesFilter<"Role"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Role"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
  }

  export type ServiceWhereInput = {
    AND?: ServiceWhereInput | ServiceWhereInput[]
    OR?: ServiceWhereInput[]
    NOT?: ServiceWhereInput | ServiceWhereInput[]
    id?: IntFilter<"Service"> | number
    basePrice?: FloatFilter<"Service"> | number
    virtualPrice?: FloatFilter<"Service"> | number
    images?: StringNullableListFilter<"Service">
    durationMinutes?: IntFilter<"Service"> | number
    providerId?: IntFilter<"Service"> | number
    createdById?: IntNullableFilter<"Service"> | number | null
    updatedById?: IntNullableFilter<"Service"> | number | null
    deletedById?: IntNullableFilter<"Service"> | number | null
    deletedAt?: DateTimeNullableFilter<"Service"> | Date | string | null
    createdAt?: DateTimeFilter<"Service"> | Date | string
    updatedAt?: DateTimeFilter<"Service"> | Date | string
    name?: StringFilter<"Service"> | string
    publishedAt?: DateTimeNullableFilter<"Service"> | Date | string | null
    description?: StringFilter<"Service"> | string
    categoryId?: IntFilter<"Service"> | number
    unit?: EnumUnitFilter<"Service"> | $Enums.Unit
    ProposedService?: ProposedServiceListRelationFilter
    RecurringBooking?: RecurringBookingListRelationFilter
    Review?: ReviewListRelationFilter
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    User_Service_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Service_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    User_Service_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceTranslation?: ServiceTranslationListRelationFilter
    Service_ServiceItems?: Service_ServiceItemsListRelationFilter
  }

  export type ServiceOrderByWithRelationInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    images?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    description?: SortOrder
    categoryId?: SortOrder
    unit?: SortOrder
    ProposedService?: ProposedServiceOrderByRelationAggregateInput
    RecurringBooking?: RecurringBookingOrderByRelationAggregateInput
    Review?: ReviewOrderByRelationAggregateInput
    Category?: CategoryOrderByWithRelationInput
    User_Service_createdByIdToUser?: UserOrderByWithRelationInput
    User_Service_deletedByIdToUser?: UserOrderByWithRelationInput
    ServiceProvider?: ServiceProviderOrderByWithRelationInput
    User_Service_updatedByIdToUser?: UserOrderByWithRelationInput
    ServiceTranslation?: ServiceTranslationOrderByRelationAggregateInput
    Service_ServiceItems?: Service_ServiceItemsOrderByRelationAggregateInput
  }

  export type ServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ServiceWhereInput | ServiceWhereInput[]
    OR?: ServiceWhereInput[]
    NOT?: ServiceWhereInput | ServiceWhereInput[]
    basePrice?: FloatFilter<"Service"> | number
    virtualPrice?: FloatFilter<"Service"> | number
    images?: StringNullableListFilter<"Service">
    durationMinutes?: IntFilter<"Service"> | number
    providerId?: IntFilter<"Service"> | number
    createdById?: IntNullableFilter<"Service"> | number | null
    updatedById?: IntNullableFilter<"Service"> | number | null
    deletedById?: IntNullableFilter<"Service"> | number | null
    deletedAt?: DateTimeNullableFilter<"Service"> | Date | string | null
    createdAt?: DateTimeFilter<"Service"> | Date | string
    updatedAt?: DateTimeFilter<"Service"> | Date | string
    name?: StringFilter<"Service"> | string
    publishedAt?: DateTimeNullableFilter<"Service"> | Date | string | null
    description?: StringFilter<"Service"> | string
    categoryId?: IntFilter<"Service"> | number
    unit?: EnumUnitFilter<"Service"> | $Enums.Unit
    ProposedService?: ProposedServiceListRelationFilter
    RecurringBooking?: RecurringBookingListRelationFilter
    Review?: ReviewListRelationFilter
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    User_Service_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User_Service_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    User_Service_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceTranslation?: ServiceTranslationListRelationFilter
    Service_ServiceItems?: Service_ServiceItemsListRelationFilter
  }, "id">

  export type ServiceOrderByWithAggregationInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    images?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    description?: SortOrder
    categoryId?: SortOrder
    unit?: SortOrder
    _count?: ServiceCountOrderByAggregateInput
    _avg?: ServiceAvgOrderByAggregateInput
    _max?: ServiceMaxOrderByAggregateInput
    _min?: ServiceMinOrderByAggregateInput
    _sum?: ServiceSumOrderByAggregateInput
  }

  export type ServiceScalarWhereWithAggregatesInput = {
    AND?: ServiceScalarWhereWithAggregatesInput | ServiceScalarWhereWithAggregatesInput[]
    OR?: ServiceScalarWhereWithAggregatesInput[]
    NOT?: ServiceScalarWhereWithAggregatesInput | ServiceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Service"> | number
    basePrice?: FloatWithAggregatesFilter<"Service"> | number
    virtualPrice?: FloatWithAggregatesFilter<"Service"> | number
    images?: StringNullableListFilter<"Service">
    durationMinutes?: IntWithAggregatesFilter<"Service"> | number
    providerId?: IntWithAggregatesFilter<"Service"> | number
    createdById?: IntNullableWithAggregatesFilter<"Service"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Service"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Service"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Service"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Service"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Service"> | Date | string
    name?: StringWithAggregatesFilter<"Service"> | string
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Service"> | Date | string | null
    description?: StringWithAggregatesFilter<"Service"> | string
    categoryId?: IntWithAggregatesFilter<"Service"> | number
    unit?: EnumUnitWithAggregatesFilter<"Service"> | $Enums.Unit
  }

  export type ServiceProviderWhereInput = {
    AND?: ServiceProviderWhereInput | ServiceProviderWhereInput[]
    OR?: ServiceProviderWhereInput[]
    NOT?: ServiceProviderWhereInput | ServiceProviderWhereInput[]
    id?: IntFilter<"ServiceProvider"> | number
    description?: StringNullableFilter<"ServiceProvider"> | string | null
    address?: StringFilter<"ServiceProvider"> | string
    createdAt?: DateTimeFilter<"ServiceProvider"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceProvider"> | Date | string
    userId?: IntFilter<"ServiceProvider"> | number
    companyType?: EnumCompanyTypeFilter<"ServiceProvider"> | $Enums.CompanyType
    industry?: StringNullableFilter<"ServiceProvider"> | string | null
    licenseNo?: StringNullableFilter<"ServiceProvider"> | string | null
    logo?: StringNullableFilter<"ServiceProvider"> | string | null
    taxId?: StringFilter<"ServiceProvider"> | string
    verificationStatus?: EnumVerificationStatusFilter<"ServiceProvider"> | $Enums.VerificationStatus
    verifiedAt?: DateTimeNullableFilter<"ServiceProvider"> | Date | string | null
    verifiedById?: IntNullableFilter<"ServiceProvider"> | number | null
    Booking?: BookingListRelationFilter
    Service?: ServiceListRelationFilter
    ServiceItem?: ServiceItemListRelationFilter
    User_ServiceProvider_userIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_ServiceProvider_verifiedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceProviderTranslation?: ServiceProviderTranslationListRelationFilter
    ServiceRequest?: ServiceRequestListRelationFilter
    Staff?: StaffListRelationFilter
  }

  export type ServiceProviderOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrderInput | SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    companyType?: SortOrder
    industry?: SortOrderInput | SortOrder
    licenseNo?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    taxId?: SortOrder
    verificationStatus?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedById?: SortOrderInput | SortOrder
    Booking?: BookingOrderByRelationAggregateInput
    Service?: ServiceOrderByRelationAggregateInput
    ServiceItem?: ServiceItemOrderByRelationAggregateInput
    User_ServiceProvider_userIdToUser?: UserOrderByWithRelationInput
    User_ServiceProvider_verifiedByIdToUser?: UserOrderByWithRelationInput
    ServiceProviderTranslation?: ServiceProviderTranslationOrderByRelationAggregateInput
    ServiceRequest?: ServiceRequestOrderByRelationAggregateInput
    Staff?: StaffOrderByRelationAggregateInput
  }

  export type ServiceProviderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId?: number
    AND?: ServiceProviderWhereInput | ServiceProviderWhereInput[]
    OR?: ServiceProviderWhereInput[]
    NOT?: ServiceProviderWhereInput | ServiceProviderWhereInput[]
    description?: StringNullableFilter<"ServiceProvider"> | string | null
    address?: StringFilter<"ServiceProvider"> | string
    createdAt?: DateTimeFilter<"ServiceProvider"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceProvider"> | Date | string
    companyType?: EnumCompanyTypeFilter<"ServiceProvider"> | $Enums.CompanyType
    industry?: StringNullableFilter<"ServiceProvider"> | string | null
    licenseNo?: StringNullableFilter<"ServiceProvider"> | string | null
    logo?: StringNullableFilter<"ServiceProvider"> | string | null
    taxId?: StringFilter<"ServiceProvider"> | string
    verificationStatus?: EnumVerificationStatusFilter<"ServiceProvider"> | $Enums.VerificationStatus
    verifiedAt?: DateTimeNullableFilter<"ServiceProvider"> | Date | string | null
    verifiedById?: IntNullableFilter<"ServiceProvider"> | number | null
    Booking?: BookingListRelationFilter
    Service?: ServiceListRelationFilter
    ServiceItem?: ServiceItemListRelationFilter
    User_ServiceProvider_userIdToUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    User_ServiceProvider_verifiedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    ServiceProviderTranslation?: ServiceProviderTranslationListRelationFilter
    ServiceRequest?: ServiceRequestListRelationFilter
    Staff?: StaffListRelationFilter
  }, "id" | "userId">

  export type ServiceProviderOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrderInput | SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    companyType?: SortOrder
    industry?: SortOrderInput | SortOrder
    licenseNo?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    taxId?: SortOrder
    verificationStatus?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedById?: SortOrderInput | SortOrder
    _count?: ServiceProviderCountOrderByAggregateInput
    _avg?: ServiceProviderAvgOrderByAggregateInput
    _max?: ServiceProviderMaxOrderByAggregateInput
    _min?: ServiceProviderMinOrderByAggregateInput
    _sum?: ServiceProviderSumOrderByAggregateInput
  }

  export type ServiceProviderScalarWhereWithAggregatesInput = {
    AND?: ServiceProviderScalarWhereWithAggregatesInput | ServiceProviderScalarWhereWithAggregatesInput[]
    OR?: ServiceProviderScalarWhereWithAggregatesInput[]
    NOT?: ServiceProviderScalarWhereWithAggregatesInput | ServiceProviderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ServiceProvider"> | number
    description?: StringNullableWithAggregatesFilter<"ServiceProvider"> | string | null
    address?: StringWithAggregatesFilter<"ServiceProvider"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ServiceProvider"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ServiceProvider"> | Date | string
    userId?: IntWithAggregatesFilter<"ServiceProvider"> | number
    companyType?: EnumCompanyTypeWithAggregatesFilter<"ServiceProvider"> | $Enums.CompanyType
    industry?: StringNullableWithAggregatesFilter<"ServiceProvider"> | string | null
    licenseNo?: StringNullableWithAggregatesFilter<"ServiceProvider"> | string | null
    logo?: StringNullableWithAggregatesFilter<"ServiceProvider"> | string | null
    taxId?: StringWithAggregatesFilter<"ServiceProvider"> | string
    verificationStatus?: EnumVerificationStatusWithAggregatesFilter<"ServiceProvider"> | $Enums.VerificationStatus
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"ServiceProvider"> | Date | string | null
    verifiedById?: IntNullableWithAggregatesFilter<"ServiceProvider"> | number | null
  }

  export type ServiceProviderTranslationWhereInput = {
    AND?: ServiceProviderTranslationWhereInput | ServiceProviderTranslationWhereInput[]
    OR?: ServiceProviderTranslationWhereInput[]
    NOT?: ServiceProviderTranslationWhereInput | ServiceProviderTranslationWhereInput[]
    id?: IntFilter<"ServiceProviderTranslation"> | number
    providerId?: IntFilter<"ServiceProviderTranslation"> | number
    languageId?: StringFilter<"ServiceProviderTranslation"> | string
    name?: StringFilter<"ServiceProviderTranslation"> | string
    description?: StringNullableFilter<"ServiceProviderTranslation"> | string | null
    createdAt?: DateTimeFilter<"ServiceProviderTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceProviderTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceProviderTranslation"> | Date | string | null
    Language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
  }

  export type ServiceProviderTranslationOrderByWithRelationInput = {
    id?: SortOrder
    providerId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    Language?: LanguageOrderByWithRelationInput
    ServiceProvider?: ServiceProviderOrderByWithRelationInput
  }

  export type ServiceProviderTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ServiceProviderTranslationWhereInput | ServiceProviderTranslationWhereInput[]
    OR?: ServiceProviderTranslationWhereInput[]
    NOT?: ServiceProviderTranslationWhereInput | ServiceProviderTranslationWhereInput[]
    providerId?: IntFilter<"ServiceProviderTranslation"> | number
    languageId?: StringFilter<"ServiceProviderTranslation"> | string
    name?: StringFilter<"ServiceProviderTranslation"> | string
    description?: StringNullableFilter<"ServiceProviderTranslation"> | string | null
    createdAt?: DateTimeFilter<"ServiceProviderTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceProviderTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceProviderTranslation"> | Date | string | null
    Language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
  }, "id">

  export type ServiceProviderTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    providerId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ServiceProviderTranslationCountOrderByAggregateInput
    _avg?: ServiceProviderTranslationAvgOrderByAggregateInput
    _max?: ServiceProviderTranslationMaxOrderByAggregateInput
    _min?: ServiceProviderTranslationMinOrderByAggregateInput
    _sum?: ServiceProviderTranslationSumOrderByAggregateInput
  }

  export type ServiceProviderTranslationScalarWhereWithAggregatesInput = {
    AND?: ServiceProviderTranslationScalarWhereWithAggregatesInput | ServiceProviderTranslationScalarWhereWithAggregatesInput[]
    OR?: ServiceProviderTranslationScalarWhereWithAggregatesInput[]
    NOT?: ServiceProviderTranslationScalarWhereWithAggregatesInput | ServiceProviderTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ServiceProviderTranslation"> | number
    providerId?: IntWithAggregatesFilter<"ServiceProviderTranslation"> | number
    languageId?: StringWithAggregatesFilter<"ServiceProviderTranslation"> | string
    name?: StringWithAggregatesFilter<"ServiceProviderTranslation"> | string
    description?: StringNullableWithAggregatesFilter<"ServiceProviderTranslation"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ServiceProviderTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ServiceProviderTranslation"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ServiceProviderTranslation"> | Date | string | null
  }

  export type ServiceTranslationWhereInput = {
    AND?: ServiceTranslationWhereInput | ServiceTranslationWhereInput[]
    OR?: ServiceTranslationWhereInput[]
    NOT?: ServiceTranslationWhereInput | ServiceTranslationWhereInput[]
    id?: IntFilter<"ServiceTranslation"> | number
    serviceId?: IntFilter<"ServiceTranslation"> | number
    languageId?: StringFilter<"ServiceTranslation"> | string
    name?: StringFilter<"ServiceTranslation"> | string
    description?: StringFilter<"ServiceTranslation"> | string
    createdAt?: DateTimeFilter<"ServiceTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceTranslation"> | Date | string | null
    Language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
  }

  export type ServiceTranslationOrderByWithRelationInput = {
    id?: SortOrder
    serviceId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    Language?: LanguageOrderByWithRelationInput
    Service?: ServiceOrderByWithRelationInput
  }

  export type ServiceTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ServiceTranslationWhereInput | ServiceTranslationWhereInput[]
    OR?: ServiceTranslationWhereInput[]
    NOT?: ServiceTranslationWhereInput | ServiceTranslationWhereInput[]
    serviceId?: IntFilter<"ServiceTranslation"> | number
    languageId?: StringFilter<"ServiceTranslation"> | string
    name?: StringFilter<"ServiceTranslation"> | string
    description?: StringFilter<"ServiceTranslation"> | string
    createdAt?: DateTimeFilter<"ServiceTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceTranslation"> | Date | string | null
    Language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
  }, "id">

  export type ServiceTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    serviceId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ServiceTranslationCountOrderByAggregateInput
    _avg?: ServiceTranslationAvgOrderByAggregateInput
    _max?: ServiceTranslationMaxOrderByAggregateInput
    _min?: ServiceTranslationMinOrderByAggregateInput
    _sum?: ServiceTranslationSumOrderByAggregateInput
  }

  export type ServiceTranslationScalarWhereWithAggregatesInput = {
    AND?: ServiceTranslationScalarWhereWithAggregatesInput | ServiceTranslationScalarWhereWithAggregatesInput[]
    OR?: ServiceTranslationScalarWhereWithAggregatesInput[]
    NOT?: ServiceTranslationScalarWhereWithAggregatesInput | ServiceTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ServiceTranslation"> | number
    serviceId?: IntWithAggregatesFilter<"ServiceTranslation"> | number
    languageId?: StringWithAggregatesFilter<"ServiceTranslation"> | string
    name?: StringWithAggregatesFilter<"ServiceTranslation"> | string
    description?: StringWithAggregatesFilter<"ServiceTranslation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ServiceTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ServiceTranslation"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ServiceTranslation"> | Date | string | null
  }

  export type StaffWhereInput = {
    AND?: StaffWhereInput | StaffWhereInput[]
    OR?: StaffWhereInput[]
    NOT?: StaffWhereInput | StaffWhereInput[]
    id?: IntFilter<"Staff"> | number
    userId?: IntFilter<"Staff"> | number
    providerId?: IntFilter<"Staff"> | number
    createdAt?: DateTimeFilter<"Staff"> | Date | string
    updatedAt?: DateTimeFilter<"Staff"> | Date | string
    isActive?: BoolFilter<"Staff"> | boolean
    Booking_Booking_staffIdToStaff?: XOR<BookingNullableScalarRelationFilter, BookingWhereInput> | null
    InspectionReport?: InspectionReportListRelationFilter
    Review?: ReviewListRelationFilter
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    StaffCategory?: StaffCategoryListRelationFilter
    WorkLog?: WorkLogListRelationFilter
  }

  export type StaffOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
    Booking_Booking_staffIdToStaff?: BookingOrderByWithRelationInput
    InspectionReport?: InspectionReportOrderByRelationAggregateInput
    Review?: ReviewOrderByRelationAggregateInput
    ServiceProvider?: ServiceProviderOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
    StaffCategory?: StaffCategoryOrderByRelationAggregateInput
    WorkLog?: WorkLogOrderByRelationAggregateInput
  }

  export type StaffWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId?: number
    AND?: StaffWhereInput | StaffWhereInput[]
    OR?: StaffWhereInput[]
    NOT?: StaffWhereInput | StaffWhereInput[]
    providerId?: IntFilter<"Staff"> | number
    createdAt?: DateTimeFilter<"Staff"> | Date | string
    updatedAt?: DateTimeFilter<"Staff"> | Date | string
    isActive?: BoolFilter<"Staff"> | boolean
    Booking_Booking_staffIdToStaff?: XOR<BookingNullableScalarRelationFilter, BookingWhereInput> | null
    InspectionReport?: InspectionReportListRelationFilter
    Review?: ReviewListRelationFilter
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    StaffCategory?: StaffCategoryListRelationFilter
    WorkLog?: WorkLogListRelationFilter
  }, "id" | "userId">

  export type StaffOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
    _count?: StaffCountOrderByAggregateInput
    _avg?: StaffAvgOrderByAggregateInput
    _max?: StaffMaxOrderByAggregateInput
    _min?: StaffMinOrderByAggregateInput
    _sum?: StaffSumOrderByAggregateInput
  }

  export type StaffScalarWhereWithAggregatesInput = {
    AND?: StaffScalarWhereWithAggregatesInput | StaffScalarWhereWithAggregatesInput[]
    OR?: StaffScalarWhereWithAggregatesInput[]
    NOT?: StaffScalarWhereWithAggregatesInput | StaffScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Staff"> | number
    userId?: IntWithAggregatesFilter<"Staff"> | number
    providerId?: IntWithAggregatesFilter<"Staff"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Staff"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Staff"> | Date | string
    isActive?: BoolWithAggregatesFilter<"Staff"> | boolean
  }

  export type StaffCategoryWhereInput = {
    AND?: StaffCategoryWhereInput | StaffCategoryWhereInput[]
    OR?: StaffCategoryWhereInput[]
    NOT?: StaffCategoryWhereInput | StaffCategoryWhereInput[]
    staffId?: IntFilter<"StaffCategory"> | number
    categoryId?: IntFilter<"StaffCategory"> | number
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }

  export type StaffCategoryOrderByWithRelationInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
    Category?: CategoryOrderByWithRelationInput
    Staff?: StaffOrderByWithRelationInput
  }

  export type StaffCategoryWhereUniqueInput = Prisma.AtLeast<{
    staffId_categoryId?: StaffCategoryStaffIdCategoryIdCompoundUniqueInput
    AND?: StaffCategoryWhereInput | StaffCategoryWhereInput[]
    OR?: StaffCategoryWhereInput[]
    NOT?: StaffCategoryWhereInput | StaffCategoryWhereInput[]
    staffId?: IntFilter<"StaffCategory"> | number
    categoryId?: IntFilter<"StaffCategory"> | number
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }, "staffId_categoryId">

  export type StaffCategoryOrderByWithAggregationInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
    _count?: StaffCategoryCountOrderByAggregateInput
    _avg?: StaffCategoryAvgOrderByAggregateInput
    _max?: StaffCategoryMaxOrderByAggregateInput
    _min?: StaffCategoryMinOrderByAggregateInput
    _sum?: StaffCategorySumOrderByAggregateInput
  }

  export type StaffCategoryScalarWhereWithAggregatesInput = {
    AND?: StaffCategoryScalarWhereWithAggregatesInput | StaffCategoryScalarWhereWithAggregatesInput[]
    OR?: StaffCategoryScalarWhereWithAggregatesInput[]
    NOT?: StaffCategoryScalarWhereWithAggregatesInput | StaffCategoryScalarWhereWithAggregatesInput[]
    staffId?: IntWithAggregatesFilter<"StaffCategory"> | number
    categoryId?: IntWithAggregatesFilter<"StaffCategory"> | number
  }

  export type TransactionWhereInput = {
    AND?: TransactionWhereInput | TransactionWhereInput[]
    OR?: TransactionWhereInput[]
    NOT?: TransactionWhereInput | TransactionWhereInput[]
    id?: IntFilter<"Transaction"> | number
    bookingId?: IntFilter<"Transaction"> | number
    amount?: FloatFilter<"Transaction"> | number
    status?: EnumPaymentStatusFilter<"Transaction"> | $Enums.PaymentStatus
    method?: EnumPaymentMethodFilter<"Transaction"> | $Enums.PaymentMethod
    paidAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdById?: IntNullableFilter<"Transaction"> | number | null
    updatedById?: IntNullableFilter<"Transaction"> | number | null
    deletedById?: IntNullableFilter<"Transaction"> | number | null
    deletedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    orderCode?: StringNullableFilter<"Transaction"> | string | null
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
  }

  export type TransactionOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    method?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    orderCode?: SortOrderInput | SortOrder
    Booking?: BookingOrderByWithRelationInput
  }

  export type TransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: number
    orderCode?: string
    AND?: TransactionWhereInput | TransactionWhereInput[]
    OR?: TransactionWhereInput[]
    NOT?: TransactionWhereInput | TransactionWhereInput[]
    amount?: FloatFilter<"Transaction"> | number
    status?: EnumPaymentStatusFilter<"Transaction"> | $Enums.PaymentStatus
    method?: EnumPaymentMethodFilter<"Transaction"> | $Enums.PaymentMethod
    paidAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdById?: IntNullableFilter<"Transaction"> | number | null
    updatedById?: IntNullableFilter<"Transaction"> | number | null
    deletedById?: IntNullableFilter<"Transaction"> | number | null
    deletedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
  }, "id" | "bookingId" | "orderCode">

  export type TransactionOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    method?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    orderCode?: SortOrderInput | SortOrder
    _count?: TransactionCountOrderByAggregateInput
    _avg?: TransactionAvgOrderByAggregateInput
    _max?: TransactionMaxOrderByAggregateInput
    _min?: TransactionMinOrderByAggregateInput
    _sum?: TransactionSumOrderByAggregateInput
  }

  export type TransactionScalarWhereWithAggregatesInput = {
    AND?: TransactionScalarWhereWithAggregatesInput | TransactionScalarWhereWithAggregatesInput[]
    OR?: TransactionScalarWhereWithAggregatesInput[]
    NOT?: TransactionScalarWhereWithAggregatesInput | TransactionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transaction"> | number
    bookingId?: IntWithAggregatesFilter<"Transaction"> | number
    amount?: FloatWithAggregatesFilter<"Transaction"> | number
    status?: EnumPaymentStatusWithAggregatesFilter<"Transaction"> | $Enums.PaymentStatus
    method?: EnumPaymentMethodWithAggregatesFilter<"Transaction"> | $Enums.PaymentMethod
    paidAt?: DateTimeNullableWithAggregatesFilter<"Transaction"> | Date | string | null
    createdById?: IntNullableWithAggregatesFilter<"Transaction"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Transaction"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Transaction"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Transaction"> | Date | string
    orderCode?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    totpSecret?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    createdById?: IntNullableFilter<"User"> | number | null
    updatedById?: IntNullableFilter<"User"> | number | null
    deletedById?: IntNullableFilter<"User"> | number | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    Category_Category_createdByIdToUser?: CategoryListRelationFilter
    Category_Category_deletedByIdToUser?: CategoryListRelationFilter
    Category_Category_updatedByIdToUser?: CategoryListRelationFilter
    CustomerProfile?: XOR<CustomerProfileNullableScalarRelationFilter, CustomerProfileWhereInput> | null
    Device?: DeviceListRelationFilter
    Language_Language_createdByIdToUser?: LanguageListRelationFilter
    Language_Language_deletedByIdToUser?: LanguageListRelationFilter
    Language_Language_updatedByIdToUser?: LanguageListRelationFilter
    Notification?: NotificationListRelationFilter
    Permission_Permission_createdByIdToUser?: PermissionListRelationFilter
    Permission_Permission_deletedByIdToUser?: PermissionListRelationFilter
    Permission_Permission_updatedByIdToUser?: PermissionListRelationFilter
    RefreshToken?: RefreshTokenListRelationFilter
    Role_Role_createdByIdToUser?: RoleListRelationFilter
    Role_Role_deletedByIdToUser?: RoleListRelationFilter
    Role_Role_updatedByIdToUser?: RoleListRelationFilter
    Service_Service_createdByIdToUser?: ServiceListRelationFilter
    Service_Service_deletedByIdToUser?: ServiceListRelationFilter
    Service_Service_updatedByIdToUser?: ServiceListRelationFilter
    ServiceProvider_ServiceProvider_userIdToUser?: XOR<ServiceProviderNullableScalarRelationFilter, ServiceProviderWhereInput> | null
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderListRelationFilter
    Staff?: XOR<StaffNullableScalarRelationFilter, StaffWhereInput> | null
    User_User_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    other_User_User_createdByIdToUser?: UserListRelationFilter
    User_User_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    other_User_User_deletedByIdToUser?: UserListRelationFilter
    User_User_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    other_User_User_updatedByIdToUser?: UserListRelationFilter
    Role_UserRoles?: RoleListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    avatar?: SortOrderInput | SortOrder
    totpSecret?: SortOrderInput | SortOrder
    status?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Category_Category_createdByIdToUser?: CategoryOrderByRelationAggregateInput
    Category_Category_deletedByIdToUser?: CategoryOrderByRelationAggregateInput
    Category_Category_updatedByIdToUser?: CategoryOrderByRelationAggregateInput
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
    Device?: DeviceOrderByRelationAggregateInput
    Language_Language_createdByIdToUser?: LanguageOrderByRelationAggregateInput
    Language_Language_deletedByIdToUser?: LanguageOrderByRelationAggregateInput
    Language_Language_updatedByIdToUser?: LanguageOrderByRelationAggregateInput
    Notification?: NotificationOrderByRelationAggregateInput
    Permission_Permission_createdByIdToUser?: PermissionOrderByRelationAggregateInput
    Permission_Permission_deletedByIdToUser?: PermissionOrderByRelationAggregateInput
    Permission_Permission_updatedByIdToUser?: PermissionOrderByRelationAggregateInput
    RefreshToken?: RefreshTokenOrderByRelationAggregateInput
    Role_Role_createdByIdToUser?: RoleOrderByRelationAggregateInput
    Role_Role_deletedByIdToUser?: RoleOrderByRelationAggregateInput
    Role_Role_updatedByIdToUser?: RoleOrderByRelationAggregateInput
    Service_Service_createdByIdToUser?: ServiceOrderByRelationAggregateInput
    Service_Service_deletedByIdToUser?: ServiceOrderByRelationAggregateInput
    Service_Service_updatedByIdToUser?: ServiceOrderByRelationAggregateInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderOrderByWithRelationInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderOrderByRelationAggregateInput
    Staff?: StaffOrderByWithRelationInput
    User_User_createdByIdToUser?: UserOrderByWithRelationInput
    other_User_User_createdByIdToUser?: UserOrderByRelationAggregateInput
    User_User_deletedByIdToUser?: UserOrderByWithRelationInput
    other_User_User_deletedByIdToUser?: UserOrderByRelationAggregateInput
    User_User_updatedByIdToUser?: UserOrderByWithRelationInput
    other_User_User_updatedByIdToUser?: UserOrderByRelationAggregateInput
    Role_UserRoles?: RoleOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    totpSecret?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    createdById?: IntNullableFilter<"User"> | number | null
    updatedById?: IntNullableFilter<"User"> | number | null
    deletedById?: IntNullableFilter<"User"> | number | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    Category_Category_createdByIdToUser?: CategoryListRelationFilter
    Category_Category_deletedByIdToUser?: CategoryListRelationFilter
    Category_Category_updatedByIdToUser?: CategoryListRelationFilter
    CustomerProfile?: XOR<CustomerProfileNullableScalarRelationFilter, CustomerProfileWhereInput> | null
    Device?: DeviceListRelationFilter
    Language_Language_createdByIdToUser?: LanguageListRelationFilter
    Language_Language_deletedByIdToUser?: LanguageListRelationFilter
    Language_Language_updatedByIdToUser?: LanguageListRelationFilter
    Notification?: NotificationListRelationFilter
    Permission_Permission_createdByIdToUser?: PermissionListRelationFilter
    Permission_Permission_deletedByIdToUser?: PermissionListRelationFilter
    Permission_Permission_updatedByIdToUser?: PermissionListRelationFilter
    RefreshToken?: RefreshTokenListRelationFilter
    Role_Role_createdByIdToUser?: RoleListRelationFilter
    Role_Role_deletedByIdToUser?: RoleListRelationFilter
    Role_Role_updatedByIdToUser?: RoleListRelationFilter
    Service_Service_createdByIdToUser?: ServiceListRelationFilter
    Service_Service_deletedByIdToUser?: ServiceListRelationFilter
    Service_Service_updatedByIdToUser?: ServiceListRelationFilter
    ServiceProvider_ServiceProvider_userIdToUser?: XOR<ServiceProviderNullableScalarRelationFilter, ServiceProviderWhereInput> | null
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderListRelationFilter
    Staff?: XOR<StaffNullableScalarRelationFilter, StaffWhereInput> | null
    User_User_createdByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    other_User_User_createdByIdToUser?: UserListRelationFilter
    User_User_deletedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    other_User_User_deletedByIdToUser?: UserListRelationFilter
    User_User_updatedByIdToUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    other_User_User_updatedByIdToUser?: UserListRelationFilter
    Role_UserRoles?: RoleListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    avatar?: SortOrderInput | SortOrder
    totpSecret?: SortOrderInput | SortOrder
    status?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    phone?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    totpSecret?: StringNullableWithAggregatesFilter<"User"> | string | null
    status?: EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
    createdById?: IntNullableWithAggregatesFilter<"User"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"User"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"User"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type VerificationCodeWhereInput = {
    AND?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    OR?: VerificationCodeWhereInput[]
    NOT?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    id?: IntFilter<"VerificationCode"> | number
    email?: StringFilter<"VerificationCode"> | string
    code?: StringFilter<"VerificationCode"> | string
    type?: EnumVerificationCodeTypeFilter<"VerificationCode"> | $Enums.VerificationCodeType
    expiresAt?: DateTimeFilter<"VerificationCode"> | Date | string
    createdAt?: DateTimeFilter<"VerificationCode"> | Date | string
  }

  export type VerificationCodeOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email_code_type?: VerificationCodeEmailCodeTypeCompoundUniqueInput
    AND?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    OR?: VerificationCodeWhereInput[]
    NOT?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    email?: StringFilter<"VerificationCode"> | string
    code?: StringFilter<"VerificationCode"> | string
    type?: EnumVerificationCodeTypeFilter<"VerificationCode"> | $Enums.VerificationCodeType
    expiresAt?: DateTimeFilter<"VerificationCode"> | Date | string
    createdAt?: DateTimeFilter<"VerificationCode"> | Date | string
  }, "id" | "email_code_type">

  export type VerificationCodeOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: VerificationCodeCountOrderByAggregateInput
    _avg?: VerificationCodeAvgOrderByAggregateInput
    _max?: VerificationCodeMaxOrderByAggregateInput
    _min?: VerificationCodeMinOrderByAggregateInput
    _sum?: VerificationCodeSumOrderByAggregateInput
  }

  export type VerificationCodeScalarWhereWithAggregatesInput = {
    AND?: VerificationCodeScalarWhereWithAggregatesInput | VerificationCodeScalarWhereWithAggregatesInput[]
    OR?: VerificationCodeScalarWhereWithAggregatesInput[]
    NOT?: VerificationCodeScalarWhereWithAggregatesInput | VerificationCodeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VerificationCode"> | number
    email?: StringWithAggregatesFilter<"VerificationCode"> | string
    code?: StringWithAggregatesFilter<"VerificationCode"> | string
    type?: EnumVerificationCodeTypeWithAggregatesFilter<"VerificationCode"> | $Enums.VerificationCodeType
    expiresAt?: DateTimeWithAggregatesFilter<"VerificationCode"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"VerificationCode"> | Date | string
  }

  export type WorkLogWhereInput = {
    AND?: WorkLogWhereInput | WorkLogWhereInput[]
    OR?: WorkLogWhereInput[]
    NOT?: WorkLogWhereInput | WorkLogWhereInput[]
    id?: IntFilter<"WorkLog"> | number
    staffId?: IntFilter<"WorkLog"> | number
    bookingId?: IntFilter<"WorkLog"> | number
    checkIn?: DateTimeNullableFilter<"WorkLog"> | Date | string | null
    checkOut?: DateTimeNullableFilter<"WorkLog"> | Date | string | null
    note?: StringNullableFilter<"WorkLog"> | string | null
    createdAt?: DateTimeFilter<"WorkLog"> | Date | string
    updatedAt?: DateTimeFilter<"WorkLog"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }

  export type WorkLogOrderByWithRelationInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
    checkIn?: SortOrderInput | SortOrder
    checkOut?: SortOrderInput | SortOrder
    note?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Booking?: BookingOrderByWithRelationInput
    Staff?: StaffOrderByWithRelationInput
  }

  export type WorkLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: WorkLogWhereInput | WorkLogWhereInput[]
    OR?: WorkLogWhereInput[]
    NOT?: WorkLogWhereInput | WorkLogWhereInput[]
    staffId?: IntFilter<"WorkLog"> | number
    bookingId?: IntFilter<"WorkLog"> | number
    checkIn?: DateTimeNullableFilter<"WorkLog"> | Date | string | null
    checkOut?: DateTimeNullableFilter<"WorkLog"> | Date | string | null
    note?: StringNullableFilter<"WorkLog"> | string | null
    createdAt?: DateTimeFilter<"WorkLog"> | Date | string
    updatedAt?: DateTimeFilter<"WorkLog"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }, "id">

  export type WorkLogOrderByWithAggregationInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
    checkIn?: SortOrderInput | SortOrder
    checkOut?: SortOrderInput | SortOrder
    note?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: WorkLogCountOrderByAggregateInput
    _avg?: WorkLogAvgOrderByAggregateInput
    _max?: WorkLogMaxOrderByAggregateInput
    _min?: WorkLogMinOrderByAggregateInput
    _sum?: WorkLogSumOrderByAggregateInput
  }

  export type WorkLogScalarWhereWithAggregatesInput = {
    AND?: WorkLogScalarWhereWithAggregatesInput | WorkLogScalarWhereWithAggregatesInput[]
    OR?: WorkLogScalarWhereWithAggregatesInput[]
    NOT?: WorkLogScalarWhereWithAggregatesInput | WorkLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"WorkLog"> | number
    staffId?: IntWithAggregatesFilter<"WorkLog"> | number
    bookingId?: IntWithAggregatesFilter<"WorkLog"> | number
    checkIn?: DateTimeNullableWithAggregatesFilter<"WorkLog"> | Date | string | null
    checkOut?: DateTimeNullableWithAggregatesFilter<"WorkLog"> | Date | string | null
    note?: StringNullableWithAggregatesFilter<"WorkLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"WorkLog"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"WorkLog"> | Date | string
  }

  export type InspectionReportWhereInput = {
    AND?: InspectionReportWhereInput | InspectionReportWhereInput[]
    OR?: InspectionReportWhereInput[]
    NOT?: InspectionReportWhereInput | InspectionReportWhereInput[]
    id?: IntFilter<"InspectionReport"> | number
    bookingId?: IntFilter<"InspectionReport"> | number
    staffId?: IntFilter<"InspectionReport"> | number
    estimatedTime?: IntNullableFilter<"InspectionReport"> | number | null
    note?: StringNullableFilter<"InspectionReport"> | string | null
    images?: StringNullableListFilter<"InspectionReport">
    createdAt?: DateTimeFilter<"InspectionReport"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }

  export type InspectionReportOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrderInput | SortOrder
    note?: SortOrderInput | SortOrder
    images?: SortOrder
    createdAt?: SortOrder
    Booking?: BookingOrderByWithRelationInput
    Staff?: StaffOrderByWithRelationInput
  }

  export type InspectionReportWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    bookingId?: number
    AND?: InspectionReportWhereInput | InspectionReportWhereInput[]
    OR?: InspectionReportWhereInput[]
    NOT?: InspectionReportWhereInput | InspectionReportWhereInput[]
    staffId?: IntFilter<"InspectionReport"> | number
    estimatedTime?: IntNullableFilter<"InspectionReport"> | number | null
    note?: StringNullableFilter<"InspectionReport"> | string | null
    images?: StringNullableListFilter<"InspectionReport">
    createdAt?: DateTimeFilter<"InspectionReport"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
    Staff?: XOR<StaffScalarRelationFilter, StaffWhereInput>
  }, "id" | "bookingId">

  export type InspectionReportOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrderInput | SortOrder
    note?: SortOrderInput | SortOrder
    images?: SortOrder
    createdAt?: SortOrder
    _count?: InspectionReportCountOrderByAggregateInput
    _avg?: InspectionReportAvgOrderByAggregateInput
    _max?: InspectionReportMaxOrderByAggregateInput
    _min?: InspectionReportMinOrderByAggregateInput
    _sum?: InspectionReportSumOrderByAggregateInput
  }

  export type InspectionReportScalarWhereWithAggregatesInput = {
    AND?: InspectionReportScalarWhereWithAggregatesInput | InspectionReportScalarWhereWithAggregatesInput[]
    OR?: InspectionReportScalarWhereWithAggregatesInput[]
    NOT?: InspectionReportScalarWhereWithAggregatesInput | InspectionReportScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"InspectionReport"> | number
    bookingId?: IntWithAggregatesFilter<"InspectionReport"> | number
    staffId?: IntWithAggregatesFilter<"InspectionReport"> | number
    estimatedTime?: IntNullableWithAggregatesFilter<"InspectionReport"> | number | null
    note?: StringNullableWithAggregatesFilter<"InspectionReport"> | string | null
    images?: StringNullableListFilter<"InspectionReport">
    createdAt?: DateTimeWithAggregatesFilter<"InspectionReport"> | Date | string
  }

  export type ProposedServiceWhereInput = {
    AND?: ProposedServiceWhereInput | ProposedServiceWhereInput[]
    OR?: ProposedServiceWhereInput[]
    NOT?: ProposedServiceWhereInput | ProposedServiceWhereInput[]
    id?: IntFilter<"ProposedService"> | number
    bookingId?: IntFilter<"ProposedService"> | number
    serviceId?: IntFilter<"ProposedService"> | number
    quantity?: IntFilter<"ProposedService"> | number
    price?: FloatFilter<"ProposedService"> | number
    notes?: StringNullableFilter<"ProposedService"> | string | null
    createdAt?: DateTimeFilter<"ProposedService"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
  }

  export type ProposedServiceOrderByWithRelationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    Booking?: BookingOrderByWithRelationInput
    Service?: ServiceOrderByWithRelationInput
  }

  export type ProposedServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProposedServiceWhereInput | ProposedServiceWhereInput[]
    OR?: ProposedServiceWhereInput[]
    NOT?: ProposedServiceWhereInput | ProposedServiceWhereInput[]
    bookingId?: IntFilter<"ProposedService"> | number
    serviceId?: IntFilter<"ProposedService"> | number
    quantity?: IntFilter<"ProposedService"> | number
    price?: FloatFilter<"ProposedService"> | number
    notes?: StringNullableFilter<"ProposedService"> | string | null
    createdAt?: DateTimeFilter<"ProposedService"> | Date | string
    Booking?: XOR<BookingScalarRelationFilter, BookingWhereInput>
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
  }, "id">

  export type ProposedServiceOrderByWithAggregationInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ProposedServiceCountOrderByAggregateInput
    _avg?: ProposedServiceAvgOrderByAggregateInput
    _max?: ProposedServiceMaxOrderByAggregateInput
    _min?: ProposedServiceMinOrderByAggregateInput
    _sum?: ProposedServiceSumOrderByAggregateInput
  }

  export type ProposedServiceScalarWhereWithAggregatesInput = {
    AND?: ProposedServiceScalarWhereWithAggregatesInput | ProposedServiceScalarWhereWithAggregatesInput[]
    OR?: ProposedServiceScalarWhereWithAggregatesInput[]
    NOT?: ProposedServiceScalarWhereWithAggregatesInput | ProposedServiceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProposedService"> | number
    bookingId?: IntWithAggregatesFilter<"ProposedService"> | number
    serviceId?: IntWithAggregatesFilter<"ProposedService"> | number
    quantity?: IntWithAggregatesFilter<"ProposedService"> | number
    price?: FloatWithAggregatesFilter<"ProposedService"> | number
    notes?: StringNullableWithAggregatesFilter<"ProposedService"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProposedService"> | Date | string
  }

  export type ServiceItemWhereInput = {
    AND?: ServiceItemWhereInput | ServiceItemWhereInput[]
    OR?: ServiceItemWhereInput[]
    NOT?: ServiceItemWhereInput | ServiceItemWhereInput[]
    id?: IntFilter<"ServiceItem"> | number
    name?: StringFilter<"ServiceItem"> | string
    unitPrice?: FloatFilter<"ServiceItem"> | number
    warrantyPeriod?: IntNullableFilter<"ServiceItem"> | number | null
    createdAt?: DateTimeFilter<"ServiceItem"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceItem"> | Date | string | null
    updatedAt?: DateTimeFilter<"ServiceItem"> | Date | string
    brand?: StringNullableFilter<"ServiceItem"> | string | null
    description?: StringNullableFilter<"ServiceItem"> | string | null
    isActive?: BoolFilter<"ServiceItem"> | boolean
    model?: StringNullableFilter<"ServiceItem"> | string | null
    stockQuantity?: IntFilter<"ServiceItem"> | number
    unit?: EnumUnitFilter<"ServiceItem"> | $Enums.Unit
    providerId?: IntFilter<"ServiceItem"> | number
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    Service_ServiceItems?: Service_ServiceItemsListRelationFilter
  }

  export type ServiceItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    brand?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    model?: SortOrderInput | SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    providerId?: SortOrder
    ServiceProvider?: ServiceProviderOrderByWithRelationInput
    Service_ServiceItems?: Service_ServiceItemsOrderByRelationAggregateInput
  }

  export type ServiceItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ServiceItemWhereInput | ServiceItemWhereInput[]
    OR?: ServiceItemWhereInput[]
    NOT?: ServiceItemWhereInput | ServiceItemWhereInput[]
    name?: StringFilter<"ServiceItem"> | string
    unitPrice?: FloatFilter<"ServiceItem"> | number
    warrantyPeriod?: IntNullableFilter<"ServiceItem"> | number | null
    createdAt?: DateTimeFilter<"ServiceItem"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceItem"> | Date | string | null
    updatedAt?: DateTimeFilter<"ServiceItem"> | Date | string
    brand?: StringNullableFilter<"ServiceItem"> | string | null
    description?: StringNullableFilter<"ServiceItem"> | string | null
    isActive?: BoolFilter<"ServiceItem"> | boolean
    model?: StringNullableFilter<"ServiceItem"> | string | null
    stockQuantity?: IntFilter<"ServiceItem"> | number
    unit?: EnumUnitFilter<"ServiceItem"> | $Enums.Unit
    providerId?: IntFilter<"ServiceItem"> | number
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
    Service_ServiceItems?: Service_ServiceItemsListRelationFilter
  }, "id">

  export type ServiceItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    brand?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    isActive?: SortOrder
    model?: SortOrderInput | SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    providerId?: SortOrder
    _count?: ServiceItemCountOrderByAggregateInput
    _avg?: ServiceItemAvgOrderByAggregateInput
    _max?: ServiceItemMaxOrderByAggregateInput
    _min?: ServiceItemMinOrderByAggregateInput
    _sum?: ServiceItemSumOrderByAggregateInput
  }

  export type ServiceItemScalarWhereWithAggregatesInput = {
    AND?: ServiceItemScalarWhereWithAggregatesInput | ServiceItemScalarWhereWithAggregatesInput[]
    OR?: ServiceItemScalarWhereWithAggregatesInput[]
    NOT?: ServiceItemScalarWhereWithAggregatesInput | ServiceItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ServiceItem"> | number
    name?: StringWithAggregatesFilter<"ServiceItem"> | string
    unitPrice?: FloatWithAggregatesFilter<"ServiceItem"> | number
    warrantyPeriod?: IntNullableWithAggregatesFilter<"ServiceItem"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"ServiceItem"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ServiceItem"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ServiceItem"> | Date | string
    brand?: StringNullableWithAggregatesFilter<"ServiceItem"> | string | null
    description?: StringNullableWithAggregatesFilter<"ServiceItem"> | string | null
    isActive?: BoolWithAggregatesFilter<"ServiceItem"> | boolean
    model?: StringNullableWithAggregatesFilter<"ServiceItem"> | string | null
    stockQuantity?: IntWithAggregatesFilter<"ServiceItem"> | number
    unit?: EnumUnitWithAggregatesFilter<"ServiceItem"> | $Enums.Unit
    providerId?: IntWithAggregatesFilter<"ServiceItem"> | number
  }

  export type ServiceRequestWhereInput = {
    AND?: ServiceRequestWhereInput | ServiceRequestWhereInput[]
    OR?: ServiceRequestWhereInput[]
    NOT?: ServiceRequestWhereInput | ServiceRequestWhereInput[]
    id?: IntFilter<"ServiceRequest"> | number
    customerId?: IntFilter<"ServiceRequest"> | number
    providerId?: IntFilter<"ServiceRequest"> | number
    note?: StringNullableFilter<"ServiceRequest"> | string | null
    preferredDate?: DateTimeFilter<"ServiceRequest"> | Date | string
    status?: EnumRequestStatusFilter<"ServiceRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"ServiceRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceRequest"> | Date | string
    location?: StringFilter<"ServiceRequest"> | string
    phoneNumber?: StringFilter<"ServiceRequest"> | string
    categoryId?: IntFilter<"ServiceRequest"> | number
    Booking?: XOR<BookingNullableScalarRelationFilter, BookingWhereInput> | null
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
  }

  export type ServiceRequestOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    note?: SortOrderInput | SortOrder
    preferredDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    phoneNumber?: SortOrder
    categoryId?: SortOrder
    Booking?: BookingOrderByWithRelationInput
    Category?: CategoryOrderByWithRelationInput
    CustomerProfile?: CustomerProfileOrderByWithRelationInput
    ServiceProvider?: ServiceProviderOrderByWithRelationInput
  }

  export type ServiceRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ServiceRequestWhereInput | ServiceRequestWhereInput[]
    OR?: ServiceRequestWhereInput[]
    NOT?: ServiceRequestWhereInput | ServiceRequestWhereInput[]
    customerId?: IntFilter<"ServiceRequest"> | number
    providerId?: IntFilter<"ServiceRequest"> | number
    note?: StringNullableFilter<"ServiceRequest"> | string | null
    preferredDate?: DateTimeFilter<"ServiceRequest"> | Date | string
    status?: EnumRequestStatusFilter<"ServiceRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"ServiceRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceRequest"> | Date | string
    location?: StringFilter<"ServiceRequest"> | string
    phoneNumber?: StringFilter<"ServiceRequest"> | string
    categoryId?: IntFilter<"ServiceRequest"> | number
    Booking?: XOR<BookingNullableScalarRelationFilter, BookingWhereInput> | null
    Category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    CustomerProfile?: XOR<CustomerProfileScalarRelationFilter, CustomerProfileWhereInput>
    ServiceProvider?: XOR<ServiceProviderScalarRelationFilter, ServiceProviderWhereInput>
  }, "id">

  export type ServiceRequestOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    note?: SortOrderInput | SortOrder
    preferredDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    phoneNumber?: SortOrder
    categoryId?: SortOrder
    _count?: ServiceRequestCountOrderByAggregateInput
    _avg?: ServiceRequestAvgOrderByAggregateInput
    _max?: ServiceRequestMaxOrderByAggregateInput
    _min?: ServiceRequestMinOrderByAggregateInput
    _sum?: ServiceRequestSumOrderByAggregateInput
  }

  export type ServiceRequestScalarWhereWithAggregatesInput = {
    AND?: ServiceRequestScalarWhereWithAggregatesInput | ServiceRequestScalarWhereWithAggregatesInput[]
    OR?: ServiceRequestScalarWhereWithAggregatesInput[]
    NOT?: ServiceRequestScalarWhereWithAggregatesInput | ServiceRequestScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ServiceRequest"> | number
    customerId?: IntWithAggregatesFilter<"ServiceRequest"> | number
    providerId?: IntWithAggregatesFilter<"ServiceRequest"> | number
    note?: StringNullableWithAggregatesFilter<"ServiceRequest"> | string | null
    preferredDate?: DateTimeWithAggregatesFilter<"ServiceRequest"> | Date | string
    status?: EnumRequestStatusWithAggregatesFilter<"ServiceRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeWithAggregatesFilter<"ServiceRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ServiceRequest"> | Date | string
    location?: StringWithAggregatesFilter<"ServiceRequest"> | string
    phoneNumber?: StringWithAggregatesFilter<"ServiceRequest"> | string
    categoryId?: IntWithAggregatesFilter<"ServiceRequest"> | number
  }

  export type Service_ServiceItemsWhereInput = {
    AND?: Service_ServiceItemsWhereInput | Service_ServiceItemsWhereInput[]
    OR?: Service_ServiceItemsWhereInput[]
    NOT?: Service_ServiceItemsWhereInput | Service_ServiceItemsWhereInput[]
    serviceId?: IntFilter<"Service_ServiceItems"> | number
    serviceItemId?: IntFilter<"Service_ServiceItems"> | number
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    ServiceItem?: XOR<ServiceItemScalarRelationFilter, ServiceItemWhereInput>
  }

  export type Service_ServiceItemsOrderByWithRelationInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
    Service?: ServiceOrderByWithRelationInput
    ServiceItem?: ServiceItemOrderByWithRelationInput
  }

  export type Service_ServiceItemsWhereUniqueInput = Prisma.AtLeast<{
    serviceId_serviceItemId?: Service_ServiceItemsServiceIdServiceItemIdCompoundUniqueInput
    AND?: Service_ServiceItemsWhereInput | Service_ServiceItemsWhereInput[]
    OR?: Service_ServiceItemsWhereInput[]
    NOT?: Service_ServiceItemsWhereInput | Service_ServiceItemsWhereInput[]
    serviceId?: IntFilter<"Service_ServiceItems"> | number
    serviceItemId?: IntFilter<"Service_ServiceItems"> | number
    Service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    ServiceItem?: XOR<ServiceItemScalarRelationFilter, ServiceItemWhereInput>
  }, "serviceId_serviceItemId">

  export type Service_ServiceItemsOrderByWithAggregationInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
    _count?: Service_ServiceItemsCountOrderByAggregateInput
    _avg?: Service_ServiceItemsAvgOrderByAggregateInput
    _max?: Service_ServiceItemsMaxOrderByAggregateInput
    _min?: Service_ServiceItemsMinOrderByAggregateInput
    _sum?: Service_ServiceItemsSumOrderByAggregateInput
  }

  export type Service_ServiceItemsScalarWhereWithAggregatesInput = {
    AND?: Service_ServiceItemsScalarWhereWithAggregatesInput | Service_ServiceItemsScalarWhereWithAggregatesInput[]
    OR?: Service_ServiceItemsScalarWhereWithAggregatesInput[]
    NOT?: Service_ServiceItemsScalarWhereWithAggregatesInput | Service_ServiceItemsScalarWhereWithAggregatesInput[]
    serviceId?: IntWithAggregatesFilter<"Service_ServiceItems"> | number
    serviceItemId?: IntWithAggregatesFilter<"Service_ServiceItems"> | number
  }

  export type BookingCreateInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingUpdateInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type BookingCreateManyInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
  }

  export type BookingUpdateManyMutationInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BookingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoryCreateInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CategoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationCreateInput = {
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Category: CategoryCreateNestedOneWithoutCategoryTranslationInput
    Language: LanguageCreateNestedOneWithoutCategoryTranslationInput
  }

  export type CategoryTranslationUncheckedCreateInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type CategoryTranslationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Category?: CategoryUpdateOneRequiredWithoutCategoryTranslationNestedInput
    Language?: LanguageUpdateOneRequiredWithoutCategoryTranslationNestedInput
  }

  export type CategoryTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoryTranslationCreateManyInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type CategoryTranslationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoryTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChatMessageCreateInput = {
    sender: string
    message: string
    sentAt?: Date | string
    isRead?: boolean
    CustomerProfile: CustomerProfileCreateNestedOneWithoutChatMessageInput
  }

  export type ChatMessageUncheckedCreateInput = {
    id?: number
    customerId: number
    sender: string
    message: string
    sentAt?: Date | string
    isRead?: boolean
  }

  export type ChatMessageUpdateInput = {
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutChatMessageNestedInput
  }

  export type ChatMessageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ChatMessageCreateManyInput = {
    id?: number
    customerId: number
    sender: string
    message: string
    sentAt?: Date | string
    isRead?: boolean
  }

  export type ChatMessageUpdateManyMutationInput = {
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ChatMessageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerProfileCreateInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUpdateInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileCreateManyInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CustomerProfileUpdateManyMutationInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerProfileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceCreateInput = {
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
    User: UserCreateNestedOneWithoutDeviceInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUncheckedCreateInput = {
    id?: number
    userId: number
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUpdateInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneRequiredWithoutDeviceNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceCreateManyInput = {
    id?: number
    userId: number
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
  }

  export type DeviceUpdateManyMutationInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeviceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LanguageCreateInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    User_Language_createdByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput
    User_Language_deletedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput
    User_Language_updatedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    User_Language_createdByIdToUser?: UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput
    User_Language_deletedByIdToUser?: UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput
    User_Language_updatedByIdToUser?: UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageCreateManyInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type LanguageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    content: string
    isRead?: boolean
    createdAt?: Date | string
    User: UserCreateNestedOneWithoutNotificationInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: number
    userId: number
    content: string
    isRead?: boolean
    createdAt?: Date | string
  }

  export type NotificationUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutNotificationNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: number
    userId: number
    content: string
    isRead?: boolean
    createdAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PackageRecommendationCreateInput = {
    packageId: number
    reason?: string | null
    accepted?: boolean
    recommendedAt?: Date | string
    acceptedAt?: Date | string | null
    CustomerProfile: CustomerProfileCreateNestedOneWithoutPackageRecommendationInput
  }

  export type PackageRecommendationUncheckedCreateInput = {
    id?: number
    customerId: number
    packageId: number
    reason?: string | null
    accepted?: boolean
    recommendedAt?: Date | string
    acceptedAt?: Date | string | null
  }

  export type PackageRecommendationUpdateInput = {
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutPackageRecommendationNestedInput
  }

  export type PackageRecommendationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PackageRecommendationCreateManyInput = {
    id?: number
    customerId: number
    packageId: number
    reason?: string | null
    accepted?: boolean
    recommendedAt?: Date | string
    acceptedAt?: Date | string | null
  }

  export type PackageRecommendationUpdateManyMutationInput = {
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PackageRecommendationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentTransactionCreateInput = {
    gateway: string
    transactionDate?: Date | string
    accountNumber?: string | null
    subAccount?: string | null
    amountIn?: number
    amountOut?: number
    accumulated?: number
    referenceNumber?: string | null
    transactionContent?: string | null
    body?: string | null
    createdAt?: Date | string
  }

  export type PaymentTransactionUncheckedCreateInput = {
    id?: number
    gateway: string
    transactionDate?: Date | string
    accountNumber?: string | null
    subAccount?: string | null
    amountIn?: number
    amountOut?: number
    accumulated?: number
    referenceNumber?: string | null
    transactionContent?: string | null
    body?: string | null
    createdAt?: Date | string
  }

  export type PaymentTransactionUpdateInput = {
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionCreateManyInput = {
    id?: number
    gateway: string
    transactionDate?: Date | string
    accountNumber?: string | null
    subAccount?: string | null
    amountIn?: number
    amountOut?: number
    accumulated?: number
    referenceNumber?: string | null
    transactionContent?: string | null
    body?: string | null
    createdAt?: Date | string
  }

  export type PaymentTransactionUpdateManyMutationInput = {
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: NullableStringFieldUpdateOperationsInput | string | null
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionCreateInput = {
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Permission_createdByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_createdByIdToUserInput
    User_Permission_deletedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_deletedByIdToUserInput
    User_Permission_updatedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_updatedByIdToUserInput
    Role?: RoleCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Role?: RoleUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Permission_createdByIdToUser?: UserUpdateOneWithoutPermission_Permission_createdByIdToUserNestedInput
    User_Permission_deletedByIdToUser?: UserUpdateOneWithoutPermission_Permission_deletedByIdToUserNestedInput
    User_Permission_updatedByIdToUser?: UserUpdateOneWithoutPermission_Permission_updatedByIdToUserNestedInput
    Role?: RoleUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type PermissionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RecurringBookingCreateInput = {
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutRecurringBookingInput
    Service: ServiceCreateNestedOneWithoutRecurringBookingInput
  }

  export type RecurringBookingUncheckedCreateInput = {
    id?: number
    customerId: number
    serviceId: number
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RecurringBookingUpdateInput = {
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutRecurringBookingNestedInput
    Service?: ServiceUpdateOneRequiredWithoutRecurringBookingNestedInput
  }

  export type RecurringBookingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RecurringBookingCreateManyInput = {
    id?: number
    customerId: number
    serviceId: number
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RecurringBookingUpdateManyMutationInput = {
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RecurringBookingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    Device: DeviceCreateNestedOneWithoutRefreshTokenInput
    User: UserCreateNestedOneWithoutRefreshTokenInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: number
    token: string
    userId: number
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Device?: DeviceUpdateOneRequiredWithoutRefreshTokenNestedInput
    User?: UserUpdateOneRequiredWithoutRefreshTokenNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    id?: number
    token: string
    userId: number
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    rating: number
    comment: string
    createdAt?: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutReviewInput
    Service: ServiceCreateNestedOneWithoutReviewInput
    Staff: StaffCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: number
    customerId: number
    staffId: number
    serviceId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type ReviewUpdateInput = {
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutReviewNestedInput
    Service?: ServiceUpdateOneRequiredWithoutReviewNestedInput
    Staff?: StaffUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyInput = {
    id?: number
    customerId: number
    staffId: number
    serviceId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type ReviewUpdateManyMutationInput = {
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RewardPointCreateInput = {
    points?: number
    reason?: string | null
    createdAt?: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutRewardPointInput
  }

  export type RewardPointUncheckedCreateInput = {
    id?: number
    customerId: number
    points?: number
    reason?: string | null
    createdAt?: Date | string
  }

  export type RewardPointUpdateInput = {
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutRewardPointNestedInput
  }

  export type RewardPointUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RewardPointCreateManyInput = {
    id?: number
    customerId: number
    points?: number
    reason?: string | null
    createdAt?: Date | string
  }

  export type RewardPointUpdateManyMutationInput = {
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RewardPointUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleCreateInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Role_createdByIdToUser?: UserCreateNestedOneWithoutRole_Role_createdByIdToUserInput
    User_Role_deletedByIdToUser?: UserCreateNestedOneWithoutRole_Role_deletedByIdToUserInput
    User_Role_updatedByIdToUser?: UserCreateNestedOneWithoutRole_Role_updatedByIdToUserInput
    Permission?: PermissionCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Permission?: PermissionUncheckedCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserUncheckedCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Role_createdByIdToUser?: UserUpdateOneWithoutRole_Role_createdByIdToUserNestedInput
    User_Role_deletedByIdToUser?: UserUpdateOneWithoutRole_Role_deletedByIdToUserNestedInput
    User_Role_updatedByIdToUser?: UserUpdateOneWithoutRole_Role_updatedByIdToUserNestedInput
    Permission?: PermissionUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permission?: PermissionUncheckedUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUncheckedUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceCreateInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceUpdateInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceCreateManyInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
  }

  export type ServiceUpdateManyMutationInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceProviderCreateInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUpdateInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderCreateManyInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
  }

  export type ServiceProviderUpdateManyMutationInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceProviderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ServiceProviderTranslationCreateInput = {
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Language: LanguageCreateNestedOneWithoutServiceProviderTranslationInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceProviderTranslationInput
  }

  export type ServiceProviderTranslationUncheckedCreateInput = {
    id?: number
    providerId: number
    languageId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceProviderTranslationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Language?: LanguageUpdateOneRequiredWithoutServiceProviderTranslationNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceProviderTranslationNestedInput
  }

  export type ServiceProviderTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceProviderTranslationCreateManyInput = {
    id?: number
    providerId: number
    languageId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceProviderTranslationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceProviderTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceTranslationCreateInput = {
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Language: LanguageCreateNestedOneWithoutServiceTranslationInput
    Service: ServiceCreateNestedOneWithoutServiceTranslationInput
  }

  export type ServiceTranslationUncheckedCreateInput = {
    id?: number
    serviceId: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceTranslationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Language?: LanguageUpdateOneRequiredWithoutServiceTranslationNestedInput
    Service?: ServiceUpdateOneRequiredWithoutServiceTranslationNestedInput
  }

  export type ServiceTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceTranslationCreateManyInput = {
    id?: number
    serviceId: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceTranslationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StaffCreateInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffUpdateInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type StaffCreateManyInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
  }

  export type StaffUpdateManyMutationInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StaffUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StaffCategoryCreateInput = {
    Category: CategoryCreateNestedOneWithoutStaffCategoryInput
    Staff: StaffCreateNestedOneWithoutStaffCategoryInput
  }

  export type StaffCategoryUncheckedCreateInput = {
    staffId: number
    categoryId: number
  }

  export type StaffCategoryUpdateInput = {
    Category?: CategoryUpdateOneRequiredWithoutStaffCategoryNestedInput
    Staff?: StaffUpdateOneRequiredWithoutStaffCategoryNestedInput
  }

  export type StaffCategoryUncheckedUpdateInput = {
    staffId?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type StaffCategoryCreateManyInput = {
    staffId: number
    categoryId: number
  }

  export type StaffCategoryUpdateManyMutationInput = {

  }

  export type StaffCategoryUncheckedUpdateManyInput = {
    staffId?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type TransactionCreateInput = {
    amount: number
    status: $Enums.PaymentStatus
    method: $Enums.PaymentMethod
    paidAt?: Date | string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    orderCode?: string | null
    Booking: BookingCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateInput = {
    id?: number
    bookingId: number
    amount: number
    status: $Enums.PaymentStatus
    method: $Enums.PaymentMethod
    paidAt?: Date | string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    orderCode?: string | null
  }

  export type TransactionUpdateInput = {
    amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCode?: NullableStringFieldUpdateOperationsInput | string | null
    Booking?: BookingUpdateOneRequiredWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionCreateManyInput = {
    id?: number
    bookingId: number
    amount: number
    status: $Enums.PaymentStatus
    method: $Enums.PaymentMethod
    paidAt?: Date | string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    orderCode?: string | null
  }

  export type TransactionUpdateManyMutationInput = {
    amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type UserUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeCreateInput = {
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type VerificationCodeUncheckedCreateInput = {
    id?: number
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type VerificationCodeUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeCreateManyInput = {
    id?: number
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type VerificationCodeUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkLogCreateInput = {
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking: BookingCreateNestedOneWithoutWorkLogInput
    Staff: StaffCreateNestedOneWithoutWorkLogInput
  }

  export type WorkLogUncheckedCreateInput = {
    id?: number
    staffId: number
    bookingId: number
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type WorkLogUpdateInput = {
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateOneRequiredWithoutWorkLogNestedInput
    Staff?: StaffUpdateOneRequiredWithoutWorkLogNestedInput
  }

  export type WorkLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkLogCreateManyInput = {
    id?: number
    staffId: number
    bookingId: number
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type WorkLogUpdateManyMutationInput = {
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InspectionReportCreateInput = {
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
    Booking: BookingCreateNestedOneWithoutInspectionReportInput
    Staff: StaffCreateNestedOneWithoutInspectionReportInput
  }

  export type InspectionReportUncheckedCreateInput = {
    id?: number
    bookingId: number
    staffId: number
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
  }

  export type InspectionReportUpdateInput = {
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateOneRequiredWithoutInspectionReportNestedInput
    Staff?: StaffUpdateOneRequiredWithoutInspectionReportNestedInput
  }

  export type InspectionReportUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InspectionReportCreateManyInput = {
    id?: number
    bookingId: number
    staffId: number
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
  }

  export type InspectionReportUpdateManyMutationInput = {
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InspectionReportUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceCreateInput = {
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
    Booking: BookingCreateNestedOneWithoutProposedServiceInput
    Service: ServiceCreateNestedOneWithoutProposedServiceInput
  }

  export type ProposedServiceUncheckedCreateInput = {
    id?: number
    bookingId: number
    serviceId: number
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
  }

  export type ProposedServiceUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateOneRequiredWithoutProposedServiceNestedInput
    Service?: ServiceUpdateOneRequiredWithoutProposedServiceNestedInput
  }

  export type ProposedServiceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceCreateManyInput = {
    id?: number
    bookingId: number
    serviceId: number
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
  }

  export type ProposedServiceUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceItemCreateInput = {
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceItemInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceItemInput
  }

  export type ServiceItemUncheckedCreateInput = {
    id?: number
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    providerId: number
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceItemInput
  }

  export type ServiceItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceItemNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceItemNestedInput
  }

  export type ServiceItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    providerId?: IntFieldUpdateOperationsInput | number
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceItemNestedInput
  }

  export type ServiceItemCreateManyInput = {
    id?: number
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    providerId: number
  }

  export type ServiceItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    providerId?: IntFieldUpdateOperationsInput | number
  }

  export type ServiceRequestCreateInput = {
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    Booking?: BookingCreateNestedOneWithoutServiceRequestInput
    Category: CategoryCreateNestedOneWithoutServiceRequestInput
    CustomerProfile: CustomerProfileCreateNestedOneWithoutServiceRequestInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestUncheckedCreateInput = {
    id?: number
    customerId: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
    Booking?: BookingUncheckedCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestUpdateInput = {
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    Booking?: BookingUpdateOneWithoutServiceRequestNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceRequestNestedInput
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutServiceRequestNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    Booking?: BookingUncheckedUpdateOneWithoutServiceRequestNestedInput
  }

  export type ServiceRequestCreateManyInput = {
    id?: number
    customerId: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
  }

  export type ServiceRequestUpdateManyMutationInput = {
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
  }

  export type ServiceRequestUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type Service_ServiceItemsCreateInput = {
    Service: ServiceCreateNestedOneWithoutService_ServiceItemsInput
    ServiceItem: ServiceItemCreateNestedOneWithoutService_ServiceItemsInput
  }

  export type Service_ServiceItemsUncheckedCreateInput = {
    serviceId: number
    serviceItemId: number
  }

  export type Service_ServiceItemsUpdateInput = {
    Service?: ServiceUpdateOneRequiredWithoutService_ServiceItemsNestedInput
    ServiceItem?: ServiceItemUpdateOneRequiredWithoutService_ServiceItemsNestedInput
  }

  export type Service_ServiceItemsUncheckedUpdateInput = {
    serviceId?: IntFieldUpdateOperationsInput | number
    serviceItemId?: IntFieldUpdateOperationsInput | number
  }

  export type Service_ServiceItemsCreateManyInput = {
    serviceId: number
    serviceItemId: number
  }

  export type Service_ServiceItemsUpdateManyMutationInput = {

  }

  export type Service_ServiceItemsUncheckedUpdateManyInput = {
    serviceId?: IntFieldUpdateOperationsInput | number
    serviceItemId?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumBookingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BookingStatus | EnumBookingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBookingStatusFilter<$PrismaModel> | $Enums.BookingStatus
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CustomerProfileScalarRelationFilter = {
    is?: CustomerProfileWhereInput
    isNot?: CustomerProfileWhereInput
  }

  export type ServiceProviderScalarRelationFilter = {
    is?: ServiceProviderWhereInput
    isNot?: ServiceProviderWhereInput
  }

  export type ServiceRequestNullableScalarRelationFilter = {
    is?: ServiceRequestWhereInput | null
    isNot?: ServiceRequestWhereInput | null
  }

  export type StaffNullableScalarRelationFilter = {
    is?: StaffWhereInput | null
    isNot?: StaffWhereInput | null
  }

  export type InspectionReportNullableScalarRelationFilter = {
    is?: InspectionReportWhereInput | null
    isNot?: InspectionReportWhereInput | null
  }

  export type ProposedServiceListRelationFilter = {
    every?: ProposedServiceWhereInput
    some?: ProposedServiceWhereInput
    none?: ProposedServiceWhereInput
  }

  export type TransactionNullableScalarRelationFilter = {
    is?: TransactionWhereInput | null
    isNot?: TransactionWhereInput | null
  }

  export type WorkLogListRelationFilter = {
    every?: WorkLogWhereInput
    some?: WorkLogWhereInput
    none?: WorkLogWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProposedServiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WorkLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BookingCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    status?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    staffId?: SortOrder
    serviceRequestId?: SortOrder
  }

  export type BookingAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    staffId?: SortOrder
    serviceRequestId?: SortOrder
  }

  export type BookingMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    status?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    staffId?: SortOrder
    serviceRequestId?: SortOrder
  }

  export type BookingMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    status?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    staffId?: SortOrder
    serviceRequestId?: SortOrder
  }

  export type BookingSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    staffId?: SortOrder
    serviceRequestId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumBookingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BookingStatus | EnumBookingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBookingStatusWithAggregatesFilter<$PrismaModel> | $Enums.BookingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBookingStatusFilter<$PrismaModel>
    _max?: NestedEnumBookingStatusFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type CategoryTranslationListRelationFilter = {
    every?: CategoryTranslationWhereInput
    some?: CategoryTranslationWhereInput
    none?: CategoryTranslationWhereInput
  }

  export type ServiceListRelationFilter = {
    every?: ServiceWhereInput
    some?: ServiceWhereInput
    none?: ServiceWhereInput
  }

  export type ServiceRequestListRelationFilter = {
    every?: ServiceRequestWhereInput
    some?: ServiceRequestWhereInput
    none?: ServiceRequestWhereInput
  }

  export type StaffCategoryListRelationFilter = {
    every?: StaffCategoryWhereInput
    some?: StaffCategoryWhereInput
    none?: StaffCategoryWhereInput
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StaffCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type CategoryScalarRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type LanguageScalarRelationFilter = {
    is?: LanguageWhereInput
    isNot?: LanguageWhereInput
  }

  export type CategoryTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CategoryTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
  }

  export type CategoryTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CategoryTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type CategoryTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type ChatMessageCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    sentAt?: SortOrder
    isRead?: SortOrder
  }

  export type ChatMessageAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
  }

  export type ChatMessageMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    sentAt?: SortOrder
    isRead?: SortOrder
  }

  export type ChatMessageMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    sender?: SortOrder
    message?: SortOrder
    sentAt?: SortOrder
    isRead?: SortOrder
  }

  export type ChatMessageSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumGenderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableFilter<$PrismaModel> | $Enums.Gender | null
  }

  export type BookingListRelationFilter = {
    every?: BookingWhereInput
    some?: BookingWhereInput
    none?: BookingWhereInput
  }

  export type ChatMessageListRelationFilter = {
    every?: ChatMessageWhereInput
    some?: ChatMessageWhereInput
    none?: ChatMessageWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type PackageRecommendationListRelationFilter = {
    every?: PackageRecommendationWhereInput
    some?: PackageRecommendationWhereInput
    none?: PackageRecommendationWhereInput
  }

  export type RecurringBookingListRelationFilter = {
    every?: RecurringBookingWhereInput
    some?: RecurringBookingWhereInput
    none?: RecurringBookingWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type RewardPointListRelationFilter = {
    every?: RewardPointWhereInput
    some?: RewardPointWhereInput
    none?: RewardPointWhereInput
  }

  export type BookingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChatMessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PackageRecommendationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RecurringBookingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RewardPointOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerProfileCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerProfileAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type CustomerProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerProfileMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    address?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerProfileSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type EnumGenderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel> | $Enums.Gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderNullableFilter<$PrismaModel>
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DeviceCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
  }

  export type DeviceAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type DeviceMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
  }

  export type DeviceMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
  }

  export type DeviceSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type ServiceProviderTranslationListRelationFilter = {
    every?: ServiceProviderTranslationWhereInput
    some?: ServiceProviderTranslationWhereInput
    none?: ServiceProviderTranslationWhereInput
  }

  export type ServiceTranslationListRelationFilter = {
    every?: ServiceTranslationWhereInput
    some?: ServiceTranslationWhereInput
    none?: ServiceTranslationWhereInput
  }

  export type ServiceProviderTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LanguageCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LanguageAvgOrderByAggregateInput = {
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type LanguageMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LanguageMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LanguageSumOrderByAggregateInput = {
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type PackageRecommendationCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
    reason?: SortOrder
    accepted?: SortOrder
    recommendedAt?: SortOrder
    acceptedAt?: SortOrder
  }

  export type PackageRecommendationAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
  }

  export type PackageRecommendationMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
    reason?: SortOrder
    accepted?: SortOrder
    recommendedAt?: SortOrder
    acceptedAt?: SortOrder
  }

  export type PackageRecommendationMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
    reason?: SortOrder
    accepted?: SortOrder
    recommendedAt?: SortOrder
    acceptedAt?: SortOrder
  }

  export type PackageRecommendationSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    packageId?: SortOrder
  }

  export type PaymentTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    referenceNumber?: SortOrder
    transactionContent?: SortOrder
    body?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionAvgOrderByAggregateInput = {
    id?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
  }

  export type PaymentTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    referenceNumber?: SortOrder
    transactionContent?: SortOrder
    body?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    referenceNumber?: SortOrder
    transactionContent?: SortOrder
    body?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionSumOrderByAggregateInput = {
    id?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
  }

  export type EnumHTTPMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodFilter<$PrismaModel> | $Enums.HTTPMethod
  }

  export type RoleListRelationFilter = {
    every?: RoleWhereInput
    some?: RoleWhereInput
    none?: RoleWhereInput
  }

  export type RoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionAvgOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type PermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionSumOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type EnumHTTPMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodWithAggregatesFilter<$PrismaModel> | $Enums.HTTPMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumHTTPMethodFilter<$PrismaModel>
    _max?: NestedEnumHTTPMethodFilter<$PrismaModel>
  }

  export type ServiceScalarRelationFilter = {
    is?: ServiceWhereInput
    isNot?: ServiceWhereInput
  }

  export type RecurringBookingCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
    interval?: SortOrder
    nextRunDate?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RecurringBookingAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
  }

  export type RecurringBookingMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
    interval?: SortOrder
    nextRunDate?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RecurringBookingMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
    interval?: SortOrder
    nextRunDate?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RecurringBookingSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    serviceId?: SortOrder
  }

  export type DeviceScalarRelationFilter = {
    is?: DeviceWhereInput
    isNot?: DeviceWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type StaffScalarRelationFilter = {
    is?: StaffWhereInput
    isNot?: StaffWhereInput
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    createdAt?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    staffId?: SortOrder
    serviceId?: SortOrder
    rating?: SortOrder
  }

  export type RewardPointCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
  }

  export type RewardPointAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
  }

  export type RewardPointMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
  }

  export type RewardPointMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
  }

  export type RewardPointSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    points?: SortOrder
  }

  export type PermissionListRelationFilter = {
    every?: PermissionWhereInput
    some?: PermissionWhereInput
    none?: PermissionWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type PermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.Unit | EnumUnitFieldRefInput<$PrismaModel>
    in?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumUnitFilter<$PrismaModel> | $Enums.Unit
  }

  export type Service_ServiceItemsListRelationFilter = {
    every?: Service_ServiceItemsWhereInput
    some?: Service_ServiceItemsWhereInput
    none?: Service_ServiceItemsWhereInput
  }

  export type Service_ServiceItemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceCountOrderByAggregateInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    images?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    publishedAt?: SortOrder
    description?: SortOrder
    categoryId?: SortOrder
    unit?: SortOrder
  }

  export type ServiceAvgOrderByAggregateInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    categoryId?: SortOrder
  }

  export type ServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    publishedAt?: SortOrder
    description?: SortOrder
    categoryId?: SortOrder
    unit?: SortOrder
  }

  export type ServiceMinOrderByAggregateInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    publishedAt?: SortOrder
    description?: SortOrder
    categoryId?: SortOrder
    unit?: SortOrder
  }

  export type ServiceSumOrderByAggregateInput = {
    id?: SortOrder
    basePrice?: SortOrder
    virtualPrice?: SortOrder
    durationMinutes?: SortOrder
    providerId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    categoryId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Unit | EnumUnitFieldRefInput<$PrismaModel>
    in?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumUnitWithAggregatesFilter<$PrismaModel> | $Enums.Unit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUnitFilter<$PrismaModel>
    _max?: NestedEnumUnitFilter<$PrismaModel>
  }

  export type EnumCompanyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyTypeFilter<$PrismaModel> | $Enums.CompanyType
  }

  export type EnumVerificationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusFilter<$PrismaModel> | $Enums.VerificationStatus
  }

  export type ServiceItemListRelationFilter = {
    every?: ServiceItemWhereInput
    some?: ServiceItemWhereInput
    none?: ServiceItemWhereInput
  }

  export type StaffListRelationFilter = {
    every?: StaffWhereInput
    some?: StaffWhereInput
    none?: StaffWhereInput
  }

  export type ServiceItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StaffOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceProviderCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    companyType?: SortOrder
    industry?: SortOrder
    licenseNo?: SortOrder
    logo?: SortOrder
    taxId?: SortOrder
    verificationStatus?: SortOrder
    verifiedAt?: SortOrder
    verifiedById?: SortOrder
  }

  export type ServiceProviderAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    verifiedById?: SortOrder
  }

  export type ServiceProviderMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    companyType?: SortOrder
    industry?: SortOrder
    licenseNo?: SortOrder
    logo?: SortOrder
    taxId?: SortOrder
    verificationStatus?: SortOrder
    verifiedAt?: SortOrder
    verifiedById?: SortOrder
  }

  export type ServiceProviderMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    address?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
    companyType?: SortOrder
    industry?: SortOrder
    licenseNo?: SortOrder
    logo?: SortOrder
    taxId?: SortOrder
    verificationStatus?: SortOrder
    verifiedAt?: SortOrder
    verifiedById?: SortOrder
  }

  export type ServiceProviderSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    verifiedById?: SortOrder
  }

  export type EnumCompanyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyTypeWithAggregatesFilter<$PrismaModel> | $Enums.CompanyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompanyTypeFilter<$PrismaModel>
    _max?: NestedEnumCompanyTypeFilter<$PrismaModel>
  }

  export type EnumVerificationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusWithAggregatesFilter<$PrismaModel> | $Enums.VerificationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationStatusFilter<$PrismaModel>
    _max?: NestedEnumVerificationStatusFilter<$PrismaModel>
  }

  export type ServiceProviderTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ServiceProviderTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
  }

  export type ServiceProviderTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ServiceProviderTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ServiceProviderTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    providerId?: SortOrder
  }

  export type ServiceTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ServiceTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
  }

  export type ServiceTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ServiceTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ServiceTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
  }

  export type BookingNullableScalarRelationFilter = {
    is?: BookingWhereInput | null
    isNot?: BookingWhereInput | null
  }

  export type InspectionReportListRelationFilter = {
    every?: InspectionReportWhereInput
    some?: InspectionReportWhereInput
    none?: InspectionReportWhereInput
  }

  export type InspectionReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StaffCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
  }

  export type StaffAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
  }

  export type StaffMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
  }

  export type StaffMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isActive?: SortOrder
  }

  export type StaffSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    providerId?: SortOrder
  }

  export type StaffCategoryStaffIdCategoryIdCompoundUniqueInput = {
    staffId: number
    categoryId: number
  }

  export type StaffCategoryCountOrderByAggregateInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
  }

  export type StaffCategoryAvgOrderByAggregateInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
  }

  export type StaffCategoryMaxOrderByAggregateInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
  }

  export type StaffCategoryMinOrderByAggregateInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
  }

  export type StaffCategorySumOrderByAggregateInput = {
    staffId?: SortOrder
    categoryId?: SortOrder
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type EnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type BookingScalarRelationFilter = {
    is?: BookingWhereInput
    isNot?: BookingWhereInput
  }

  export type TransactionCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    method?: SortOrder
    paidAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    orderCode?: SortOrder
  }

  export type TransactionAvgOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type TransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    method?: SortOrder
    paidAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    orderCode?: SortOrder
  }

  export type TransactionMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    method?: SortOrder
    paidAt?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    orderCode?: SortOrder
  }

  export type TransactionSumOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    amount?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type CustomerProfileNullableScalarRelationFilter = {
    is?: CustomerProfileWhereInput | null
    isNot?: CustomerProfileWhereInput | null
  }

  export type DeviceListRelationFilter = {
    every?: DeviceWhereInput
    some?: DeviceWhereInput
    none?: DeviceWhereInput
  }

  export type LanguageListRelationFilter = {
    every?: LanguageWhereInput
    some?: LanguageWhereInput
    none?: LanguageWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type ServiceProviderNullableScalarRelationFilter = {
    is?: ServiceProviderWhereInput | null
    isNot?: ServiceProviderWhereInput | null
  }

  export type ServiceProviderListRelationFilter = {
    every?: ServiceProviderWhereInput
    some?: ServiceProviderWhereInput
    none?: ServiceProviderWhereInput
  }

  export type DeviceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LanguageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceProviderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    totpSecret?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    totpSecret?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    avatar?: SortOrder
    totpSecret?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type EnumVerificationCodeTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeFilter<$PrismaModel> | $Enums.VerificationCodeType
  }

  export type VerificationCodeEmailCodeTypeCompoundUniqueInput = {
    email: string
    code: string
    type: $Enums.VerificationCodeType
  }

  export type VerificationCodeCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type VerificationCodeMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel> | $Enums.VerificationCodeType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
    _max?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
  }

  export type WorkLogCountOrderByAggregateInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
    checkIn?: SortOrder
    checkOut?: SortOrder
    note?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkLogAvgOrderByAggregateInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
  }

  export type WorkLogMaxOrderByAggregateInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
    checkIn?: SortOrder
    checkOut?: SortOrder
    note?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkLogMinOrderByAggregateInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
    checkIn?: SortOrder
    checkOut?: SortOrder
    note?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type WorkLogSumOrderByAggregateInput = {
    id?: SortOrder
    staffId?: SortOrder
    bookingId?: SortOrder
  }

  export type InspectionReportCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrder
    note?: SortOrder
    images?: SortOrder
    createdAt?: SortOrder
  }

  export type InspectionReportAvgOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrder
  }

  export type InspectionReportMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrder
    note?: SortOrder
    createdAt?: SortOrder
  }

  export type InspectionReportMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrder
    note?: SortOrder
    createdAt?: SortOrder
  }

  export type InspectionReportSumOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    staffId?: SortOrder
    estimatedTime?: SortOrder
  }

  export type ProposedServiceCountOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
  }

  export type ProposedServiceAvgOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
  }

  export type ProposedServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
  }

  export type ProposedServiceMinOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
  }

  export type ProposedServiceSumOrderByAggregateInput = {
    id?: SortOrder
    bookingId?: SortOrder
    serviceId?: SortOrder
    quantity?: SortOrder
    price?: SortOrder
  }

  export type ServiceItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrder
    updatedAt?: SortOrder
    brand?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    model?: SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    providerId?: SortOrder
  }

  export type ServiceItemAvgOrderByAggregateInput = {
    id?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrder
    stockQuantity?: SortOrder
    providerId?: SortOrder
  }

  export type ServiceItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrder
    updatedAt?: SortOrder
    brand?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    model?: SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    providerId?: SortOrder
  }

  export type ServiceItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrder
    updatedAt?: SortOrder
    brand?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    model?: SortOrder
    stockQuantity?: SortOrder
    unit?: SortOrder
    providerId?: SortOrder
  }

  export type ServiceItemSumOrderByAggregateInput = {
    id?: SortOrder
    unitPrice?: SortOrder
    warrantyPeriod?: SortOrder
    stockQuantity?: SortOrder
    providerId?: SortOrder
  }

  export type EnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type ServiceRequestCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    note?: SortOrder
    preferredDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    phoneNumber?: SortOrder
    categoryId?: SortOrder
  }

  export type ServiceRequestAvgOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
  }

  export type ServiceRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    note?: SortOrder
    preferredDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    phoneNumber?: SortOrder
    categoryId?: SortOrder
  }

  export type ServiceRequestMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    note?: SortOrder
    preferredDate?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    location?: SortOrder
    phoneNumber?: SortOrder
    categoryId?: SortOrder
  }

  export type ServiceRequestSumOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    providerId?: SortOrder
    categoryId?: SortOrder
  }

  export type EnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type ServiceItemScalarRelationFilter = {
    is?: ServiceItemWhereInput
    isNot?: ServiceItemWhereInput
  }

  export type Service_ServiceItemsServiceIdServiceItemIdCompoundUniqueInput = {
    serviceId: number
    serviceItemId: number
  }

  export type Service_ServiceItemsCountOrderByAggregateInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
  }

  export type Service_ServiceItemsAvgOrderByAggregateInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
  }

  export type Service_ServiceItemsMaxOrderByAggregateInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
  }

  export type Service_ServiceItemsMinOrderByAggregateInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
  }

  export type Service_ServiceItemsSumOrderByAggregateInput = {
    serviceId?: SortOrder
    serviceItemId?: SortOrder
  }

  export type CustomerProfileCreateNestedOneWithoutBookingInput = {
    create?: XOR<CustomerProfileCreateWithoutBookingInput, CustomerProfileUncheckedCreateWithoutBookingInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutBookingInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type ServiceProviderCreateNestedOneWithoutBookingInput = {
    create?: XOR<ServiceProviderCreateWithoutBookingInput, ServiceProviderUncheckedCreateWithoutBookingInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutBookingInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type ServiceRequestCreateNestedOneWithoutBookingInput = {
    create?: XOR<ServiceRequestCreateWithoutBookingInput, ServiceRequestUncheckedCreateWithoutBookingInput>
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutBookingInput
    connect?: ServiceRequestWhereUniqueInput
  }

  export type StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput = {
    create?: XOR<StaffCreateWithoutBooking_Booking_staffIdToStaffInput, StaffUncheckedCreateWithoutBooking_Booking_staffIdToStaffInput>
    connectOrCreate?: StaffCreateOrConnectWithoutBooking_Booking_staffIdToStaffInput
    connect?: StaffWhereUniqueInput
  }

  export type InspectionReportCreateNestedOneWithoutBookingInput = {
    create?: XOR<InspectionReportCreateWithoutBookingInput, InspectionReportUncheckedCreateWithoutBookingInput>
    connectOrCreate?: InspectionReportCreateOrConnectWithoutBookingInput
    connect?: InspectionReportWhereUniqueInput
  }

  export type ProposedServiceCreateNestedManyWithoutBookingInput = {
    create?: XOR<ProposedServiceCreateWithoutBookingInput, ProposedServiceUncheckedCreateWithoutBookingInput> | ProposedServiceCreateWithoutBookingInput[] | ProposedServiceUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutBookingInput | ProposedServiceCreateOrConnectWithoutBookingInput[]
    createMany?: ProposedServiceCreateManyBookingInputEnvelope
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
  }

  export type TransactionCreateNestedOneWithoutBookingInput = {
    create?: XOR<TransactionCreateWithoutBookingInput, TransactionUncheckedCreateWithoutBookingInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutBookingInput
    connect?: TransactionWhereUniqueInput
  }

  export type WorkLogCreateNestedManyWithoutBookingInput = {
    create?: XOR<WorkLogCreateWithoutBookingInput, WorkLogUncheckedCreateWithoutBookingInput> | WorkLogCreateWithoutBookingInput[] | WorkLogUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutBookingInput | WorkLogCreateOrConnectWithoutBookingInput[]
    createMany?: WorkLogCreateManyBookingInputEnvelope
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
  }

  export type InspectionReportUncheckedCreateNestedOneWithoutBookingInput = {
    create?: XOR<InspectionReportCreateWithoutBookingInput, InspectionReportUncheckedCreateWithoutBookingInput>
    connectOrCreate?: InspectionReportCreateOrConnectWithoutBookingInput
    connect?: InspectionReportWhereUniqueInput
  }

  export type ProposedServiceUncheckedCreateNestedManyWithoutBookingInput = {
    create?: XOR<ProposedServiceCreateWithoutBookingInput, ProposedServiceUncheckedCreateWithoutBookingInput> | ProposedServiceCreateWithoutBookingInput[] | ProposedServiceUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutBookingInput | ProposedServiceCreateOrConnectWithoutBookingInput[]
    createMany?: ProposedServiceCreateManyBookingInputEnvelope
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedOneWithoutBookingInput = {
    create?: XOR<TransactionCreateWithoutBookingInput, TransactionUncheckedCreateWithoutBookingInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutBookingInput
    connect?: TransactionWhereUniqueInput
  }

  export type WorkLogUncheckedCreateNestedManyWithoutBookingInput = {
    create?: XOR<WorkLogCreateWithoutBookingInput, WorkLogUncheckedCreateWithoutBookingInput> | WorkLogCreateWithoutBookingInput[] | WorkLogUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutBookingInput | WorkLogCreateOrConnectWithoutBookingInput[]
    createMany?: WorkLogCreateManyBookingInputEnvelope
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
  }

  export type EnumBookingStatusFieldUpdateOperationsInput = {
    set?: $Enums.BookingStatus
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CustomerProfileUpdateOneRequiredWithoutBookingNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutBookingInput, CustomerProfileUncheckedCreateWithoutBookingInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutBookingInput
    upsert?: CustomerProfileUpsertWithoutBookingInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutBookingInput, CustomerProfileUpdateWithoutBookingInput>, CustomerProfileUncheckedUpdateWithoutBookingInput>
  }

  export type ServiceProviderUpdateOneRequiredWithoutBookingNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutBookingInput, ServiceProviderUncheckedCreateWithoutBookingInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutBookingInput
    upsert?: ServiceProviderUpsertWithoutBookingInput
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutBookingInput, ServiceProviderUpdateWithoutBookingInput>, ServiceProviderUncheckedUpdateWithoutBookingInput>
  }

  export type ServiceRequestUpdateOneWithoutBookingNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutBookingInput, ServiceRequestUncheckedCreateWithoutBookingInput>
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutBookingInput
    upsert?: ServiceRequestUpsertWithoutBookingInput
    disconnect?: ServiceRequestWhereInput | boolean
    delete?: ServiceRequestWhereInput | boolean
    connect?: ServiceRequestWhereUniqueInput
    update?: XOR<XOR<ServiceRequestUpdateToOneWithWhereWithoutBookingInput, ServiceRequestUpdateWithoutBookingInput>, ServiceRequestUncheckedUpdateWithoutBookingInput>
  }

  export type StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput = {
    create?: XOR<StaffCreateWithoutBooking_Booking_staffIdToStaffInput, StaffUncheckedCreateWithoutBooking_Booking_staffIdToStaffInput>
    connectOrCreate?: StaffCreateOrConnectWithoutBooking_Booking_staffIdToStaffInput
    upsert?: StaffUpsertWithoutBooking_Booking_staffIdToStaffInput
    disconnect?: StaffWhereInput | boolean
    delete?: StaffWhereInput | boolean
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutBooking_Booking_staffIdToStaffInput, StaffUpdateWithoutBooking_Booking_staffIdToStaffInput>, StaffUncheckedUpdateWithoutBooking_Booking_staffIdToStaffInput>
  }

  export type InspectionReportUpdateOneWithoutBookingNestedInput = {
    create?: XOR<InspectionReportCreateWithoutBookingInput, InspectionReportUncheckedCreateWithoutBookingInput>
    connectOrCreate?: InspectionReportCreateOrConnectWithoutBookingInput
    upsert?: InspectionReportUpsertWithoutBookingInput
    disconnect?: InspectionReportWhereInput | boolean
    delete?: InspectionReportWhereInput | boolean
    connect?: InspectionReportWhereUniqueInput
    update?: XOR<XOR<InspectionReportUpdateToOneWithWhereWithoutBookingInput, InspectionReportUpdateWithoutBookingInput>, InspectionReportUncheckedUpdateWithoutBookingInput>
  }

  export type ProposedServiceUpdateManyWithoutBookingNestedInput = {
    create?: XOR<ProposedServiceCreateWithoutBookingInput, ProposedServiceUncheckedCreateWithoutBookingInput> | ProposedServiceCreateWithoutBookingInput[] | ProposedServiceUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutBookingInput | ProposedServiceCreateOrConnectWithoutBookingInput[]
    upsert?: ProposedServiceUpsertWithWhereUniqueWithoutBookingInput | ProposedServiceUpsertWithWhereUniqueWithoutBookingInput[]
    createMany?: ProposedServiceCreateManyBookingInputEnvelope
    set?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    disconnect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    delete?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    update?: ProposedServiceUpdateWithWhereUniqueWithoutBookingInput | ProposedServiceUpdateWithWhereUniqueWithoutBookingInput[]
    updateMany?: ProposedServiceUpdateManyWithWhereWithoutBookingInput | ProposedServiceUpdateManyWithWhereWithoutBookingInput[]
    deleteMany?: ProposedServiceScalarWhereInput | ProposedServiceScalarWhereInput[]
  }

  export type TransactionUpdateOneWithoutBookingNestedInput = {
    create?: XOR<TransactionCreateWithoutBookingInput, TransactionUncheckedCreateWithoutBookingInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutBookingInput
    upsert?: TransactionUpsertWithoutBookingInput
    disconnect?: TransactionWhereInput | boolean
    delete?: TransactionWhereInput | boolean
    connect?: TransactionWhereUniqueInput
    update?: XOR<XOR<TransactionUpdateToOneWithWhereWithoutBookingInput, TransactionUpdateWithoutBookingInput>, TransactionUncheckedUpdateWithoutBookingInput>
  }

  export type WorkLogUpdateManyWithoutBookingNestedInput = {
    create?: XOR<WorkLogCreateWithoutBookingInput, WorkLogUncheckedCreateWithoutBookingInput> | WorkLogCreateWithoutBookingInput[] | WorkLogUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutBookingInput | WorkLogCreateOrConnectWithoutBookingInput[]
    upsert?: WorkLogUpsertWithWhereUniqueWithoutBookingInput | WorkLogUpsertWithWhereUniqueWithoutBookingInput[]
    createMany?: WorkLogCreateManyBookingInputEnvelope
    set?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    disconnect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    delete?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    update?: WorkLogUpdateWithWhereUniqueWithoutBookingInput | WorkLogUpdateWithWhereUniqueWithoutBookingInput[]
    updateMany?: WorkLogUpdateManyWithWhereWithoutBookingInput | WorkLogUpdateManyWithWhereWithoutBookingInput[]
    deleteMany?: WorkLogScalarWhereInput | WorkLogScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type InspectionReportUncheckedUpdateOneWithoutBookingNestedInput = {
    create?: XOR<InspectionReportCreateWithoutBookingInput, InspectionReportUncheckedCreateWithoutBookingInput>
    connectOrCreate?: InspectionReportCreateOrConnectWithoutBookingInput
    upsert?: InspectionReportUpsertWithoutBookingInput
    disconnect?: InspectionReportWhereInput | boolean
    delete?: InspectionReportWhereInput | boolean
    connect?: InspectionReportWhereUniqueInput
    update?: XOR<XOR<InspectionReportUpdateToOneWithWhereWithoutBookingInput, InspectionReportUpdateWithoutBookingInput>, InspectionReportUncheckedUpdateWithoutBookingInput>
  }

  export type ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput = {
    create?: XOR<ProposedServiceCreateWithoutBookingInput, ProposedServiceUncheckedCreateWithoutBookingInput> | ProposedServiceCreateWithoutBookingInput[] | ProposedServiceUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutBookingInput | ProposedServiceCreateOrConnectWithoutBookingInput[]
    upsert?: ProposedServiceUpsertWithWhereUniqueWithoutBookingInput | ProposedServiceUpsertWithWhereUniqueWithoutBookingInput[]
    createMany?: ProposedServiceCreateManyBookingInputEnvelope
    set?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    disconnect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    delete?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    update?: ProposedServiceUpdateWithWhereUniqueWithoutBookingInput | ProposedServiceUpdateWithWhereUniqueWithoutBookingInput[]
    updateMany?: ProposedServiceUpdateManyWithWhereWithoutBookingInput | ProposedServiceUpdateManyWithWhereWithoutBookingInput[]
    deleteMany?: ProposedServiceScalarWhereInput | ProposedServiceScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateOneWithoutBookingNestedInput = {
    create?: XOR<TransactionCreateWithoutBookingInput, TransactionUncheckedCreateWithoutBookingInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutBookingInput
    upsert?: TransactionUpsertWithoutBookingInput
    disconnect?: TransactionWhereInput | boolean
    delete?: TransactionWhereInput | boolean
    connect?: TransactionWhereUniqueInput
    update?: XOR<XOR<TransactionUpdateToOneWithWhereWithoutBookingInput, TransactionUpdateWithoutBookingInput>, TransactionUncheckedUpdateWithoutBookingInput>
  }

  export type WorkLogUncheckedUpdateManyWithoutBookingNestedInput = {
    create?: XOR<WorkLogCreateWithoutBookingInput, WorkLogUncheckedCreateWithoutBookingInput> | WorkLogCreateWithoutBookingInput[] | WorkLogUncheckedCreateWithoutBookingInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutBookingInput | WorkLogCreateOrConnectWithoutBookingInput[]
    upsert?: WorkLogUpsertWithWhereUniqueWithoutBookingInput | WorkLogUpsertWithWhereUniqueWithoutBookingInput[]
    createMany?: WorkLogCreateManyBookingInputEnvelope
    set?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    disconnect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    delete?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    update?: WorkLogUpdateWithWhereUniqueWithoutBookingInput | WorkLogUpdateWithWhereUniqueWithoutBookingInput[]
    updateMany?: WorkLogUpdateManyWithWhereWithoutBookingInput | WorkLogUpdateManyWithWhereWithoutBookingInput[]
    deleteMany?: WorkLogScalarWhereInput | WorkLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutCategory_Category_createdByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategory_Category_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutCategory_Category_deletedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategory_Category_deletedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutOther_CategoryInput = {
    create?: XOR<CategoryCreateWithoutOther_CategoryInput, CategoryUncheckedCreateWithoutOther_CategoryInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutOther_CategoryInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryCreateWithoutCategoryInput, CategoryUncheckedCreateWithoutCategoryInput> | CategoryCreateWithoutCategoryInput[] | CategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryInput | CategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryCreateManyCategoryInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutCategory_Category_updatedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategory_Category_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryTranslationCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceRequestCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ServiceRequestCreateWithoutCategoryInput, ServiceRequestUncheckedCreateWithoutCategoryInput> | ServiceRequestCreateWithoutCategoryInput[] | ServiceRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCategoryInput | ServiceRequestCreateOrConnectWithoutCategoryInput[]
    createMany?: ServiceRequestCreateManyCategoryInputEnvelope
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
  }

  export type StaffCategoryCreateNestedManyWithoutCategoryInput = {
    create?: XOR<StaffCategoryCreateWithoutCategoryInput, StaffCategoryUncheckedCreateWithoutCategoryInput> | StaffCategoryCreateWithoutCategoryInput[] | StaffCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutCategoryInput | StaffCategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: StaffCategoryCreateManyCategoryInputEnvelope
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryCreateWithoutCategoryInput, CategoryUncheckedCreateWithoutCategoryInput> | CategoryCreateWithoutCategoryInput[] | CategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryInput | CategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryCreateManyCategoryInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ServiceRequestCreateWithoutCategoryInput, ServiceRequestUncheckedCreateWithoutCategoryInput> | ServiceRequestCreateWithoutCategoryInput[] | ServiceRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCategoryInput | ServiceRequestCreateOrConnectWithoutCategoryInput[]
    createMany?: ServiceRequestCreateManyCategoryInputEnvelope
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
  }

  export type StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<StaffCategoryCreateWithoutCategoryInput, StaffCategoryUncheckedCreateWithoutCategoryInput> | StaffCategoryCreateWithoutCategoryInput[] | StaffCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutCategoryInput | StaffCategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: StaffCategoryCreateManyCategoryInputEnvelope
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutCategory_Category_createdByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategory_Category_createdByIdToUserInput
    upsert?: UserUpsertWithoutCategory_Category_createdByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCategory_Category_createdByIdToUserInput, UserUpdateWithoutCategory_Category_createdByIdToUserInput>, UserUncheckedUpdateWithoutCategory_Category_createdByIdToUserInput>
  }

  export type UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutCategory_Category_deletedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategory_Category_deletedByIdToUserInput
    upsert?: UserUpsertWithoutCategory_Category_deletedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCategory_Category_deletedByIdToUserInput, UserUpdateWithoutCategory_Category_deletedByIdToUserInput>, UserUncheckedUpdateWithoutCategory_Category_deletedByIdToUserInput>
  }

  export type CategoryUpdateOneWithoutOther_CategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutOther_CategoryInput, CategoryUncheckedCreateWithoutOther_CategoryInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutOther_CategoryInput
    upsert?: CategoryUpsertWithoutOther_CategoryInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutOther_CategoryInput, CategoryUpdateWithoutOther_CategoryInput>, CategoryUncheckedUpdateWithoutOther_CategoryInput>
  }

  export type CategoryUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutCategoryInput, CategoryUncheckedCreateWithoutCategoryInput> | CategoryCreateWithoutCategoryInput[] | CategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryInput | CategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCategoryInput | CategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryCreateManyCategoryInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCategoryInput | CategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCategoryInput | CategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutCategory_Category_updatedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategory_Category_updatedByIdToUserInput
    upsert?: UserUpsertWithoutCategory_Category_updatedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCategory_Category_updatedByIdToUserInput, UserUpdateWithoutCategory_Category_updatedByIdToUserInput>, UserUncheckedUpdateWithoutCategory_Category_updatedByIdToUserInput>
  }

  export type CategoryTranslationUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCategoryInput | CategoryTranslationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutCategoryInput | ServiceUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutCategoryInput | ServiceUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutCategoryInput | ServiceUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceRequestUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutCategoryInput, ServiceRequestUncheckedCreateWithoutCategoryInput> | ServiceRequestCreateWithoutCategoryInput[] | ServiceRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCategoryInput | ServiceRequestCreateOrConnectWithoutCategoryInput[]
    upsert?: ServiceRequestUpsertWithWhereUniqueWithoutCategoryInput | ServiceRequestUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ServiceRequestCreateManyCategoryInputEnvelope
    set?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    disconnect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    delete?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    update?: ServiceRequestUpdateWithWhereUniqueWithoutCategoryInput | ServiceRequestUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ServiceRequestUpdateManyWithWhereWithoutCategoryInput | ServiceRequestUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
  }

  export type StaffCategoryUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<StaffCategoryCreateWithoutCategoryInput, StaffCategoryUncheckedCreateWithoutCategoryInput> | StaffCategoryCreateWithoutCategoryInput[] | StaffCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutCategoryInput | StaffCategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: StaffCategoryUpsertWithWhereUniqueWithoutCategoryInput | StaffCategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: StaffCategoryCreateManyCategoryInputEnvelope
    set?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    disconnect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    delete?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    update?: StaffCategoryUpdateWithWhereUniqueWithoutCategoryInput | StaffCategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: StaffCategoryUpdateManyWithWhereWithoutCategoryInput | StaffCategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: StaffCategoryScalarWhereInput | StaffCategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutCategoryInput, CategoryUncheckedCreateWithoutCategoryInput> | CategoryCreateWithoutCategoryInput[] | CategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryInput | CategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCategoryInput | CategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryCreateManyCategoryInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCategoryInput | CategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCategoryInput | CategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCategoryInput | CategoryTranslationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput> | ServiceCreateWithoutCategoryInput[] | ServiceUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutCategoryInput | ServiceCreateOrConnectWithoutCategoryInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutCategoryInput | ServiceUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ServiceCreateManyCategoryInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutCategoryInput | ServiceUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutCategoryInput | ServiceUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutCategoryInput, ServiceRequestUncheckedCreateWithoutCategoryInput> | ServiceRequestCreateWithoutCategoryInput[] | ServiceRequestUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCategoryInput | ServiceRequestCreateOrConnectWithoutCategoryInput[]
    upsert?: ServiceRequestUpsertWithWhereUniqueWithoutCategoryInput | ServiceRequestUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ServiceRequestCreateManyCategoryInputEnvelope
    set?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    disconnect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    delete?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    update?: ServiceRequestUpdateWithWhereUniqueWithoutCategoryInput | ServiceRequestUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ServiceRequestUpdateManyWithWhereWithoutCategoryInput | ServiceRequestUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
  }

  export type StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<StaffCategoryCreateWithoutCategoryInput, StaffCategoryUncheckedCreateWithoutCategoryInput> | StaffCategoryCreateWithoutCategoryInput[] | StaffCategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutCategoryInput | StaffCategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: StaffCategoryUpsertWithWhereUniqueWithoutCategoryInput | StaffCategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: StaffCategoryCreateManyCategoryInputEnvelope
    set?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    disconnect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    delete?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    update?: StaffCategoryUpdateWithWhereUniqueWithoutCategoryInput | StaffCategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: StaffCategoryUpdateManyWithWhereWithoutCategoryInput | StaffCategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: StaffCategoryScalarWhereInput | StaffCategoryScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutCategoryTranslationInput = {
    create?: XOR<CategoryCreateWithoutCategoryTranslationInput, CategoryUncheckedCreateWithoutCategoryTranslationInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryTranslationInput
    connect?: CategoryWhereUniqueInput
  }

  export type LanguageCreateNestedOneWithoutCategoryTranslationInput = {
    create?: XOR<LanguageCreateWithoutCategoryTranslationInput, LanguageUncheckedCreateWithoutCategoryTranslationInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutCategoryTranslationInput
    connect?: LanguageWhereUniqueInput
  }

  export type CategoryUpdateOneRequiredWithoutCategoryTranslationNestedInput = {
    create?: XOR<CategoryCreateWithoutCategoryTranslationInput, CategoryUncheckedCreateWithoutCategoryTranslationInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryTranslationInput
    upsert?: CategoryUpsertWithoutCategoryTranslationInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutCategoryTranslationInput, CategoryUpdateWithoutCategoryTranslationInput>, CategoryUncheckedUpdateWithoutCategoryTranslationInput>
  }

  export type LanguageUpdateOneRequiredWithoutCategoryTranslationNestedInput = {
    create?: XOR<LanguageCreateWithoutCategoryTranslationInput, LanguageUncheckedCreateWithoutCategoryTranslationInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutCategoryTranslationInput
    upsert?: LanguageUpsertWithoutCategoryTranslationInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutCategoryTranslationInput, LanguageUpdateWithoutCategoryTranslationInput>, LanguageUncheckedUpdateWithoutCategoryTranslationInput>
  }

  export type CustomerProfileCreateNestedOneWithoutChatMessageInput = {
    create?: XOR<CustomerProfileCreateWithoutChatMessageInput, CustomerProfileUncheckedCreateWithoutChatMessageInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutChatMessageInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CustomerProfileUpdateOneRequiredWithoutChatMessageNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutChatMessageInput, CustomerProfileUncheckedCreateWithoutChatMessageInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutChatMessageInput
    upsert?: CustomerProfileUpsertWithoutChatMessageInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutChatMessageInput, CustomerProfileUpdateWithoutChatMessageInput>, CustomerProfileUncheckedUpdateWithoutChatMessageInput>
  }

  export type BookingCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<BookingCreateWithoutCustomerProfileInput, BookingUncheckedCreateWithoutCustomerProfileInput> | BookingCreateWithoutCustomerProfileInput[] | BookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutCustomerProfileInput | BookingCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: BookingCreateManyCustomerProfileInputEnvelope
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
  }

  export type ChatMessageCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<ChatMessageCreateWithoutCustomerProfileInput, ChatMessageUncheckedCreateWithoutCustomerProfileInput> | ChatMessageCreateWithoutCustomerProfileInput[] | ChatMessageUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutCustomerProfileInput | ChatMessageCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: ChatMessageCreateManyCustomerProfileInputEnvelope
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCustomerProfileInput = {
    create?: XOR<UserCreateWithoutCustomerProfileInput, UserUncheckedCreateWithoutCustomerProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerProfileInput
    connect?: UserWhereUniqueInput
  }

  export type PackageRecommendationCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<PackageRecommendationCreateWithoutCustomerProfileInput, PackageRecommendationUncheckedCreateWithoutCustomerProfileInput> | PackageRecommendationCreateWithoutCustomerProfileInput[] | PackageRecommendationUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: PackageRecommendationCreateOrConnectWithoutCustomerProfileInput | PackageRecommendationCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: PackageRecommendationCreateManyCustomerProfileInputEnvelope
    connect?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
  }

  export type RecurringBookingCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<RecurringBookingCreateWithoutCustomerProfileInput, RecurringBookingUncheckedCreateWithoutCustomerProfileInput> | RecurringBookingCreateWithoutCustomerProfileInput[] | RecurringBookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutCustomerProfileInput | RecurringBookingCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: RecurringBookingCreateManyCustomerProfileInputEnvelope
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<ReviewCreateWithoutCustomerProfileInput, ReviewUncheckedCreateWithoutCustomerProfileInput> | ReviewCreateWithoutCustomerProfileInput[] | ReviewUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerProfileInput | ReviewCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: ReviewCreateManyCustomerProfileInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type RewardPointCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<RewardPointCreateWithoutCustomerProfileInput, RewardPointUncheckedCreateWithoutCustomerProfileInput> | RewardPointCreateWithoutCustomerProfileInput[] | RewardPointUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RewardPointCreateOrConnectWithoutCustomerProfileInput | RewardPointCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: RewardPointCreateManyCustomerProfileInputEnvelope
    connect?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
  }

  export type ServiceRequestCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<ServiceRequestCreateWithoutCustomerProfileInput, ServiceRequestUncheckedCreateWithoutCustomerProfileInput> | ServiceRequestCreateWithoutCustomerProfileInput[] | ServiceRequestUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCustomerProfileInput | ServiceRequestCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: ServiceRequestCreateManyCustomerProfileInputEnvelope
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
  }

  export type BookingUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<BookingCreateWithoutCustomerProfileInput, BookingUncheckedCreateWithoutCustomerProfileInput> | BookingCreateWithoutCustomerProfileInput[] | BookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutCustomerProfileInput | BookingCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: BookingCreateManyCustomerProfileInputEnvelope
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
  }

  export type ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<ChatMessageCreateWithoutCustomerProfileInput, ChatMessageUncheckedCreateWithoutCustomerProfileInput> | ChatMessageCreateWithoutCustomerProfileInput[] | ChatMessageUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutCustomerProfileInput | ChatMessageCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: ChatMessageCreateManyCustomerProfileInputEnvelope
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
  }

  export type PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<PackageRecommendationCreateWithoutCustomerProfileInput, PackageRecommendationUncheckedCreateWithoutCustomerProfileInput> | PackageRecommendationCreateWithoutCustomerProfileInput[] | PackageRecommendationUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: PackageRecommendationCreateOrConnectWithoutCustomerProfileInput | PackageRecommendationCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: PackageRecommendationCreateManyCustomerProfileInputEnvelope
    connect?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
  }

  export type RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<RecurringBookingCreateWithoutCustomerProfileInput, RecurringBookingUncheckedCreateWithoutCustomerProfileInput> | RecurringBookingCreateWithoutCustomerProfileInput[] | RecurringBookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutCustomerProfileInput | RecurringBookingCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: RecurringBookingCreateManyCustomerProfileInputEnvelope
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<ReviewCreateWithoutCustomerProfileInput, ReviewUncheckedCreateWithoutCustomerProfileInput> | ReviewCreateWithoutCustomerProfileInput[] | ReviewUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerProfileInput | ReviewCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: ReviewCreateManyCustomerProfileInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<RewardPointCreateWithoutCustomerProfileInput, RewardPointUncheckedCreateWithoutCustomerProfileInput> | RewardPointCreateWithoutCustomerProfileInput[] | RewardPointUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RewardPointCreateOrConnectWithoutCustomerProfileInput | RewardPointCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: RewardPointCreateManyCustomerProfileInputEnvelope
    connect?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
  }

  export type ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput = {
    create?: XOR<ServiceRequestCreateWithoutCustomerProfileInput, ServiceRequestUncheckedCreateWithoutCustomerProfileInput> | ServiceRequestCreateWithoutCustomerProfileInput[] | ServiceRequestUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCustomerProfileInput | ServiceRequestCreateOrConnectWithoutCustomerProfileInput[]
    createMany?: ServiceRequestCreateManyCustomerProfileInputEnvelope
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
  }

  export type NullableEnumGenderFieldUpdateOperationsInput = {
    set?: $Enums.Gender | null
  }

  export type BookingUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<BookingCreateWithoutCustomerProfileInput, BookingUncheckedCreateWithoutCustomerProfileInput> | BookingCreateWithoutCustomerProfileInput[] | BookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutCustomerProfileInput | BookingCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: BookingUpsertWithWhereUniqueWithoutCustomerProfileInput | BookingUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: BookingCreateManyCustomerProfileInputEnvelope
    set?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    disconnect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    delete?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    update?: BookingUpdateWithWhereUniqueWithoutCustomerProfileInput | BookingUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: BookingUpdateManyWithWhereWithoutCustomerProfileInput | BookingUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: BookingScalarWhereInput | BookingScalarWhereInput[]
  }

  export type ChatMessageUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<ChatMessageCreateWithoutCustomerProfileInput, ChatMessageUncheckedCreateWithoutCustomerProfileInput> | ChatMessageCreateWithoutCustomerProfileInput[] | ChatMessageUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutCustomerProfileInput | ChatMessageCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: ChatMessageUpsertWithWhereUniqueWithoutCustomerProfileInput | ChatMessageUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: ChatMessageCreateManyCustomerProfileInputEnvelope
    set?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    disconnect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    delete?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    update?: ChatMessageUpdateWithWhereUniqueWithoutCustomerProfileInput | ChatMessageUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: ChatMessageUpdateManyWithWhereWithoutCustomerProfileInput | ChatMessageUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutCustomerProfileNestedInput = {
    create?: XOR<UserCreateWithoutCustomerProfileInput, UserUncheckedCreateWithoutCustomerProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutCustomerProfileInput
    upsert?: UserUpsertWithoutCustomerProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCustomerProfileInput, UserUpdateWithoutCustomerProfileInput>, UserUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<PackageRecommendationCreateWithoutCustomerProfileInput, PackageRecommendationUncheckedCreateWithoutCustomerProfileInput> | PackageRecommendationCreateWithoutCustomerProfileInput[] | PackageRecommendationUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: PackageRecommendationCreateOrConnectWithoutCustomerProfileInput | PackageRecommendationCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: PackageRecommendationUpsertWithWhereUniqueWithoutCustomerProfileInput | PackageRecommendationUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: PackageRecommendationCreateManyCustomerProfileInputEnvelope
    set?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    disconnect?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    delete?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    connect?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    update?: PackageRecommendationUpdateWithWhereUniqueWithoutCustomerProfileInput | PackageRecommendationUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: PackageRecommendationUpdateManyWithWhereWithoutCustomerProfileInput | PackageRecommendationUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: PackageRecommendationScalarWhereInput | PackageRecommendationScalarWhereInput[]
  }

  export type RecurringBookingUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<RecurringBookingCreateWithoutCustomerProfileInput, RecurringBookingUncheckedCreateWithoutCustomerProfileInput> | RecurringBookingCreateWithoutCustomerProfileInput[] | RecurringBookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutCustomerProfileInput | RecurringBookingCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: RecurringBookingUpsertWithWhereUniqueWithoutCustomerProfileInput | RecurringBookingUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: RecurringBookingCreateManyCustomerProfileInputEnvelope
    set?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    disconnect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    delete?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    update?: RecurringBookingUpdateWithWhereUniqueWithoutCustomerProfileInput | RecurringBookingUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: RecurringBookingUpdateManyWithWhereWithoutCustomerProfileInput | RecurringBookingUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: RecurringBookingScalarWhereInput | RecurringBookingScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<ReviewCreateWithoutCustomerProfileInput, ReviewUncheckedCreateWithoutCustomerProfileInput> | ReviewCreateWithoutCustomerProfileInput[] | ReviewUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerProfileInput | ReviewCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCustomerProfileInput | ReviewUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: ReviewCreateManyCustomerProfileInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCustomerProfileInput | ReviewUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCustomerProfileInput | ReviewUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type RewardPointUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<RewardPointCreateWithoutCustomerProfileInput, RewardPointUncheckedCreateWithoutCustomerProfileInput> | RewardPointCreateWithoutCustomerProfileInput[] | RewardPointUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RewardPointCreateOrConnectWithoutCustomerProfileInput | RewardPointCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: RewardPointUpsertWithWhereUniqueWithoutCustomerProfileInput | RewardPointUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: RewardPointCreateManyCustomerProfileInputEnvelope
    set?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    disconnect?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    delete?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    connect?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    update?: RewardPointUpdateWithWhereUniqueWithoutCustomerProfileInput | RewardPointUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: RewardPointUpdateManyWithWhereWithoutCustomerProfileInput | RewardPointUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: RewardPointScalarWhereInput | RewardPointScalarWhereInput[]
  }

  export type ServiceRequestUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutCustomerProfileInput, ServiceRequestUncheckedCreateWithoutCustomerProfileInput> | ServiceRequestCreateWithoutCustomerProfileInput[] | ServiceRequestUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCustomerProfileInput | ServiceRequestCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: ServiceRequestUpsertWithWhereUniqueWithoutCustomerProfileInput | ServiceRequestUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: ServiceRequestCreateManyCustomerProfileInputEnvelope
    set?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    disconnect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    delete?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    update?: ServiceRequestUpdateWithWhereUniqueWithoutCustomerProfileInput | ServiceRequestUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: ServiceRequestUpdateManyWithWhereWithoutCustomerProfileInput | ServiceRequestUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
  }

  export type BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<BookingCreateWithoutCustomerProfileInput, BookingUncheckedCreateWithoutCustomerProfileInput> | BookingCreateWithoutCustomerProfileInput[] | BookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutCustomerProfileInput | BookingCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: BookingUpsertWithWhereUniqueWithoutCustomerProfileInput | BookingUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: BookingCreateManyCustomerProfileInputEnvelope
    set?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    disconnect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    delete?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    update?: BookingUpdateWithWhereUniqueWithoutCustomerProfileInput | BookingUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: BookingUpdateManyWithWhereWithoutCustomerProfileInput | BookingUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: BookingScalarWhereInput | BookingScalarWhereInput[]
  }

  export type ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<ChatMessageCreateWithoutCustomerProfileInput, ChatMessageUncheckedCreateWithoutCustomerProfileInput> | ChatMessageCreateWithoutCustomerProfileInput[] | ChatMessageUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutCustomerProfileInput | ChatMessageCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: ChatMessageUpsertWithWhereUniqueWithoutCustomerProfileInput | ChatMessageUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: ChatMessageCreateManyCustomerProfileInputEnvelope
    set?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    disconnect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    delete?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    update?: ChatMessageUpdateWithWhereUniqueWithoutCustomerProfileInput | ChatMessageUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: ChatMessageUpdateManyWithWhereWithoutCustomerProfileInput | ChatMessageUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
  }

  export type PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<PackageRecommendationCreateWithoutCustomerProfileInput, PackageRecommendationUncheckedCreateWithoutCustomerProfileInput> | PackageRecommendationCreateWithoutCustomerProfileInput[] | PackageRecommendationUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: PackageRecommendationCreateOrConnectWithoutCustomerProfileInput | PackageRecommendationCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: PackageRecommendationUpsertWithWhereUniqueWithoutCustomerProfileInput | PackageRecommendationUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: PackageRecommendationCreateManyCustomerProfileInputEnvelope
    set?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    disconnect?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    delete?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    connect?: PackageRecommendationWhereUniqueInput | PackageRecommendationWhereUniqueInput[]
    update?: PackageRecommendationUpdateWithWhereUniqueWithoutCustomerProfileInput | PackageRecommendationUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: PackageRecommendationUpdateManyWithWhereWithoutCustomerProfileInput | PackageRecommendationUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: PackageRecommendationScalarWhereInput | PackageRecommendationScalarWhereInput[]
  }

  export type RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<RecurringBookingCreateWithoutCustomerProfileInput, RecurringBookingUncheckedCreateWithoutCustomerProfileInput> | RecurringBookingCreateWithoutCustomerProfileInput[] | RecurringBookingUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutCustomerProfileInput | RecurringBookingCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: RecurringBookingUpsertWithWhereUniqueWithoutCustomerProfileInput | RecurringBookingUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: RecurringBookingCreateManyCustomerProfileInputEnvelope
    set?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    disconnect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    delete?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    update?: RecurringBookingUpdateWithWhereUniqueWithoutCustomerProfileInput | RecurringBookingUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: RecurringBookingUpdateManyWithWhereWithoutCustomerProfileInput | RecurringBookingUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: RecurringBookingScalarWhereInput | RecurringBookingScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<ReviewCreateWithoutCustomerProfileInput, ReviewUncheckedCreateWithoutCustomerProfileInput> | ReviewCreateWithoutCustomerProfileInput[] | ReviewUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutCustomerProfileInput | ReviewCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutCustomerProfileInput | ReviewUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: ReviewCreateManyCustomerProfileInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutCustomerProfileInput | ReviewUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutCustomerProfileInput | ReviewUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<RewardPointCreateWithoutCustomerProfileInput, RewardPointUncheckedCreateWithoutCustomerProfileInput> | RewardPointCreateWithoutCustomerProfileInput[] | RewardPointUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: RewardPointCreateOrConnectWithoutCustomerProfileInput | RewardPointCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: RewardPointUpsertWithWhereUniqueWithoutCustomerProfileInput | RewardPointUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: RewardPointCreateManyCustomerProfileInputEnvelope
    set?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    disconnect?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    delete?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    connect?: RewardPointWhereUniqueInput | RewardPointWhereUniqueInput[]
    update?: RewardPointUpdateWithWhereUniqueWithoutCustomerProfileInput | RewardPointUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: RewardPointUpdateManyWithWhereWithoutCustomerProfileInput | RewardPointUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: RewardPointScalarWhereInput | RewardPointScalarWhereInput[]
  }

  export type ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutCustomerProfileInput, ServiceRequestUncheckedCreateWithoutCustomerProfileInput> | ServiceRequestCreateWithoutCustomerProfileInput[] | ServiceRequestUncheckedCreateWithoutCustomerProfileInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutCustomerProfileInput | ServiceRequestCreateOrConnectWithoutCustomerProfileInput[]
    upsert?: ServiceRequestUpsertWithWhereUniqueWithoutCustomerProfileInput | ServiceRequestUpsertWithWhereUniqueWithoutCustomerProfileInput[]
    createMany?: ServiceRequestCreateManyCustomerProfileInputEnvelope
    set?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    disconnect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    delete?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    update?: ServiceRequestUpdateWithWhereUniqueWithoutCustomerProfileInput | ServiceRequestUpdateWithWhereUniqueWithoutCustomerProfileInput[]
    updateMany?: ServiceRequestUpdateManyWithWhereWithoutCustomerProfileInput | ServiceRequestUpdateManyWithWhereWithoutCustomerProfileInput[]
    deleteMany?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutDeviceInput = {
    create?: XOR<UserCreateWithoutDeviceInput, UserUncheckedCreateWithoutDeviceInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeviceInput
    connect?: UserWhereUniqueInput
  }

  export type RefreshTokenCreateNestedManyWithoutDeviceInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutDeviceNestedInput = {
    create?: XOR<UserCreateWithoutDeviceInput, UserUncheckedCreateWithoutDeviceInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeviceInput
    upsert?: UserUpsertWithoutDeviceInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeviceInput, UserUpdateWithoutDeviceInput>, UserUncheckedUpdateWithoutDeviceInput>
  }

  export type RefreshTokenUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput | RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput | RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutDeviceInput | RefreshTokenUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput | RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput | RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutDeviceInput | RefreshTokenUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutLanguage_Language_createdByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutLanguage_Language_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutLanguage_Language_deletedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutLanguage_Language_deletedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutLanguage_Language_updatedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutLanguage_Language_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type ServiceProviderTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutLanguageInput, ServiceProviderTranslationUncheckedCreateWithoutLanguageInput> | ServiceProviderTranslationCreateWithoutLanguageInput[] | ServiceProviderTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutLanguageInput | ServiceProviderTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: ServiceProviderTranslationCreateManyLanguageInputEnvelope
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
  }

  export type ServiceTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<ServiceTranslationCreateWithoutLanguageInput, ServiceTranslationUncheckedCreateWithoutLanguageInput> | ServiceTranslationCreateWithoutLanguageInput[] | ServiceTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutLanguageInput | ServiceTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: ServiceTranslationCreateManyLanguageInputEnvelope
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutLanguageInput, ServiceProviderTranslationUncheckedCreateWithoutLanguageInput> | ServiceProviderTranslationCreateWithoutLanguageInput[] | ServiceProviderTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutLanguageInput | ServiceProviderTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: ServiceProviderTranslationCreateManyLanguageInputEnvelope
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
  }

  export type ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<ServiceTranslationCreateWithoutLanguageInput, ServiceTranslationUncheckedCreateWithoutLanguageInput> | ServiceTranslationCreateWithoutLanguageInput[] | ServiceTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutLanguageInput | ServiceTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: ServiceTranslationCreateManyLanguageInputEnvelope
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutLanguageInput | CategoryTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutLanguage_Language_createdByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutLanguage_Language_createdByIdToUserInput
    upsert?: UserUpsertWithoutLanguage_Language_createdByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLanguage_Language_createdByIdToUserInput, UserUpdateWithoutLanguage_Language_createdByIdToUserInput>, UserUncheckedUpdateWithoutLanguage_Language_createdByIdToUserInput>
  }

  export type UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutLanguage_Language_deletedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutLanguage_Language_deletedByIdToUserInput
    upsert?: UserUpsertWithoutLanguage_Language_deletedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLanguage_Language_deletedByIdToUserInput, UserUpdateWithoutLanguage_Language_deletedByIdToUserInput>, UserUncheckedUpdateWithoutLanguage_Language_deletedByIdToUserInput>
  }

  export type UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutLanguage_Language_updatedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutLanguage_Language_updatedByIdToUserInput
    upsert?: UserUpsertWithoutLanguage_Language_updatedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLanguage_Language_updatedByIdToUserInput, UserUpdateWithoutLanguage_Language_updatedByIdToUserInput>, UserUncheckedUpdateWithoutLanguage_Language_updatedByIdToUserInput>
  }

  export type ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutLanguageInput, ServiceProviderTranslationUncheckedCreateWithoutLanguageInput> | ServiceProviderTranslationCreateWithoutLanguageInput[] | ServiceProviderTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutLanguageInput | ServiceProviderTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: ServiceProviderTranslationUpsertWithWhereUniqueWithoutLanguageInput | ServiceProviderTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: ServiceProviderTranslationCreateManyLanguageInputEnvelope
    set?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    disconnect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    delete?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    update?: ServiceProviderTranslationUpdateWithWhereUniqueWithoutLanguageInput | ServiceProviderTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: ServiceProviderTranslationUpdateManyWithWhereWithoutLanguageInput | ServiceProviderTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: ServiceProviderTranslationScalarWhereInput | ServiceProviderTranslationScalarWhereInput[]
  }

  export type ServiceTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<ServiceTranslationCreateWithoutLanguageInput, ServiceTranslationUncheckedCreateWithoutLanguageInput> | ServiceTranslationCreateWithoutLanguageInput[] | ServiceTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutLanguageInput | ServiceTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: ServiceTranslationUpsertWithWhereUniqueWithoutLanguageInput | ServiceTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: ServiceTranslationCreateManyLanguageInputEnvelope
    set?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    disconnect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    delete?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    update?: ServiceTranslationUpdateWithWhereUniqueWithoutLanguageInput | ServiceTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: ServiceTranslationUpdateManyWithWhereWithoutLanguageInput | ServiceTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: ServiceTranslationScalarWhereInput | ServiceTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutLanguageInput | CategoryTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutLanguageInput, ServiceProviderTranslationUncheckedCreateWithoutLanguageInput> | ServiceProviderTranslationCreateWithoutLanguageInput[] | ServiceProviderTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutLanguageInput | ServiceProviderTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: ServiceProviderTranslationUpsertWithWhereUniqueWithoutLanguageInput | ServiceProviderTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: ServiceProviderTranslationCreateManyLanguageInputEnvelope
    set?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    disconnect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    delete?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    update?: ServiceProviderTranslationUpdateWithWhereUniqueWithoutLanguageInput | ServiceProviderTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: ServiceProviderTranslationUpdateManyWithWhereWithoutLanguageInput | ServiceProviderTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: ServiceProviderTranslationScalarWhereInput | ServiceProviderTranslationScalarWhereInput[]
  }

  export type ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<ServiceTranslationCreateWithoutLanguageInput, ServiceTranslationUncheckedCreateWithoutLanguageInput> | ServiceTranslationCreateWithoutLanguageInput[] | ServiceTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutLanguageInput | ServiceTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: ServiceTranslationUpsertWithWhereUniqueWithoutLanguageInput | ServiceTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: ServiceTranslationCreateManyLanguageInputEnvelope
    set?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    disconnect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    delete?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    update?: ServiceTranslationUpdateWithWhereUniqueWithoutLanguageInput | ServiceTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: ServiceTranslationUpdateManyWithWhereWithoutLanguageInput | ServiceTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: ServiceTranslationScalarWhereInput | ServiceTranslationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutNotificationInput = {
    create?: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutNotificationNestedInput = {
    create?: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationInput
    upsert?: UserUpsertWithoutNotificationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationInput, UserUpdateWithoutNotificationInput>, UserUncheckedUpdateWithoutNotificationInput>
  }

  export type CustomerProfileCreateNestedOneWithoutPackageRecommendationInput = {
    create?: XOR<CustomerProfileCreateWithoutPackageRecommendationInput, CustomerProfileUncheckedCreateWithoutPackageRecommendationInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutPackageRecommendationInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type CustomerProfileUpdateOneRequiredWithoutPackageRecommendationNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutPackageRecommendationInput, CustomerProfileUncheckedCreateWithoutPackageRecommendationInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutPackageRecommendationInput
    upsert?: CustomerProfileUpsertWithoutPackageRecommendationInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutPackageRecommendationInput, CustomerProfileUpdateWithoutPackageRecommendationInput>, CustomerProfileUncheckedUpdateWithoutPackageRecommendationInput>
  }

  export type UserCreateNestedOneWithoutPermission_Permission_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutPermission_Permission_createdByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPermission_Permission_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPermission_Permission_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutPermission_Permission_deletedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPermission_Permission_deletedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPermission_Permission_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutPermission_Permission_updatedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPermission_Permission_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type RoleCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput> | RoleCreateWithoutPermissionInput[] | RoleUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionInput | RoleCreateOrConnectWithoutPermissionInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput> | RoleCreateWithoutPermissionInput[] | RoleUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionInput | RoleCreateOrConnectWithoutPermissionInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type EnumHTTPMethodFieldUpdateOperationsInput = {
    set?: $Enums.HTTPMethod
  }

  export type UserUpdateOneWithoutPermission_Permission_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutPermission_Permission_createdByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPermission_Permission_createdByIdToUserInput
    upsert?: UserUpsertWithoutPermission_Permission_createdByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPermission_Permission_createdByIdToUserInput, UserUpdateWithoutPermission_Permission_createdByIdToUserInput>, UserUncheckedUpdateWithoutPermission_Permission_createdByIdToUserInput>
  }

  export type UserUpdateOneWithoutPermission_Permission_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutPermission_Permission_deletedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPermission_Permission_deletedByIdToUserInput
    upsert?: UserUpsertWithoutPermission_Permission_deletedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPermission_Permission_deletedByIdToUserInput, UserUpdateWithoutPermission_Permission_deletedByIdToUserInput>, UserUncheckedUpdateWithoutPermission_Permission_deletedByIdToUserInput>
  }

  export type UserUpdateOneWithoutPermission_Permission_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutPermission_Permission_updatedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutPermission_Permission_updatedByIdToUserInput
    upsert?: UserUpsertWithoutPermission_Permission_updatedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPermission_Permission_updatedByIdToUserInput, UserUpdateWithoutPermission_Permission_updatedByIdToUserInput>, UserUncheckedUpdateWithoutPermission_Permission_updatedByIdToUserInput>
  }

  export type RoleUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput> | RoleCreateWithoutPermissionInput[] | RoleUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionInput | RoleCreateOrConnectWithoutPermissionInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutPermissionInput | RoleUpsertWithWhereUniqueWithoutPermissionInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutPermissionInput | RoleUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutPermissionInput | RoleUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput> | RoleCreateWithoutPermissionInput[] | RoleUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionInput | RoleCreateOrConnectWithoutPermissionInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutPermissionInput | RoleUpsertWithWhereUniqueWithoutPermissionInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutPermissionInput | RoleUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutPermissionInput | RoleUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type CustomerProfileCreateNestedOneWithoutRecurringBookingInput = {
    create?: XOR<CustomerProfileCreateWithoutRecurringBookingInput, CustomerProfileUncheckedCreateWithoutRecurringBookingInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutRecurringBookingInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type ServiceCreateNestedOneWithoutRecurringBookingInput = {
    create?: XOR<ServiceCreateWithoutRecurringBookingInput, ServiceUncheckedCreateWithoutRecurringBookingInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutRecurringBookingInput
    connect?: ServiceWhereUniqueInput
  }

  export type CustomerProfileUpdateOneRequiredWithoutRecurringBookingNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutRecurringBookingInput, CustomerProfileUncheckedCreateWithoutRecurringBookingInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutRecurringBookingInput
    upsert?: CustomerProfileUpsertWithoutRecurringBookingInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutRecurringBookingInput, CustomerProfileUpdateWithoutRecurringBookingInput>, CustomerProfileUncheckedUpdateWithoutRecurringBookingInput>
  }

  export type ServiceUpdateOneRequiredWithoutRecurringBookingNestedInput = {
    create?: XOR<ServiceCreateWithoutRecurringBookingInput, ServiceUncheckedCreateWithoutRecurringBookingInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutRecurringBookingInput
    upsert?: ServiceUpsertWithoutRecurringBookingInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutRecurringBookingInput, ServiceUpdateWithoutRecurringBookingInput>, ServiceUncheckedUpdateWithoutRecurringBookingInput>
  }

  export type DeviceCreateNestedOneWithoutRefreshTokenInput = {
    create?: XOR<DeviceCreateWithoutRefreshTokenInput, DeviceUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: DeviceCreateOrConnectWithoutRefreshTokenInput
    connect?: DeviceWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRefreshTokenInput = {
    create?: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokenInput
    connect?: UserWhereUniqueInput
  }

  export type DeviceUpdateOneRequiredWithoutRefreshTokenNestedInput = {
    create?: XOR<DeviceCreateWithoutRefreshTokenInput, DeviceUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: DeviceCreateOrConnectWithoutRefreshTokenInput
    upsert?: DeviceUpsertWithoutRefreshTokenInput
    connect?: DeviceWhereUniqueInput
    update?: XOR<XOR<DeviceUpdateToOneWithWhereWithoutRefreshTokenInput, DeviceUpdateWithoutRefreshTokenInput>, DeviceUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type UserUpdateOneRequiredWithoutRefreshTokenNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokenInput
    upsert?: UserUpsertWithoutRefreshTokenInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokenInput, UserUpdateWithoutRefreshTokenInput>, UserUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type CustomerProfileCreateNestedOneWithoutReviewInput = {
    create?: XOR<CustomerProfileCreateWithoutReviewInput, CustomerProfileUncheckedCreateWithoutReviewInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutReviewInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type ServiceCreateNestedOneWithoutReviewInput = {
    create?: XOR<ServiceCreateWithoutReviewInput, ServiceUncheckedCreateWithoutReviewInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutReviewInput
    connect?: ServiceWhereUniqueInput
  }

  export type StaffCreateNestedOneWithoutReviewInput = {
    create?: XOR<StaffCreateWithoutReviewInput, StaffUncheckedCreateWithoutReviewInput>
    connectOrCreate?: StaffCreateOrConnectWithoutReviewInput
    connect?: StaffWhereUniqueInput
  }

  export type CustomerProfileUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutReviewInput, CustomerProfileUncheckedCreateWithoutReviewInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutReviewInput
    upsert?: CustomerProfileUpsertWithoutReviewInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutReviewInput, CustomerProfileUpdateWithoutReviewInput>, CustomerProfileUncheckedUpdateWithoutReviewInput>
  }

  export type ServiceUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<ServiceCreateWithoutReviewInput, ServiceUncheckedCreateWithoutReviewInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutReviewInput
    upsert?: ServiceUpsertWithoutReviewInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutReviewInput, ServiceUpdateWithoutReviewInput>, ServiceUncheckedUpdateWithoutReviewInput>
  }

  export type StaffUpdateOneRequiredWithoutReviewNestedInput = {
    create?: XOR<StaffCreateWithoutReviewInput, StaffUncheckedCreateWithoutReviewInput>
    connectOrCreate?: StaffCreateOrConnectWithoutReviewInput
    upsert?: StaffUpsertWithoutReviewInput
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutReviewInput, StaffUpdateWithoutReviewInput>, StaffUncheckedUpdateWithoutReviewInput>
  }

  export type CustomerProfileCreateNestedOneWithoutRewardPointInput = {
    create?: XOR<CustomerProfileCreateWithoutRewardPointInput, CustomerProfileUncheckedCreateWithoutRewardPointInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutRewardPointInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type CustomerProfileUpdateOneRequiredWithoutRewardPointNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutRewardPointInput, CustomerProfileUncheckedCreateWithoutRewardPointInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutRewardPointInput
    upsert?: CustomerProfileUpsertWithoutRewardPointInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutRewardPointInput, CustomerProfileUpdateWithoutRewardPointInput>, CustomerProfileUncheckedUpdateWithoutRewardPointInput>
  }

  export type UserCreateNestedOneWithoutRole_Role_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutRole_Role_createdByIdToUserInput, UserUncheckedCreateWithoutRole_Role_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRole_Role_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRole_Role_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutRole_Role_deletedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRole_Role_deletedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRole_Role_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutRole_Role_updatedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRole_Role_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type PermissionCreateNestedManyWithoutRoleInput = {
    create?: XOR<PermissionCreateWithoutRoleInput, PermissionUncheckedCreateWithoutRoleInput> | PermissionCreateWithoutRoleInput[] | PermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRoleInput | PermissionCreateOrConnectWithoutRoleInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutRole_UserRolesInput = {
    create?: XOR<UserCreateWithoutRole_UserRolesInput, UserUncheckedCreateWithoutRole_UserRolesInput> | UserCreateWithoutRole_UserRolesInput[] | UserUncheckedCreateWithoutRole_UserRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRole_UserRolesInput | UserCreateOrConnectWithoutRole_UserRolesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<PermissionCreateWithoutRoleInput, PermissionUncheckedCreateWithoutRoleInput> | PermissionCreateWithoutRoleInput[] | PermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRoleInput | PermissionCreateOrConnectWithoutRoleInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRole_UserRolesInput = {
    create?: XOR<UserCreateWithoutRole_UserRolesInput, UserUncheckedCreateWithoutRole_UserRolesInput> | UserCreateWithoutRole_UserRolesInput[] | UserUncheckedCreateWithoutRole_UserRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRole_UserRolesInput | UserCreateOrConnectWithoutRole_UserRolesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutRole_Role_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutRole_Role_createdByIdToUserInput, UserUncheckedCreateWithoutRole_Role_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRole_Role_createdByIdToUserInput
    upsert?: UserUpsertWithoutRole_Role_createdByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRole_Role_createdByIdToUserInput, UserUpdateWithoutRole_Role_createdByIdToUserInput>, UserUncheckedUpdateWithoutRole_Role_createdByIdToUserInput>
  }

  export type UserUpdateOneWithoutRole_Role_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutRole_Role_deletedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRole_Role_deletedByIdToUserInput
    upsert?: UserUpsertWithoutRole_Role_deletedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRole_Role_deletedByIdToUserInput, UserUpdateWithoutRole_Role_deletedByIdToUserInput>, UserUncheckedUpdateWithoutRole_Role_deletedByIdToUserInput>
  }

  export type UserUpdateOneWithoutRole_Role_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutRole_Role_updatedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutRole_Role_updatedByIdToUserInput
    upsert?: UserUpsertWithoutRole_Role_updatedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRole_Role_updatedByIdToUserInput, UserUpdateWithoutRole_Role_updatedByIdToUserInput>, UserUncheckedUpdateWithoutRole_Role_updatedByIdToUserInput>
  }

  export type PermissionUpdateManyWithoutRoleNestedInput = {
    create?: XOR<PermissionCreateWithoutRoleInput, PermissionUncheckedCreateWithoutRoleInput> | PermissionCreateWithoutRoleInput[] | PermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRoleInput | PermissionCreateOrConnectWithoutRoleInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutRoleInput | PermissionUpsertWithWhereUniqueWithoutRoleInput[]
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutRoleInput | PermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutRoleInput | PermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type UserUpdateManyWithoutRole_UserRolesNestedInput = {
    create?: XOR<UserCreateWithoutRole_UserRolesInput, UserUncheckedCreateWithoutRole_UserRolesInput> | UserCreateWithoutRole_UserRolesInput[] | UserUncheckedCreateWithoutRole_UserRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRole_UserRolesInput | UserCreateOrConnectWithoutRole_UserRolesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRole_UserRolesInput | UserUpsertWithWhereUniqueWithoutRole_UserRolesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRole_UserRolesInput | UserUpdateWithWhereUniqueWithoutRole_UserRolesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRole_UserRolesInput | UserUpdateManyWithWhereWithoutRole_UserRolesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<PermissionCreateWithoutRoleInput, PermissionUncheckedCreateWithoutRoleInput> | PermissionCreateWithoutRoleInput[] | PermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRoleInput | PermissionCreateOrConnectWithoutRoleInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutRoleInput | PermissionUpsertWithWhereUniqueWithoutRoleInput[]
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutRoleInput | PermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutRoleInput | PermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRole_UserRolesNestedInput = {
    create?: XOR<UserCreateWithoutRole_UserRolesInput, UserUncheckedCreateWithoutRole_UserRolesInput> | UserCreateWithoutRole_UserRolesInput[] | UserUncheckedCreateWithoutRole_UserRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRole_UserRolesInput | UserCreateOrConnectWithoutRole_UserRolesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRole_UserRolesInput | UserUpsertWithWhereUniqueWithoutRole_UserRolesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRole_UserRolesInput | UserUpdateWithWhereUniqueWithoutRole_UserRolesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRole_UserRolesInput | UserUpdateManyWithWhereWithoutRole_UserRolesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ServiceCreateimagesInput = {
    set: string[]
  }

  export type ProposedServiceCreateNestedManyWithoutServiceInput = {
    create?: XOR<ProposedServiceCreateWithoutServiceInput, ProposedServiceUncheckedCreateWithoutServiceInput> | ProposedServiceCreateWithoutServiceInput[] | ProposedServiceUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutServiceInput | ProposedServiceCreateOrConnectWithoutServiceInput[]
    createMany?: ProposedServiceCreateManyServiceInputEnvelope
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
  }

  export type RecurringBookingCreateNestedManyWithoutServiceInput = {
    create?: XOR<RecurringBookingCreateWithoutServiceInput, RecurringBookingUncheckedCreateWithoutServiceInput> | RecurringBookingCreateWithoutServiceInput[] | RecurringBookingUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutServiceInput | RecurringBookingCreateOrConnectWithoutServiceInput[]
    createMany?: RecurringBookingCreateManyServiceInputEnvelope
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutServiceInput = {
    create?: XOR<ReviewCreateWithoutServiceInput, ReviewUncheckedCreateWithoutServiceInput> | ReviewCreateWithoutServiceInput[] | ReviewUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutServiceInput | ReviewCreateOrConnectWithoutServiceInput[]
    createMany?: ReviewCreateManyServiceInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type CategoryCreateNestedOneWithoutServiceInput = {
    create?: XOR<CategoryCreateWithoutServiceInput, CategoryUncheckedCreateWithoutServiceInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutServiceInput
    connect?: CategoryWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutService_Service_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutService_Service_createdByIdToUserInput, UserUncheckedCreateWithoutService_Service_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutService_Service_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutService_Service_deletedByIdToUserInput, UserUncheckedCreateWithoutService_Service_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutService_Service_deletedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type ServiceProviderCreateNestedOneWithoutServiceInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceInput, ServiceProviderUncheckedCreateWithoutServiceInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutService_Service_updatedByIdToUserInput, UserUncheckedCreateWithoutService_Service_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutService_Service_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type ServiceTranslationCreateNestedManyWithoutServiceInput = {
    create?: XOR<ServiceTranslationCreateWithoutServiceInput, ServiceTranslationUncheckedCreateWithoutServiceInput> | ServiceTranslationCreateWithoutServiceInput[] | ServiceTranslationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutServiceInput | ServiceTranslationCreateOrConnectWithoutServiceInput[]
    createMany?: ServiceTranslationCreateManyServiceInputEnvelope
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
  }

  export type Service_ServiceItemsCreateNestedManyWithoutServiceInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceInput, Service_ServiceItemsUncheckedCreateWithoutServiceInput> | Service_ServiceItemsCreateWithoutServiceInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceInput | Service_ServiceItemsCreateOrConnectWithoutServiceInput[]
    createMany?: Service_ServiceItemsCreateManyServiceInputEnvelope
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
  }

  export type ProposedServiceUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<ProposedServiceCreateWithoutServiceInput, ProposedServiceUncheckedCreateWithoutServiceInput> | ProposedServiceCreateWithoutServiceInput[] | ProposedServiceUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutServiceInput | ProposedServiceCreateOrConnectWithoutServiceInput[]
    createMany?: ProposedServiceCreateManyServiceInputEnvelope
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
  }

  export type RecurringBookingUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<RecurringBookingCreateWithoutServiceInput, RecurringBookingUncheckedCreateWithoutServiceInput> | RecurringBookingCreateWithoutServiceInput[] | RecurringBookingUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutServiceInput | RecurringBookingCreateOrConnectWithoutServiceInput[]
    createMany?: RecurringBookingCreateManyServiceInputEnvelope
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<ReviewCreateWithoutServiceInput, ReviewUncheckedCreateWithoutServiceInput> | ReviewCreateWithoutServiceInput[] | ReviewUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutServiceInput | ReviewCreateOrConnectWithoutServiceInput[]
    createMany?: ReviewCreateManyServiceInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<ServiceTranslationCreateWithoutServiceInput, ServiceTranslationUncheckedCreateWithoutServiceInput> | ServiceTranslationCreateWithoutServiceInput[] | ServiceTranslationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutServiceInput | ServiceTranslationCreateOrConnectWithoutServiceInput[]
    createMany?: ServiceTranslationCreateManyServiceInputEnvelope
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
  }

  export type Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceInput, Service_ServiceItemsUncheckedCreateWithoutServiceInput> | Service_ServiceItemsCreateWithoutServiceInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceInput | Service_ServiceItemsCreateOrConnectWithoutServiceInput[]
    createMany?: Service_ServiceItemsCreateManyServiceInputEnvelope
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ServiceUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumUnitFieldUpdateOperationsInput = {
    set?: $Enums.Unit
  }

  export type ProposedServiceUpdateManyWithoutServiceNestedInput = {
    create?: XOR<ProposedServiceCreateWithoutServiceInput, ProposedServiceUncheckedCreateWithoutServiceInput> | ProposedServiceCreateWithoutServiceInput[] | ProposedServiceUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutServiceInput | ProposedServiceCreateOrConnectWithoutServiceInput[]
    upsert?: ProposedServiceUpsertWithWhereUniqueWithoutServiceInput | ProposedServiceUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: ProposedServiceCreateManyServiceInputEnvelope
    set?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    disconnect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    delete?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    update?: ProposedServiceUpdateWithWhereUniqueWithoutServiceInput | ProposedServiceUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: ProposedServiceUpdateManyWithWhereWithoutServiceInput | ProposedServiceUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: ProposedServiceScalarWhereInput | ProposedServiceScalarWhereInput[]
  }

  export type RecurringBookingUpdateManyWithoutServiceNestedInput = {
    create?: XOR<RecurringBookingCreateWithoutServiceInput, RecurringBookingUncheckedCreateWithoutServiceInput> | RecurringBookingCreateWithoutServiceInput[] | RecurringBookingUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutServiceInput | RecurringBookingCreateOrConnectWithoutServiceInput[]
    upsert?: RecurringBookingUpsertWithWhereUniqueWithoutServiceInput | RecurringBookingUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: RecurringBookingCreateManyServiceInputEnvelope
    set?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    disconnect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    delete?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    update?: RecurringBookingUpdateWithWhereUniqueWithoutServiceInput | RecurringBookingUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: RecurringBookingUpdateManyWithWhereWithoutServiceInput | RecurringBookingUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: RecurringBookingScalarWhereInput | RecurringBookingScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutServiceNestedInput = {
    create?: XOR<ReviewCreateWithoutServiceInput, ReviewUncheckedCreateWithoutServiceInput> | ReviewCreateWithoutServiceInput[] | ReviewUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutServiceInput | ReviewCreateOrConnectWithoutServiceInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutServiceInput | ReviewUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: ReviewCreateManyServiceInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutServiceInput | ReviewUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutServiceInput | ReviewUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type CategoryUpdateOneRequiredWithoutServiceNestedInput = {
    create?: XOR<CategoryCreateWithoutServiceInput, CategoryUncheckedCreateWithoutServiceInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutServiceInput
    upsert?: CategoryUpsertWithoutServiceInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutServiceInput, CategoryUpdateWithoutServiceInput>, CategoryUncheckedUpdateWithoutServiceInput>
  }

  export type UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutService_Service_createdByIdToUserInput, UserUncheckedCreateWithoutService_Service_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutService_Service_createdByIdToUserInput
    upsert?: UserUpsertWithoutService_Service_createdByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutService_Service_createdByIdToUserInput, UserUpdateWithoutService_Service_createdByIdToUserInput>, UserUncheckedUpdateWithoutService_Service_createdByIdToUserInput>
  }

  export type UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutService_Service_deletedByIdToUserInput, UserUncheckedCreateWithoutService_Service_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutService_Service_deletedByIdToUserInput
    upsert?: UserUpsertWithoutService_Service_deletedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutService_Service_deletedByIdToUserInput, UserUpdateWithoutService_Service_deletedByIdToUserInput>, UserUncheckedUpdateWithoutService_Service_deletedByIdToUserInput>
  }

  export type ServiceProviderUpdateOneRequiredWithoutServiceNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceInput, ServiceProviderUncheckedCreateWithoutServiceInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceInput
    upsert?: ServiceProviderUpsertWithoutServiceInput
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutServiceInput, ServiceProviderUpdateWithoutServiceInput>, ServiceProviderUncheckedUpdateWithoutServiceInput>
  }

  export type UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutService_Service_updatedByIdToUserInput, UserUncheckedCreateWithoutService_Service_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutService_Service_updatedByIdToUserInput
    upsert?: UserUpsertWithoutService_Service_updatedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutService_Service_updatedByIdToUserInput, UserUpdateWithoutService_Service_updatedByIdToUserInput>, UserUncheckedUpdateWithoutService_Service_updatedByIdToUserInput>
  }

  export type ServiceTranslationUpdateManyWithoutServiceNestedInput = {
    create?: XOR<ServiceTranslationCreateWithoutServiceInput, ServiceTranslationUncheckedCreateWithoutServiceInput> | ServiceTranslationCreateWithoutServiceInput[] | ServiceTranslationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutServiceInput | ServiceTranslationCreateOrConnectWithoutServiceInput[]
    upsert?: ServiceTranslationUpsertWithWhereUniqueWithoutServiceInput | ServiceTranslationUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: ServiceTranslationCreateManyServiceInputEnvelope
    set?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    disconnect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    delete?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    update?: ServiceTranslationUpdateWithWhereUniqueWithoutServiceInput | ServiceTranslationUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: ServiceTranslationUpdateManyWithWhereWithoutServiceInput | ServiceTranslationUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: ServiceTranslationScalarWhereInput | ServiceTranslationScalarWhereInput[]
  }

  export type Service_ServiceItemsUpdateManyWithoutServiceNestedInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceInput, Service_ServiceItemsUncheckedCreateWithoutServiceInput> | Service_ServiceItemsCreateWithoutServiceInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceInput | Service_ServiceItemsCreateOrConnectWithoutServiceInput[]
    upsert?: Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceInput | Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: Service_ServiceItemsCreateManyServiceInputEnvelope
    set?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    disconnect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    delete?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    update?: Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceInput | Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: Service_ServiceItemsUpdateManyWithWhereWithoutServiceInput | Service_ServiceItemsUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: Service_ServiceItemsScalarWhereInput | Service_ServiceItemsScalarWhereInput[]
  }

  export type ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<ProposedServiceCreateWithoutServiceInput, ProposedServiceUncheckedCreateWithoutServiceInput> | ProposedServiceCreateWithoutServiceInput[] | ProposedServiceUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ProposedServiceCreateOrConnectWithoutServiceInput | ProposedServiceCreateOrConnectWithoutServiceInput[]
    upsert?: ProposedServiceUpsertWithWhereUniqueWithoutServiceInput | ProposedServiceUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: ProposedServiceCreateManyServiceInputEnvelope
    set?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    disconnect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    delete?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    connect?: ProposedServiceWhereUniqueInput | ProposedServiceWhereUniqueInput[]
    update?: ProposedServiceUpdateWithWhereUniqueWithoutServiceInput | ProposedServiceUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: ProposedServiceUpdateManyWithWhereWithoutServiceInput | ProposedServiceUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: ProposedServiceScalarWhereInput | ProposedServiceScalarWhereInput[]
  }

  export type RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<RecurringBookingCreateWithoutServiceInput, RecurringBookingUncheckedCreateWithoutServiceInput> | RecurringBookingCreateWithoutServiceInput[] | RecurringBookingUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RecurringBookingCreateOrConnectWithoutServiceInput | RecurringBookingCreateOrConnectWithoutServiceInput[]
    upsert?: RecurringBookingUpsertWithWhereUniqueWithoutServiceInput | RecurringBookingUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: RecurringBookingCreateManyServiceInputEnvelope
    set?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    disconnect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    delete?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    connect?: RecurringBookingWhereUniqueInput | RecurringBookingWhereUniqueInput[]
    update?: RecurringBookingUpdateWithWhereUniqueWithoutServiceInput | RecurringBookingUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: RecurringBookingUpdateManyWithWhereWithoutServiceInput | RecurringBookingUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: RecurringBookingScalarWhereInput | RecurringBookingScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<ReviewCreateWithoutServiceInput, ReviewUncheckedCreateWithoutServiceInput> | ReviewCreateWithoutServiceInput[] | ReviewUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutServiceInput | ReviewCreateOrConnectWithoutServiceInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutServiceInput | ReviewUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: ReviewCreateManyServiceInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutServiceInput | ReviewUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutServiceInput | ReviewUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<ServiceTranslationCreateWithoutServiceInput, ServiceTranslationUncheckedCreateWithoutServiceInput> | ServiceTranslationCreateWithoutServiceInput[] | ServiceTranslationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: ServiceTranslationCreateOrConnectWithoutServiceInput | ServiceTranslationCreateOrConnectWithoutServiceInput[]
    upsert?: ServiceTranslationUpsertWithWhereUniqueWithoutServiceInput | ServiceTranslationUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: ServiceTranslationCreateManyServiceInputEnvelope
    set?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    disconnect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    delete?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    connect?: ServiceTranslationWhereUniqueInput | ServiceTranslationWhereUniqueInput[]
    update?: ServiceTranslationUpdateWithWhereUniqueWithoutServiceInput | ServiceTranslationUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: ServiceTranslationUpdateManyWithWhereWithoutServiceInput | ServiceTranslationUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: ServiceTranslationScalarWhereInput | ServiceTranslationScalarWhereInput[]
  }

  export type Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceInput, Service_ServiceItemsUncheckedCreateWithoutServiceInput> | Service_ServiceItemsCreateWithoutServiceInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceInput | Service_ServiceItemsCreateOrConnectWithoutServiceInput[]
    upsert?: Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceInput | Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: Service_ServiceItemsCreateManyServiceInputEnvelope
    set?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    disconnect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    delete?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    update?: Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceInput | Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: Service_ServiceItemsUpdateManyWithWhereWithoutServiceInput | Service_ServiceItemsUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: Service_ServiceItemsScalarWhereInput | Service_ServiceItemsScalarWhereInput[]
  }

  export type BookingCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<BookingCreateWithoutServiceProviderInput, BookingUncheckedCreateWithoutServiceProviderInput> | BookingCreateWithoutServiceProviderInput[] | BookingUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutServiceProviderInput | BookingCreateOrConnectWithoutServiceProviderInput[]
    createMany?: BookingCreateManyServiceProviderInputEnvelope
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceCreateWithoutServiceProviderInput, ServiceUncheckedCreateWithoutServiceProviderInput> | ServiceCreateWithoutServiceProviderInput[] | ServiceUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutServiceProviderInput | ServiceCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceCreateManyServiceProviderInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceItemCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceItemCreateWithoutServiceProviderInput, ServiceItemUncheckedCreateWithoutServiceProviderInput> | ServiceItemCreateWithoutServiceProviderInput[] | ServiceItemUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceItemCreateOrConnectWithoutServiceProviderInput | ServiceItemCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceItemCreateManyServiceProviderInputEnvelope
    connect?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    create?: XOR<UserCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutServiceProvider_ServiceProvider_userIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    create?: XOR<UserCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput> | ServiceProviderTranslationCreateWithoutServiceProviderInput[] | ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput | ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceProviderTranslationCreateManyServiceProviderInputEnvelope
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
  }

  export type ServiceRequestCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceRequestCreateWithoutServiceProviderInput, ServiceRequestUncheckedCreateWithoutServiceProviderInput> | ServiceRequestCreateWithoutServiceProviderInput[] | ServiceRequestUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutServiceProviderInput | ServiceRequestCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceRequestCreateManyServiceProviderInputEnvelope
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
  }

  export type StaffCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<StaffCreateWithoutServiceProviderInput, StaffUncheckedCreateWithoutServiceProviderInput> | StaffCreateWithoutServiceProviderInput[] | StaffUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: StaffCreateOrConnectWithoutServiceProviderInput | StaffCreateOrConnectWithoutServiceProviderInput[]
    createMany?: StaffCreateManyServiceProviderInputEnvelope
    connect?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
  }

  export type BookingUncheckedCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<BookingCreateWithoutServiceProviderInput, BookingUncheckedCreateWithoutServiceProviderInput> | BookingCreateWithoutServiceProviderInput[] | BookingUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutServiceProviderInput | BookingCreateOrConnectWithoutServiceProviderInput[]
    createMany?: BookingCreateManyServiceProviderInputEnvelope
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceCreateWithoutServiceProviderInput, ServiceUncheckedCreateWithoutServiceProviderInput> | ServiceCreateWithoutServiceProviderInput[] | ServiceUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutServiceProviderInput | ServiceCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceCreateManyServiceProviderInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceItemCreateWithoutServiceProviderInput, ServiceItemUncheckedCreateWithoutServiceProviderInput> | ServiceItemCreateWithoutServiceProviderInput[] | ServiceItemUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceItemCreateOrConnectWithoutServiceProviderInput | ServiceItemCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceItemCreateManyServiceProviderInputEnvelope
    connect?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
  }

  export type ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput> | ServiceProviderTranslationCreateWithoutServiceProviderInput[] | ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput | ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceProviderTranslationCreateManyServiceProviderInputEnvelope
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
  }

  export type ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<ServiceRequestCreateWithoutServiceProviderInput, ServiceRequestUncheckedCreateWithoutServiceProviderInput> | ServiceRequestCreateWithoutServiceProviderInput[] | ServiceRequestUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutServiceProviderInput | ServiceRequestCreateOrConnectWithoutServiceProviderInput[]
    createMany?: ServiceRequestCreateManyServiceProviderInputEnvelope
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
  }

  export type StaffUncheckedCreateNestedManyWithoutServiceProviderInput = {
    create?: XOR<StaffCreateWithoutServiceProviderInput, StaffUncheckedCreateWithoutServiceProviderInput> | StaffCreateWithoutServiceProviderInput[] | StaffUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: StaffCreateOrConnectWithoutServiceProviderInput | StaffCreateOrConnectWithoutServiceProviderInput[]
    createMany?: StaffCreateManyServiceProviderInputEnvelope
    connect?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
  }

  export type EnumCompanyTypeFieldUpdateOperationsInput = {
    set?: $Enums.CompanyType
  }

  export type EnumVerificationStatusFieldUpdateOperationsInput = {
    set?: $Enums.VerificationStatus
  }

  export type BookingUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<BookingCreateWithoutServiceProviderInput, BookingUncheckedCreateWithoutServiceProviderInput> | BookingCreateWithoutServiceProviderInput[] | BookingUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutServiceProviderInput | BookingCreateOrConnectWithoutServiceProviderInput[]
    upsert?: BookingUpsertWithWhereUniqueWithoutServiceProviderInput | BookingUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: BookingCreateManyServiceProviderInputEnvelope
    set?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    disconnect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    delete?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    update?: BookingUpdateWithWhereUniqueWithoutServiceProviderInput | BookingUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: BookingUpdateManyWithWhereWithoutServiceProviderInput | BookingUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: BookingScalarWhereInput | BookingScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceCreateWithoutServiceProviderInput, ServiceUncheckedCreateWithoutServiceProviderInput> | ServiceCreateWithoutServiceProviderInput[] | ServiceUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutServiceProviderInput | ServiceCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceCreateManyServiceProviderInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutServiceProviderInput | ServiceUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceItemUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceItemCreateWithoutServiceProviderInput, ServiceItemUncheckedCreateWithoutServiceProviderInput> | ServiceItemCreateWithoutServiceProviderInput[] | ServiceItemUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceItemCreateOrConnectWithoutServiceProviderInput | ServiceItemCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceItemUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceItemUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceItemCreateManyServiceProviderInputEnvelope
    set?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    disconnect?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    delete?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    connect?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    update?: ServiceItemUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceItemUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceItemUpdateManyWithWhereWithoutServiceProviderInput | ServiceItemUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceItemScalarWhereInput | ServiceItemScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutServiceProvider_ServiceProvider_userIdToUserInput
    upsert?: UserUpsertWithoutServiceProvider_ServiceProvider_userIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput>, UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
  }

  export type UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    upsert?: UserUpsertWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>, UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
  }

  export type ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput> | ServiceProviderTranslationCreateWithoutServiceProviderInput[] | ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput | ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceProviderTranslationUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceProviderTranslationUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceProviderTranslationCreateManyServiceProviderInputEnvelope
    set?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    disconnect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    delete?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    update?: ServiceProviderTranslationUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceProviderTranslationUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceProviderTranslationUpdateManyWithWhereWithoutServiceProviderInput | ServiceProviderTranslationUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceProviderTranslationScalarWhereInput | ServiceProviderTranslationScalarWhereInput[]
  }

  export type ServiceRequestUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutServiceProviderInput, ServiceRequestUncheckedCreateWithoutServiceProviderInput> | ServiceRequestCreateWithoutServiceProviderInput[] | ServiceRequestUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutServiceProviderInput | ServiceRequestCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceRequestUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceRequestUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceRequestCreateManyServiceProviderInputEnvelope
    set?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    disconnect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    delete?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    update?: ServiceRequestUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceRequestUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceRequestUpdateManyWithWhereWithoutServiceProviderInput | ServiceRequestUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
  }

  export type StaffUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<StaffCreateWithoutServiceProviderInput, StaffUncheckedCreateWithoutServiceProviderInput> | StaffCreateWithoutServiceProviderInput[] | StaffUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: StaffCreateOrConnectWithoutServiceProviderInput | StaffCreateOrConnectWithoutServiceProviderInput[]
    upsert?: StaffUpsertWithWhereUniqueWithoutServiceProviderInput | StaffUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: StaffCreateManyServiceProviderInputEnvelope
    set?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    disconnect?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    delete?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    connect?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    update?: StaffUpdateWithWhereUniqueWithoutServiceProviderInput | StaffUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: StaffUpdateManyWithWhereWithoutServiceProviderInput | StaffUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: StaffScalarWhereInput | StaffScalarWhereInput[]
  }

  export type BookingUncheckedUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<BookingCreateWithoutServiceProviderInput, BookingUncheckedCreateWithoutServiceProviderInput> | BookingCreateWithoutServiceProviderInput[] | BookingUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: BookingCreateOrConnectWithoutServiceProviderInput | BookingCreateOrConnectWithoutServiceProviderInput[]
    upsert?: BookingUpsertWithWhereUniqueWithoutServiceProviderInput | BookingUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: BookingCreateManyServiceProviderInputEnvelope
    set?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    disconnect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    delete?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    connect?: BookingWhereUniqueInput | BookingWhereUniqueInput[]
    update?: BookingUpdateWithWhereUniqueWithoutServiceProviderInput | BookingUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: BookingUpdateManyWithWhereWithoutServiceProviderInput | BookingUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: BookingScalarWhereInput | BookingScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceCreateWithoutServiceProviderInput, ServiceUncheckedCreateWithoutServiceProviderInput> | ServiceCreateWithoutServiceProviderInput[] | ServiceUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutServiceProviderInput | ServiceCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceCreateManyServiceProviderInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutServiceProviderInput | ServiceUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceItemCreateWithoutServiceProviderInput, ServiceItemUncheckedCreateWithoutServiceProviderInput> | ServiceItemCreateWithoutServiceProviderInput[] | ServiceItemUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceItemCreateOrConnectWithoutServiceProviderInput | ServiceItemCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceItemUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceItemUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceItemCreateManyServiceProviderInputEnvelope
    set?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    disconnect?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    delete?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    connect?: ServiceItemWhereUniqueInput | ServiceItemWhereUniqueInput[]
    update?: ServiceItemUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceItemUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceItemUpdateManyWithWhereWithoutServiceProviderInput | ServiceItemUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceItemScalarWhereInput | ServiceItemScalarWhereInput[]
  }

  export type ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceProviderTranslationCreateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput> | ServiceProviderTranslationCreateWithoutServiceProviderInput[] | ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput | ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceProviderTranslationUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceProviderTranslationUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceProviderTranslationCreateManyServiceProviderInputEnvelope
    set?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    disconnect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    delete?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    connect?: ServiceProviderTranslationWhereUniqueInput | ServiceProviderTranslationWhereUniqueInput[]
    update?: ServiceProviderTranslationUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceProviderTranslationUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceProviderTranslationUpdateManyWithWhereWithoutServiceProviderInput | ServiceProviderTranslationUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceProviderTranslationScalarWhereInput | ServiceProviderTranslationScalarWhereInput[]
  }

  export type ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<ServiceRequestCreateWithoutServiceProviderInput, ServiceRequestUncheckedCreateWithoutServiceProviderInput> | ServiceRequestCreateWithoutServiceProviderInput[] | ServiceRequestUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: ServiceRequestCreateOrConnectWithoutServiceProviderInput | ServiceRequestCreateOrConnectWithoutServiceProviderInput[]
    upsert?: ServiceRequestUpsertWithWhereUniqueWithoutServiceProviderInput | ServiceRequestUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: ServiceRequestCreateManyServiceProviderInputEnvelope
    set?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    disconnect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    delete?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    connect?: ServiceRequestWhereUniqueInput | ServiceRequestWhereUniqueInput[]
    update?: ServiceRequestUpdateWithWhereUniqueWithoutServiceProviderInput | ServiceRequestUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: ServiceRequestUpdateManyWithWhereWithoutServiceProviderInput | ServiceRequestUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
  }

  export type StaffUncheckedUpdateManyWithoutServiceProviderNestedInput = {
    create?: XOR<StaffCreateWithoutServiceProviderInput, StaffUncheckedCreateWithoutServiceProviderInput> | StaffCreateWithoutServiceProviderInput[] | StaffUncheckedCreateWithoutServiceProviderInput[]
    connectOrCreate?: StaffCreateOrConnectWithoutServiceProviderInput | StaffCreateOrConnectWithoutServiceProviderInput[]
    upsert?: StaffUpsertWithWhereUniqueWithoutServiceProviderInput | StaffUpsertWithWhereUniqueWithoutServiceProviderInput[]
    createMany?: StaffCreateManyServiceProviderInputEnvelope
    set?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    disconnect?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    delete?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    connect?: StaffWhereUniqueInput | StaffWhereUniqueInput[]
    update?: StaffUpdateWithWhereUniqueWithoutServiceProviderInput | StaffUpdateWithWhereUniqueWithoutServiceProviderInput[]
    updateMany?: StaffUpdateManyWithWhereWithoutServiceProviderInput | StaffUpdateManyWithWhereWithoutServiceProviderInput[]
    deleteMany?: StaffScalarWhereInput | StaffScalarWhereInput[]
  }

  export type LanguageCreateNestedOneWithoutServiceProviderTranslationInput = {
    create?: XOR<LanguageCreateWithoutServiceProviderTranslationInput, LanguageUncheckedCreateWithoutServiceProviderTranslationInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutServiceProviderTranslationInput
    connect?: LanguageWhereUniqueInput
  }

  export type ServiceProviderCreateNestedOneWithoutServiceProviderTranslationInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceProviderTranslationInput, ServiceProviderUncheckedCreateWithoutServiceProviderTranslationInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceProviderTranslationInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type LanguageUpdateOneRequiredWithoutServiceProviderTranslationNestedInput = {
    create?: XOR<LanguageCreateWithoutServiceProviderTranslationInput, LanguageUncheckedCreateWithoutServiceProviderTranslationInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutServiceProviderTranslationInput
    upsert?: LanguageUpsertWithoutServiceProviderTranslationInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutServiceProviderTranslationInput, LanguageUpdateWithoutServiceProviderTranslationInput>, LanguageUncheckedUpdateWithoutServiceProviderTranslationInput>
  }

  export type ServiceProviderUpdateOneRequiredWithoutServiceProviderTranslationNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceProviderTranslationInput, ServiceProviderUncheckedCreateWithoutServiceProviderTranslationInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceProviderTranslationInput
    upsert?: ServiceProviderUpsertWithoutServiceProviderTranslationInput
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutServiceProviderTranslationInput, ServiceProviderUpdateWithoutServiceProviderTranslationInput>, ServiceProviderUncheckedUpdateWithoutServiceProviderTranslationInput>
  }

  export type LanguageCreateNestedOneWithoutServiceTranslationInput = {
    create?: XOR<LanguageCreateWithoutServiceTranslationInput, LanguageUncheckedCreateWithoutServiceTranslationInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutServiceTranslationInput
    connect?: LanguageWhereUniqueInput
  }

  export type ServiceCreateNestedOneWithoutServiceTranslationInput = {
    create?: XOR<ServiceCreateWithoutServiceTranslationInput, ServiceUncheckedCreateWithoutServiceTranslationInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutServiceTranslationInput
    connect?: ServiceWhereUniqueInput
  }

  export type LanguageUpdateOneRequiredWithoutServiceTranslationNestedInput = {
    create?: XOR<LanguageCreateWithoutServiceTranslationInput, LanguageUncheckedCreateWithoutServiceTranslationInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutServiceTranslationInput
    upsert?: LanguageUpsertWithoutServiceTranslationInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutServiceTranslationInput, LanguageUpdateWithoutServiceTranslationInput>, LanguageUncheckedUpdateWithoutServiceTranslationInput>
  }

  export type ServiceUpdateOneRequiredWithoutServiceTranslationNestedInput = {
    create?: XOR<ServiceCreateWithoutServiceTranslationInput, ServiceUncheckedCreateWithoutServiceTranslationInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutServiceTranslationInput
    upsert?: ServiceUpsertWithoutServiceTranslationInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutServiceTranslationInput, ServiceUpdateWithoutServiceTranslationInput>, ServiceUncheckedUpdateWithoutServiceTranslationInput>
  }

  export type BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput = {
    create?: XOR<BookingCreateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput>
    connectOrCreate?: BookingCreateOrConnectWithoutStaff_Booking_staffIdToStaffInput
    connect?: BookingWhereUniqueInput
  }

  export type InspectionReportCreateNestedManyWithoutStaffInput = {
    create?: XOR<InspectionReportCreateWithoutStaffInput, InspectionReportUncheckedCreateWithoutStaffInput> | InspectionReportCreateWithoutStaffInput[] | InspectionReportUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: InspectionReportCreateOrConnectWithoutStaffInput | InspectionReportCreateOrConnectWithoutStaffInput[]
    createMany?: InspectionReportCreateManyStaffInputEnvelope
    connect?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutStaffInput = {
    create?: XOR<ReviewCreateWithoutStaffInput, ReviewUncheckedCreateWithoutStaffInput> | ReviewCreateWithoutStaffInput[] | ReviewUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStaffInput | ReviewCreateOrConnectWithoutStaffInput[]
    createMany?: ReviewCreateManyStaffInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ServiceProviderCreateNestedOneWithoutStaffInput = {
    create?: XOR<ServiceProviderCreateWithoutStaffInput, ServiceProviderUncheckedCreateWithoutStaffInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutStaffInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStaffInput = {
    create?: XOR<UserCreateWithoutStaffInput, UserUncheckedCreateWithoutStaffInput>
    connectOrCreate?: UserCreateOrConnectWithoutStaffInput
    connect?: UserWhereUniqueInput
  }

  export type StaffCategoryCreateNestedManyWithoutStaffInput = {
    create?: XOR<StaffCategoryCreateWithoutStaffInput, StaffCategoryUncheckedCreateWithoutStaffInput> | StaffCategoryCreateWithoutStaffInput[] | StaffCategoryUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutStaffInput | StaffCategoryCreateOrConnectWithoutStaffInput[]
    createMany?: StaffCategoryCreateManyStaffInputEnvelope
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
  }

  export type WorkLogCreateNestedManyWithoutStaffInput = {
    create?: XOR<WorkLogCreateWithoutStaffInput, WorkLogUncheckedCreateWithoutStaffInput> | WorkLogCreateWithoutStaffInput[] | WorkLogUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutStaffInput | WorkLogCreateOrConnectWithoutStaffInput[]
    createMany?: WorkLogCreateManyStaffInputEnvelope
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
  }

  export type BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput = {
    create?: XOR<BookingCreateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput>
    connectOrCreate?: BookingCreateOrConnectWithoutStaff_Booking_staffIdToStaffInput
    connect?: BookingWhereUniqueInput
  }

  export type InspectionReportUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<InspectionReportCreateWithoutStaffInput, InspectionReportUncheckedCreateWithoutStaffInput> | InspectionReportCreateWithoutStaffInput[] | InspectionReportUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: InspectionReportCreateOrConnectWithoutStaffInput | InspectionReportCreateOrConnectWithoutStaffInput[]
    createMany?: InspectionReportCreateManyStaffInputEnvelope
    connect?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<ReviewCreateWithoutStaffInput, ReviewUncheckedCreateWithoutStaffInput> | ReviewCreateWithoutStaffInput[] | ReviewUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStaffInput | ReviewCreateOrConnectWithoutStaffInput[]
    createMany?: ReviewCreateManyStaffInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type StaffCategoryUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<StaffCategoryCreateWithoutStaffInput, StaffCategoryUncheckedCreateWithoutStaffInput> | StaffCategoryCreateWithoutStaffInput[] | StaffCategoryUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutStaffInput | StaffCategoryCreateOrConnectWithoutStaffInput[]
    createMany?: StaffCategoryCreateManyStaffInputEnvelope
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
  }

  export type WorkLogUncheckedCreateNestedManyWithoutStaffInput = {
    create?: XOR<WorkLogCreateWithoutStaffInput, WorkLogUncheckedCreateWithoutStaffInput> | WorkLogCreateWithoutStaffInput[] | WorkLogUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutStaffInput | WorkLogCreateOrConnectWithoutStaffInput[]
    createMany?: WorkLogCreateManyStaffInputEnvelope
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
  }

  export type BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput = {
    create?: XOR<BookingCreateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput>
    connectOrCreate?: BookingCreateOrConnectWithoutStaff_Booking_staffIdToStaffInput
    upsert?: BookingUpsertWithoutStaff_Booking_staffIdToStaffInput
    disconnect?: BookingWhereInput | boolean
    delete?: BookingWhereInput | boolean
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutStaff_Booking_staffIdToStaffInput, BookingUpdateWithoutStaff_Booking_staffIdToStaffInput>, BookingUncheckedUpdateWithoutStaff_Booking_staffIdToStaffInput>
  }

  export type InspectionReportUpdateManyWithoutStaffNestedInput = {
    create?: XOR<InspectionReportCreateWithoutStaffInput, InspectionReportUncheckedCreateWithoutStaffInput> | InspectionReportCreateWithoutStaffInput[] | InspectionReportUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: InspectionReportCreateOrConnectWithoutStaffInput | InspectionReportCreateOrConnectWithoutStaffInput[]
    upsert?: InspectionReportUpsertWithWhereUniqueWithoutStaffInput | InspectionReportUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: InspectionReportCreateManyStaffInputEnvelope
    set?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    disconnect?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    delete?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    connect?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    update?: InspectionReportUpdateWithWhereUniqueWithoutStaffInput | InspectionReportUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: InspectionReportUpdateManyWithWhereWithoutStaffInput | InspectionReportUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: InspectionReportScalarWhereInput | InspectionReportScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutStaffNestedInput = {
    create?: XOR<ReviewCreateWithoutStaffInput, ReviewUncheckedCreateWithoutStaffInput> | ReviewCreateWithoutStaffInput[] | ReviewUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStaffInput | ReviewCreateOrConnectWithoutStaffInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutStaffInput | ReviewUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: ReviewCreateManyStaffInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutStaffInput | ReviewUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutStaffInput | ReviewUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ServiceProviderUpdateOneRequiredWithoutStaffNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutStaffInput, ServiceProviderUncheckedCreateWithoutStaffInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutStaffInput
    upsert?: ServiceProviderUpsertWithoutStaffInput
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutStaffInput, ServiceProviderUpdateWithoutStaffInput>, ServiceProviderUncheckedUpdateWithoutStaffInput>
  }

  export type UserUpdateOneRequiredWithoutStaffNestedInput = {
    create?: XOR<UserCreateWithoutStaffInput, UserUncheckedCreateWithoutStaffInput>
    connectOrCreate?: UserCreateOrConnectWithoutStaffInput
    upsert?: UserUpsertWithoutStaffInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStaffInput, UserUpdateWithoutStaffInput>, UserUncheckedUpdateWithoutStaffInput>
  }

  export type StaffCategoryUpdateManyWithoutStaffNestedInput = {
    create?: XOR<StaffCategoryCreateWithoutStaffInput, StaffCategoryUncheckedCreateWithoutStaffInput> | StaffCategoryCreateWithoutStaffInput[] | StaffCategoryUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutStaffInput | StaffCategoryCreateOrConnectWithoutStaffInput[]
    upsert?: StaffCategoryUpsertWithWhereUniqueWithoutStaffInput | StaffCategoryUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: StaffCategoryCreateManyStaffInputEnvelope
    set?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    disconnect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    delete?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    update?: StaffCategoryUpdateWithWhereUniqueWithoutStaffInput | StaffCategoryUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: StaffCategoryUpdateManyWithWhereWithoutStaffInput | StaffCategoryUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: StaffCategoryScalarWhereInput | StaffCategoryScalarWhereInput[]
  }

  export type WorkLogUpdateManyWithoutStaffNestedInput = {
    create?: XOR<WorkLogCreateWithoutStaffInput, WorkLogUncheckedCreateWithoutStaffInput> | WorkLogCreateWithoutStaffInput[] | WorkLogUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutStaffInput | WorkLogCreateOrConnectWithoutStaffInput[]
    upsert?: WorkLogUpsertWithWhereUniqueWithoutStaffInput | WorkLogUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: WorkLogCreateManyStaffInputEnvelope
    set?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    disconnect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    delete?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    update?: WorkLogUpdateWithWhereUniqueWithoutStaffInput | WorkLogUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: WorkLogUpdateManyWithWhereWithoutStaffInput | WorkLogUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: WorkLogScalarWhereInput | WorkLogScalarWhereInput[]
  }

  export type BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput = {
    create?: XOR<BookingCreateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput>
    connectOrCreate?: BookingCreateOrConnectWithoutStaff_Booking_staffIdToStaffInput
    upsert?: BookingUpsertWithoutStaff_Booking_staffIdToStaffInput
    disconnect?: BookingWhereInput | boolean
    delete?: BookingWhereInput | boolean
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutStaff_Booking_staffIdToStaffInput, BookingUpdateWithoutStaff_Booking_staffIdToStaffInput>, BookingUncheckedUpdateWithoutStaff_Booking_staffIdToStaffInput>
  }

  export type InspectionReportUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<InspectionReportCreateWithoutStaffInput, InspectionReportUncheckedCreateWithoutStaffInput> | InspectionReportCreateWithoutStaffInput[] | InspectionReportUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: InspectionReportCreateOrConnectWithoutStaffInput | InspectionReportCreateOrConnectWithoutStaffInput[]
    upsert?: InspectionReportUpsertWithWhereUniqueWithoutStaffInput | InspectionReportUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: InspectionReportCreateManyStaffInputEnvelope
    set?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    disconnect?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    delete?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    connect?: InspectionReportWhereUniqueInput | InspectionReportWhereUniqueInput[]
    update?: InspectionReportUpdateWithWhereUniqueWithoutStaffInput | InspectionReportUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: InspectionReportUpdateManyWithWhereWithoutStaffInput | InspectionReportUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: InspectionReportScalarWhereInput | InspectionReportScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<ReviewCreateWithoutStaffInput, ReviewUncheckedCreateWithoutStaffInput> | ReviewCreateWithoutStaffInput[] | ReviewUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStaffInput | ReviewCreateOrConnectWithoutStaffInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutStaffInput | ReviewUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: ReviewCreateManyStaffInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutStaffInput | ReviewUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutStaffInput | ReviewUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<StaffCategoryCreateWithoutStaffInput, StaffCategoryUncheckedCreateWithoutStaffInput> | StaffCategoryCreateWithoutStaffInput[] | StaffCategoryUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: StaffCategoryCreateOrConnectWithoutStaffInput | StaffCategoryCreateOrConnectWithoutStaffInput[]
    upsert?: StaffCategoryUpsertWithWhereUniqueWithoutStaffInput | StaffCategoryUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: StaffCategoryCreateManyStaffInputEnvelope
    set?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    disconnect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    delete?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    connect?: StaffCategoryWhereUniqueInput | StaffCategoryWhereUniqueInput[]
    update?: StaffCategoryUpdateWithWhereUniqueWithoutStaffInput | StaffCategoryUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: StaffCategoryUpdateManyWithWhereWithoutStaffInput | StaffCategoryUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: StaffCategoryScalarWhereInput | StaffCategoryScalarWhereInput[]
  }

  export type WorkLogUncheckedUpdateManyWithoutStaffNestedInput = {
    create?: XOR<WorkLogCreateWithoutStaffInput, WorkLogUncheckedCreateWithoutStaffInput> | WorkLogCreateWithoutStaffInput[] | WorkLogUncheckedCreateWithoutStaffInput[]
    connectOrCreate?: WorkLogCreateOrConnectWithoutStaffInput | WorkLogCreateOrConnectWithoutStaffInput[]
    upsert?: WorkLogUpsertWithWhereUniqueWithoutStaffInput | WorkLogUpsertWithWhereUniqueWithoutStaffInput[]
    createMany?: WorkLogCreateManyStaffInputEnvelope
    set?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    disconnect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    delete?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    connect?: WorkLogWhereUniqueInput | WorkLogWhereUniqueInput[]
    update?: WorkLogUpdateWithWhereUniqueWithoutStaffInput | WorkLogUpdateWithWhereUniqueWithoutStaffInput[]
    updateMany?: WorkLogUpdateManyWithWhereWithoutStaffInput | WorkLogUpdateManyWithWhereWithoutStaffInput[]
    deleteMany?: WorkLogScalarWhereInput | WorkLogScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutStaffCategoryInput = {
    create?: XOR<CategoryCreateWithoutStaffCategoryInput, CategoryUncheckedCreateWithoutStaffCategoryInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutStaffCategoryInput
    connect?: CategoryWhereUniqueInput
  }

  export type StaffCreateNestedOneWithoutStaffCategoryInput = {
    create?: XOR<StaffCreateWithoutStaffCategoryInput, StaffUncheckedCreateWithoutStaffCategoryInput>
    connectOrCreate?: StaffCreateOrConnectWithoutStaffCategoryInput
    connect?: StaffWhereUniqueInput
  }

  export type CategoryUpdateOneRequiredWithoutStaffCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutStaffCategoryInput, CategoryUncheckedCreateWithoutStaffCategoryInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutStaffCategoryInput
    upsert?: CategoryUpsertWithoutStaffCategoryInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutStaffCategoryInput, CategoryUpdateWithoutStaffCategoryInput>, CategoryUncheckedUpdateWithoutStaffCategoryInput>
  }

  export type StaffUpdateOneRequiredWithoutStaffCategoryNestedInput = {
    create?: XOR<StaffCreateWithoutStaffCategoryInput, StaffUncheckedCreateWithoutStaffCategoryInput>
    connectOrCreate?: StaffCreateOrConnectWithoutStaffCategoryInput
    upsert?: StaffUpsertWithoutStaffCategoryInput
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutStaffCategoryInput, StaffUpdateWithoutStaffCategoryInput>, StaffUncheckedUpdateWithoutStaffCategoryInput>
  }

  export type BookingCreateNestedOneWithoutTransactionInput = {
    create?: XOR<BookingCreateWithoutTransactionInput, BookingUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: BookingCreateOrConnectWithoutTransactionInput
    connect?: BookingWhereUniqueInput
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type EnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod
  }

  export type BookingUpdateOneRequiredWithoutTransactionNestedInput = {
    create?: XOR<BookingCreateWithoutTransactionInput, BookingUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: BookingCreateOrConnectWithoutTransactionInput
    upsert?: BookingUpsertWithoutTransactionInput
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutTransactionInput, BookingUpdateWithoutTransactionInput>, BookingUncheckedUpdateWithoutTransactionInput>
  }

  export type CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput> | CategoryCreateWithoutUser_Category_createdByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_createdByIdToUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput> | CategoryCreateWithoutUser_Category_deletedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_deletedByIdToUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput> | CategoryCreateWithoutUser_Category_updatedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_updatedByIdToUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CustomerProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<CustomerProfileCreateWithoutUserInput, CustomerProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutUserInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type DeviceCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
  }

  export type LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput> | LanguageCreateWithoutUser_Language_createdByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_createdByIdToUserInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput> | LanguageCreateWithoutUser_Language_deletedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_deletedByIdToUserInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput> | LanguageCreateWithoutUser_Language_updatedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_updatedByIdToUserInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput> | PermissionCreateWithoutUser_Permission_createdByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_createdByIdToUserInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput> | PermissionCreateWithoutUser_Permission_deletedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_deletedByIdToUserInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput> | PermissionCreateWithoutUser_Permission_updatedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_updatedByIdToUserInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput = {
    create?: XOR<RoleCreateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput> | RoleCreateWithoutUser_Role_createdByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_createdByIdToUserInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput = {
    create?: XOR<RoleCreateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput> | RoleCreateWithoutUser_Role_deletedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_deletedByIdToUserInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput = {
    create?: XOR<RoleCreateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput> | RoleCreateWithoutUser_Role_updatedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_updatedByIdToUserInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput> | ServiceCreateWithoutUser_Service_createdByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_createdByIdToUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput> | ServiceCreateWithoutUser_Service_deletedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_deletedByIdToUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput> | ServiceCreateWithoutUser_Service_updatedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_updatedByIdToUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_userIdToUserInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput> | ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[] | ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    createMany?: ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInputEnvelope
    connect?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
  }

  export type StaffCreateNestedOneWithoutUserInput = {
    create?: XOR<StaffCreateWithoutUserInput, StaffUncheckedCreateWithoutUserInput>
    connectOrCreate?: StaffCreateOrConnectWithoutUserInput
    connect?: StaffWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutOther_User_User_createdByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOther_User_User_createdByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutUser_User_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutUser_User_createdByIdToUserInput, UserUncheckedCreateWithoutUser_User_createdByIdToUserInput> | UserCreateWithoutUser_User_createdByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_createdByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_createdByIdToUserInput | UserCreateOrConnectWithoutUser_User_createdByIdToUserInput[]
    createMany?: UserCreateManyUser_User_createdByIdToUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutOther_User_User_deletedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOther_User_User_deletedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutUser_User_deletedByIdToUserInput, UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput> | UserCreateWithoutUser_User_deletedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput | UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_deletedByIdToUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutOther_User_User_updatedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOther_User_User_updatedByIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutUser_User_updatedByIdToUserInput, UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput> | UserCreateWithoutUser_User_updatedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput | UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_updatedByIdToUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutUser_UserRolesInput = {
    create?: XOR<RoleCreateWithoutUser_UserRolesInput, RoleUncheckedCreateWithoutUser_UserRolesInput> | RoleCreateWithoutUser_UserRolesInput[] | RoleUncheckedCreateWithoutUser_UserRolesInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_UserRolesInput | RoleCreateOrConnectWithoutUser_UserRolesInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput> | CategoryCreateWithoutUser_Category_createdByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_createdByIdToUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput> | CategoryCreateWithoutUser_Category_deletedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_deletedByIdToUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput> | CategoryCreateWithoutUser_Category_updatedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_updatedByIdToUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CustomerProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<CustomerProfileCreateWithoutUserInput, CustomerProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutUserInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type DeviceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
  }

  export type LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput> | LanguageCreateWithoutUser_Language_createdByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_createdByIdToUserInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput> | LanguageCreateWithoutUser_Language_deletedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_deletedByIdToUserInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput> | LanguageCreateWithoutUser_Language_updatedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_updatedByIdToUserInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput> | PermissionCreateWithoutUser_Permission_createdByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_createdByIdToUserInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput> | PermissionCreateWithoutUser_Permission_deletedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_deletedByIdToUserInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput> | PermissionCreateWithoutUser_Permission_updatedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_updatedByIdToUserInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput = {
    create?: XOR<RoleCreateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput> | RoleCreateWithoutUser_Role_createdByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_createdByIdToUserInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput = {
    create?: XOR<RoleCreateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput> | RoleCreateWithoutUser_Role_deletedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_deletedByIdToUserInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput = {
    create?: XOR<RoleCreateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput> | RoleCreateWithoutUser_Role_updatedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_updatedByIdToUserInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput> | ServiceCreateWithoutUser_Service_createdByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_createdByIdToUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput> | ServiceCreateWithoutUser_Service_deletedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_deletedByIdToUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput> | ServiceCreateWithoutUser_Service_updatedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_updatedByIdToUserInputEnvelope
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
  }

  export type ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_userIdToUserInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput> | ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[] | ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    createMany?: ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInputEnvelope
    connect?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
  }

  export type StaffUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<StaffCreateWithoutUserInput, StaffUncheckedCreateWithoutUserInput>
    connectOrCreate?: StaffCreateOrConnectWithoutUserInput
    connect?: StaffWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput = {
    create?: XOR<UserCreateWithoutUser_User_createdByIdToUserInput, UserUncheckedCreateWithoutUser_User_createdByIdToUserInput> | UserCreateWithoutUser_User_createdByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_createdByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_createdByIdToUserInput | UserCreateOrConnectWithoutUser_User_createdByIdToUserInput[]
    createMany?: UserCreateManyUser_User_createdByIdToUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput = {
    create?: XOR<UserCreateWithoutUser_User_deletedByIdToUserInput, UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput> | UserCreateWithoutUser_User_deletedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput | UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_deletedByIdToUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput = {
    create?: XOR<UserCreateWithoutUser_User_updatedByIdToUserInput, UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput> | UserCreateWithoutUser_User_updatedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput | UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_updatedByIdToUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput = {
    create?: XOR<RoleCreateWithoutUser_UserRolesInput, RoleUncheckedCreateWithoutUser_UserRolesInput> | RoleCreateWithoutUser_UserRolesInput[] | RoleUncheckedCreateWithoutUser_UserRolesInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_UserRolesInput | RoleCreateOrConnectWithoutUser_UserRolesInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput> | CategoryCreateWithoutUser_Category_createdByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUser_Category_createdByIdToUserInput | CategoryUpsertWithWhereUniqueWithoutUser_Category_createdByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_createdByIdToUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUser_Category_createdByIdToUserInput | CategoryUpdateWithWhereUniqueWithoutUser_Category_createdByIdToUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUser_Category_createdByIdToUserInput | CategoryUpdateManyWithWhereWithoutUser_Category_createdByIdToUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput> | CategoryCreateWithoutUser_Category_deletedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput | CategoryUpsertWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_deletedByIdToUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput | CategoryUpdateWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUser_Category_deletedByIdToUserInput | CategoryUpdateManyWithWhereWithoutUser_Category_deletedByIdToUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput> | CategoryCreateWithoutUser_Category_updatedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput | CategoryUpsertWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_updatedByIdToUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput | CategoryUpdateWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUser_Category_updatedByIdToUserInput | CategoryUpdateManyWithWhereWithoutUser_Category_updatedByIdToUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CustomerProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutUserInput, CustomerProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutUserInput
    upsert?: CustomerProfileUpsertWithoutUserInput
    disconnect?: CustomerProfileWhereInput | boolean
    delete?: CustomerProfileWhereInput | boolean
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutUserInput, CustomerProfileUpdateWithoutUserInput>, CustomerProfileUncheckedUpdateWithoutUserInput>
  }

  export type DeviceUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    upsert?: DeviceUpsertWithWhereUniqueWithoutUserInput | DeviceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    set?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    disconnect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    delete?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    update?: DeviceUpdateWithWhereUniqueWithoutUserInput | DeviceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceUpdateManyWithWhereWithoutUserInput | DeviceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
  }

  export type LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput> | LanguageCreateWithoutUser_Language_createdByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUser_Language_createdByIdToUserInput | LanguageUpsertWithWhereUniqueWithoutUser_Language_createdByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_createdByIdToUserInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUser_Language_createdByIdToUserInput | LanguageUpdateWithWhereUniqueWithoutUser_Language_createdByIdToUserInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUser_Language_createdByIdToUserInput | LanguageUpdateManyWithWhereWithoutUser_Language_createdByIdToUserInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput> | LanguageCreateWithoutUser_Language_deletedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput | LanguageUpsertWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_deletedByIdToUserInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput | LanguageUpdateWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUser_Language_deletedByIdToUserInput | LanguageUpdateManyWithWhereWithoutUser_Language_deletedByIdToUserInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput> | LanguageCreateWithoutUser_Language_updatedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput | LanguageUpsertWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_updatedByIdToUserInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput | LanguageUpdateWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUser_Language_updatedByIdToUserInput | LanguageUpdateManyWithWhereWithoutUser_Language_updatedByIdToUserInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput> | PermissionCreateWithoutUser_Permission_createdByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput | PermissionUpsertWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_createdByIdToUserInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput | PermissionUpdateWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUser_Permission_createdByIdToUserInput | PermissionUpdateManyWithWhereWithoutUser_Permission_createdByIdToUserInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput> | PermissionCreateWithoutUser_Permission_deletedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput | PermissionUpsertWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_deletedByIdToUserInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput | PermissionUpdateWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUser_Permission_deletedByIdToUserInput | PermissionUpdateManyWithWhereWithoutUser_Permission_deletedByIdToUserInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput> | PermissionCreateWithoutUser_Permission_updatedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput | PermissionUpsertWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_updatedByIdToUserInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput | PermissionUpdateWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUser_Permission_updatedByIdToUserInput | PermissionUpdateManyWithWhereWithoutUser_Permission_updatedByIdToUserInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput = {
    create?: XOR<RoleCreateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput> | RoleCreateWithoutUser_Role_createdByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_Role_createdByIdToUserInput | RoleUpsertWithWhereUniqueWithoutUser_Role_createdByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_createdByIdToUserInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_Role_createdByIdToUserInput | RoleUpdateWithWhereUniqueWithoutUser_Role_createdByIdToUserInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_Role_createdByIdToUserInput | RoleUpdateManyWithWhereWithoutUser_Role_createdByIdToUserInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput = {
    create?: XOR<RoleCreateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput> | RoleCreateWithoutUser_Role_deletedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput | RoleUpsertWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_deletedByIdToUserInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput | RoleUpdateWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_Role_deletedByIdToUserInput | RoleUpdateManyWithWhereWithoutUser_Role_deletedByIdToUserInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput = {
    create?: XOR<RoleCreateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput> | RoleCreateWithoutUser_Role_updatedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput | RoleUpsertWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_updatedByIdToUserInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput | RoleUpdateWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_Role_updatedByIdToUserInput | RoleUpdateManyWithWhereWithoutUser_Role_updatedByIdToUserInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput> | ServiceCreateWithoutUser_Service_createdByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUser_Service_createdByIdToUserInput | ServiceUpsertWithWhereUniqueWithoutUser_Service_createdByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_createdByIdToUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUser_Service_createdByIdToUserInput | ServiceUpdateWithWhereUniqueWithoutUser_Service_createdByIdToUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUser_Service_createdByIdToUserInput | ServiceUpdateManyWithWhereWithoutUser_Service_createdByIdToUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput> | ServiceCreateWithoutUser_Service_deletedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput | ServiceUpsertWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_deletedByIdToUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput | ServiceUpdateWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUser_Service_deletedByIdToUserInput | ServiceUpdateManyWithWhereWithoutUser_Service_deletedByIdToUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput> | ServiceCreateWithoutUser_Service_updatedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput | ServiceUpsertWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_updatedByIdToUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput | ServiceUpdateWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUser_Service_updatedByIdToUserInput | ServiceUpdateManyWithWhereWithoutUser_Service_updatedByIdToUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_userIdToUserInput
    upsert?: ServiceProviderUpsertWithoutUser_ServiceProvider_userIdToUserInput
    disconnect?: ServiceProviderWhereInput | boolean
    delete?: ServiceProviderWhereInput | boolean
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUpdateWithoutUser_ServiceProvider_userIdToUserInput>, ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_userIdToUserInput>
  }

  export type ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput> | ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[] | ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    upsert?: ServiceProviderUpsertWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderUpsertWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    createMany?: ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInputEnvelope
    set?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    disconnect?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    delete?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    connect?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    update?: ServiceProviderUpdateWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderUpdateWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    updateMany?: ServiceProviderUpdateManyWithWhereWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderUpdateManyWithWhereWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    deleteMany?: ServiceProviderScalarWhereInput | ServiceProviderScalarWhereInput[]
  }

  export type StaffUpdateOneWithoutUserNestedInput = {
    create?: XOR<StaffCreateWithoutUserInput, StaffUncheckedCreateWithoutUserInput>
    connectOrCreate?: StaffCreateOrConnectWithoutUserInput
    upsert?: StaffUpsertWithoutUserInput
    disconnect?: StaffWhereInput | boolean
    delete?: StaffWhereInput | boolean
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutUserInput, StaffUpdateWithoutUserInput>, StaffUncheckedUpdateWithoutUserInput>
  }

  export type UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutOther_User_User_createdByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_createdByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOther_User_User_createdByIdToUserInput
    upsert?: UserUpsertWithoutOther_User_User_createdByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOther_User_User_createdByIdToUserInput, UserUpdateWithoutOther_User_User_createdByIdToUserInput>, UserUncheckedUpdateWithoutOther_User_User_createdByIdToUserInput>
  }

  export type UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUser_User_createdByIdToUserInput, UserUncheckedCreateWithoutUser_User_createdByIdToUserInput> | UserCreateWithoutUser_User_createdByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_createdByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_createdByIdToUserInput | UserCreateOrConnectWithoutUser_User_createdByIdToUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUser_User_createdByIdToUserInput | UserUpsertWithWhereUniqueWithoutUser_User_createdByIdToUserInput[]
    createMany?: UserCreateManyUser_User_createdByIdToUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUser_User_createdByIdToUserInput | UserUpdateWithWhereUniqueWithoutUser_User_createdByIdToUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUser_User_createdByIdToUserInput | UserUpdateManyWithWhereWithoutUser_User_createdByIdToUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutOther_User_User_deletedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_deletedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOther_User_User_deletedByIdToUserInput
    upsert?: UserUpsertWithoutOther_User_User_deletedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOther_User_User_deletedByIdToUserInput, UserUpdateWithoutOther_User_User_deletedByIdToUserInput>, UserUncheckedUpdateWithoutOther_User_User_deletedByIdToUserInput>
  }

  export type UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUser_User_deletedByIdToUserInput, UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput> | UserCreateWithoutUser_User_deletedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput | UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUser_User_deletedByIdToUserInput | UserUpsertWithWhereUniqueWithoutUser_User_deletedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_deletedByIdToUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUser_User_deletedByIdToUserInput | UserUpdateWithWhereUniqueWithoutUser_User_deletedByIdToUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUser_User_deletedByIdToUserInput | UserUpdateManyWithWhereWithoutUser_User_deletedByIdToUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutOther_User_User_updatedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_updatedByIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutOther_User_User_updatedByIdToUserInput
    upsert?: UserUpsertWithoutOther_User_User_updatedByIdToUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOther_User_User_updatedByIdToUserInput, UserUpdateWithoutOther_User_User_updatedByIdToUserInput>, UserUncheckedUpdateWithoutOther_User_User_updatedByIdToUserInput>
  }

  export type UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUser_User_updatedByIdToUserInput, UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput> | UserCreateWithoutUser_User_updatedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput | UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUser_User_updatedByIdToUserInput | UserUpsertWithWhereUniqueWithoutUser_User_updatedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_updatedByIdToUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUser_User_updatedByIdToUserInput | UserUpdateWithWhereUniqueWithoutUser_User_updatedByIdToUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUser_User_updatedByIdToUserInput | UserUpdateManyWithWhereWithoutUser_User_updatedByIdToUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutUser_UserRolesNestedInput = {
    create?: XOR<RoleCreateWithoutUser_UserRolesInput, RoleUncheckedCreateWithoutUser_UserRolesInput> | RoleCreateWithoutUser_UserRolesInput[] | RoleUncheckedCreateWithoutUser_UserRolesInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_UserRolesInput | RoleCreateOrConnectWithoutUser_UserRolesInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_UserRolesInput | RoleUpsertWithWhereUniqueWithoutUser_UserRolesInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_UserRolesInput | RoleUpdateWithWhereUniqueWithoutUser_UserRolesInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_UserRolesInput | RoleUpdateManyWithWhereWithoutUser_UserRolesInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput> | CategoryCreateWithoutUser_Category_createdByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUser_Category_createdByIdToUserInput | CategoryUpsertWithWhereUniqueWithoutUser_Category_createdByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_createdByIdToUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUser_Category_createdByIdToUserInput | CategoryUpdateWithWhereUniqueWithoutUser_Category_createdByIdToUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUser_Category_createdByIdToUserInput | CategoryUpdateManyWithWhereWithoutUser_Category_createdByIdToUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput> | CategoryCreateWithoutUser_Category_deletedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput | CategoryUpsertWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_deletedByIdToUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput | CategoryUpdateWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUser_Category_deletedByIdToUserInput | CategoryUpdateManyWithWhereWithoutUser_Category_deletedByIdToUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput> | CategoryCreateWithoutUser_Category_updatedByIdToUserInput[] | CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput | CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput | CategoryUpsertWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput[]
    createMany?: CategoryCreateManyUser_Category_updatedByIdToUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput | CategoryUpdateWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUser_Category_updatedByIdToUserInput | CategoryUpdateManyWithWhereWithoutUser_Category_updatedByIdToUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CustomerProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutUserInput, CustomerProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutUserInput
    upsert?: CustomerProfileUpsertWithoutUserInput
    disconnect?: CustomerProfileWhereInput | boolean
    delete?: CustomerProfileWhereInput | boolean
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutUserInput, CustomerProfileUpdateWithoutUserInput>, CustomerProfileUncheckedUpdateWithoutUserInput>
  }

  export type DeviceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    upsert?: DeviceUpsertWithWhereUniqueWithoutUserInput | DeviceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    set?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    disconnect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    delete?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    update?: DeviceUpdateWithWhereUniqueWithoutUserInput | DeviceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceUpdateManyWithWhereWithoutUserInput | DeviceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
  }

  export type LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput> | LanguageCreateWithoutUser_Language_createdByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUser_Language_createdByIdToUserInput | LanguageUpsertWithWhereUniqueWithoutUser_Language_createdByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_createdByIdToUserInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUser_Language_createdByIdToUserInput | LanguageUpdateWithWhereUniqueWithoutUser_Language_createdByIdToUserInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUser_Language_createdByIdToUserInput | LanguageUpdateManyWithWhereWithoutUser_Language_createdByIdToUserInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput> | LanguageCreateWithoutUser_Language_deletedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput | LanguageUpsertWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_deletedByIdToUserInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput | LanguageUpdateWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUser_Language_deletedByIdToUserInput | LanguageUpdateManyWithWhereWithoutUser_Language_deletedByIdToUserInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput = {
    create?: XOR<LanguageCreateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput> | LanguageCreateWithoutUser_Language_updatedByIdToUserInput[] | LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput | LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput | LanguageUpsertWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput[]
    createMany?: LanguageCreateManyUser_Language_updatedByIdToUserInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput | LanguageUpdateWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUser_Language_updatedByIdToUserInput | LanguageUpdateManyWithWhereWithoutUser_Language_updatedByIdToUserInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput> | PermissionCreateWithoutUser_Permission_createdByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput | PermissionUpsertWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_createdByIdToUserInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput | PermissionUpdateWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUser_Permission_createdByIdToUserInput | PermissionUpdateManyWithWhereWithoutUser_Permission_createdByIdToUserInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput> | PermissionCreateWithoutUser_Permission_deletedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput | PermissionUpsertWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_deletedByIdToUserInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput | PermissionUpdateWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUser_Permission_deletedByIdToUserInput | PermissionUpdateManyWithWhereWithoutUser_Permission_deletedByIdToUserInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput = {
    create?: XOR<PermissionCreateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput> | PermissionCreateWithoutUser_Permission_updatedByIdToUserInput[] | PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput | PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput | PermissionUpsertWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput[]
    createMany?: PermissionCreateManyUser_Permission_updatedByIdToUserInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput | PermissionUpdateWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUser_Permission_updatedByIdToUserInput | PermissionUpdateManyWithWhereWithoutUser_Permission_updatedByIdToUserInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput = {
    create?: XOR<RoleCreateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput> | RoleCreateWithoutUser_Role_createdByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_Role_createdByIdToUserInput | RoleUpsertWithWhereUniqueWithoutUser_Role_createdByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_createdByIdToUserInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_Role_createdByIdToUserInput | RoleUpdateWithWhereUniqueWithoutUser_Role_createdByIdToUserInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_Role_createdByIdToUserInput | RoleUpdateManyWithWhereWithoutUser_Role_createdByIdToUserInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput = {
    create?: XOR<RoleCreateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput> | RoleCreateWithoutUser_Role_deletedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput | RoleUpsertWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_deletedByIdToUserInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput | RoleUpdateWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_Role_deletedByIdToUserInput | RoleUpdateManyWithWhereWithoutUser_Role_deletedByIdToUserInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput = {
    create?: XOR<RoleCreateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput> | RoleCreateWithoutUser_Role_updatedByIdToUserInput[] | RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput | RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput | RoleUpsertWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput[]
    createMany?: RoleCreateManyUser_Role_updatedByIdToUserInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput | RoleUpdateWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_Role_updatedByIdToUserInput | RoleUpdateManyWithWhereWithoutUser_Role_updatedByIdToUserInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput> | ServiceCreateWithoutUser_Service_createdByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUser_Service_createdByIdToUserInput | ServiceUpsertWithWhereUniqueWithoutUser_Service_createdByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_createdByIdToUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUser_Service_createdByIdToUserInput | ServiceUpdateWithWhereUniqueWithoutUser_Service_createdByIdToUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUser_Service_createdByIdToUserInput | ServiceUpdateManyWithWhereWithoutUser_Service_createdByIdToUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput> | ServiceCreateWithoutUser_Service_deletedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput | ServiceUpsertWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_deletedByIdToUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput | ServiceUpdateWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUser_Service_deletedByIdToUserInput | ServiceUpdateManyWithWhereWithoutUser_Service_deletedByIdToUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput = {
    create?: XOR<ServiceCreateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput> | ServiceCreateWithoutUser_Service_updatedByIdToUserInput[] | ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput[]
    connectOrCreate?: ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput | ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput[]
    upsert?: ServiceUpsertWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput | ServiceUpsertWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput[]
    createMany?: ServiceCreateManyUser_Service_updatedByIdToUserInputEnvelope
    set?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    disconnect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    delete?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    connect?: ServiceWhereUniqueInput | ServiceWhereUniqueInput[]
    update?: ServiceUpdateWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput | ServiceUpdateWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput[]
    updateMany?: ServiceUpdateManyWithWhereWithoutUser_Service_updatedByIdToUserInput | ServiceUpdateManyWithWhereWithoutUser_Service_updatedByIdToUserInput[]
    deleteMany?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
  }

  export type ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_userIdToUserInput
    upsert?: ServiceProviderUpsertWithoutUser_ServiceProvider_userIdToUserInput
    disconnect?: ServiceProviderWhereInput | boolean
    delete?: ServiceProviderWhereInput | boolean
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUpdateWithoutUser_ServiceProvider_userIdToUserInput>, ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_userIdToUserInput>
  }

  export type ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput> | ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[] | ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    upsert?: ServiceProviderUpsertWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderUpsertWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    createMany?: ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInputEnvelope
    set?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    disconnect?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    delete?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    connect?: ServiceProviderWhereUniqueInput | ServiceProviderWhereUniqueInput[]
    update?: ServiceProviderUpdateWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderUpdateWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    updateMany?: ServiceProviderUpdateManyWithWhereWithoutUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderUpdateManyWithWhereWithoutUser_ServiceProvider_verifiedByIdToUserInput[]
    deleteMany?: ServiceProviderScalarWhereInput | ServiceProviderScalarWhereInput[]
  }

  export type StaffUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<StaffCreateWithoutUserInput, StaffUncheckedCreateWithoutUserInput>
    connectOrCreate?: StaffCreateOrConnectWithoutUserInput
    upsert?: StaffUpsertWithoutUserInput
    disconnect?: StaffWhereInput | boolean
    delete?: StaffWhereInput | boolean
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutUserInput, StaffUpdateWithoutUserInput>, StaffUncheckedUpdateWithoutUserInput>
  }

  export type UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUser_User_createdByIdToUserInput, UserUncheckedCreateWithoutUser_User_createdByIdToUserInput> | UserCreateWithoutUser_User_createdByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_createdByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_createdByIdToUserInput | UserCreateOrConnectWithoutUser_User_createdByIdToUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUser_User_createdByIdToUserInput | UserUpsertWithWhereUniqueWithoutUser_User_createdByIdToUserInput[]
    createMany?: UserCreateManyUser_User_createdByIdToUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUser_User_createdByIdToUserInput | UserUpdateWithWhereUniqueWithoutUser_User_createdByIdToUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUser_User_createdByIdToUserInput | UserUpdateManyWithWhereWithoutUser_User_createdByIdToUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUser_User_deletedByIdToUserInput, UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput> | UserCreateWithoutUser_User_deletedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput | UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUser_User_deletedByIdToUserInput | UserUpsertWithWhereUniqueWithoutUser_User_deletedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_deletedByIdToUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUser_User_deletedByIdToUserInput | UserUpdateWithWhereUniqueWithoutUser_User_deletedByIdToUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUser_User_deletedByIdToUserInput | UserUpdateManyWithWhereWithoutUser_User_deletedByIdToUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUser_User_updatedByIdToUserInput, UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput> | UserCreateWithoutUser_User_updatedByIdToUserInput[] | UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput | UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUser_User_updatedByIdToUserInput | UserUpsertWithWhereUniqueWithoutUser_User_updatedByIdToUserInput[]
    createMany?: UserCreateManyUser_User_updatedByIdToUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUser_User_updatedByIdToUserInput | UserUpdateWithWhereUniqueWithoutUser_User_updatedByIdToUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUser_User_updatedByIdToUserInput | UserUpdateManyWithWhereWithoutUser_User_updatedByIdToUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput = {
    create?: XOR<RoleCreateWithoutUser_UserRolesInput, RoleUncheckedCreateWithoutUser_UserRolesInput> | RoleCreateWithoutUser_UserRolesInput[] | RoleUncheckedCreateWithoutUser_UserRolesInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUser_UserRolesInput | RoleCreateOrConnectWithoutUser_UserRolesInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUser_UserRolesInput | RoleUpsertWithWhereUniqueWithoutUser_UserRolesInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUser_UserRolesInput | RoleUpdateWithWhereUniqueWithoutUser_UserRolesInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUser_UserRolesInput | RoleUpdateManyWithWhereWithoutUser_UserRolesInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type EnumVerificationCodeTypeFieldUpdateOperationsInput = {
    set?: $Enums.VerificationCodeType
  }

  export type BookingCreateNestedOneWithoutWorkLogInput = {
    create?: XOR<BookingCreateWithoutWorkLogInput, BookingUncheckedCreateWithoutWorkLogInput>
    connectOrCreate?: BookingCreateOrConnectWithoutWorkLogInput
    connect?: BookingWhereUniqueInput
  }

  export type StaffCreateNestedOneWithoutWorkLogInput = {
    create?: XOR<StaffCreateWithoutWorkLogInput, StaffUncheckedCreateWithoutWorkLogInput>
    connectOrCreate?: StaffCreateOrConnectWithoutWorkLogInput
    connect?: StaffWhereUniqueInput
  }

  export type BookingUpdateOneRequiredWithoutWorkLogNestedInput = {
    create?: XOR<BookingCreateWithoutWorkLogInput, BookingUncheckedCreateWithoutWorkLogInput>
    connectOrCreate?: BookingCreateOrConnectWithoutWorkLogInput
    upsert?: BookingUpsertWithoutWorkLogInput
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutWorkLogInput, BookingUpdateWithoutWorkLogInput>, BookingUncheckedUpdateWithoutWorkLogInput>
  }

  export type StaffUpdateOneRequiredWithoutWorkLogNestedInput = {
    create?: XOR<StaffCreateWithoutWorkLogInput, StaffUncheckedCreateWithoutWorkLogInput>
    connectOrCreate?: StaffCreateOrConnectWithoutWorkLogInput
    upsert?: StaffUpsertWithoutWorkLogInput
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutWorkLogInput, StaffUpdateWithoutWorkLogInput>, StaffUncheckedUpdateWithoutWorkLogInput>
  }

  export type InspectionReportCreateimagesInput = {
    set: string[]
  }

  export type BookingCreateNestedOneWithoutInspectionReportInput = {
    create?: XOR<BookingCreateWithoutInspectionReportInput, BookingUncheckedCreateWithoutInspectionReportInput>
    connectOrCreate?: BookingCreateOrConnectWithoutInspectionReportInput
    connect?: BookingWhereUniqueInput
  }

  export type StaffCreateNestedOneWithoutInspectionReportInput = {
    create?: XOR<StaffCreateWithoutInspectionReportInput, StaffUncheckedCreateWithoutInspectionReportInput>
    connectOrCreate?: StaffCreateOrConnectWithoutInspectionReportInput
    connect?: StaffWhereUniqueInput
  }

  export type InspectionReportUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BookingUpdateOneRequiredWithoutInspectionReportNestedInput = {
    create?: XOR<BookingCreateWithoutInspectionReportInput, BookingUncheckedCreateWithoutInspectionReportInput>
    connectOrCreate?: BookingCreateOrConnectWithoutInspectionReportInput
    upsert?: BookingUpsertWithoutInspectionReportInput
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutInspectionReportInput, BookingUpdateWithoutInspectionReportInput>, BookingUncheckedUpdateWithoutInspectionReportInput>
  }

  export type StaffUpdateOneRequiredWithoutInspectionReportNestedInput = {
    create?: XOR<StaffCreateWithoutInspectionReportInput, StaffUncheckedCreateWithoutInspectionReportInput>
    connectOrCreate?: StaffCreateOrConnectWithoutInspectionReportInput
    upsert?: StaffUpsertWithoutInspectionReportInput
    connect?: StaffWhereUniqueInput
    update?: XOR<XOR<StaffUpdateToOneWithWhereWithoutInspectionReportInput, StaffUpdateWithoutInspectionReportInput>, StaffUncheckedUpdateWithoutInspectionReportInput>
  }

  export type BookingCreateNestedOneWithoutProposedServiceInput = {
    create?: XOR<BookingCreateWithoutProposedServiceInput, BookingUncheckedCreateWithoutProposedServiceInput>
    connectOrCreate?: BookingCreateOrConnectWithoutProposedServiceInput
    connect?: BookingWhereUniqueInput
  }

  export type ServiceCreateNestedOneWithoutProposedServiceInput = {
    create?: XOR<ServiceCreateWithoutProposedServiceInput, ServiceUncheckedCreateWithoutProposedServiceInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutProposedServiceInput
    connect?: ServiceWhereUniqueInput
  }

  export type BookingUpdateOneRequiredWithoutProposedServiceNestedInput = {
    create?: XOR<BookingCreateWithoutProposedServiceInput, BookingUncheckedCreateWithoutProposedServiceInput>
    connectOrCreate?: BookingCreateOrConnectWithoutProposedServiceInput
    upsert?: BookingUpsertWithoutProposedServiceInput
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutProposedServiceInput, BookingUpdateWithoutProposedServiceInput>, BookingUncheckedUpdateWithoutProposedServiceInput>
  }

  export type ServiceUpdateOneRequiredWithoutProposedServiceNestedInput = {
    create?: XOR<ServiceCreateWithoutProposedServiceInput, ServiceUncheckedCreateWithoutProposedServiceInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutProposedServiceInput
    upsert?: ServiceUpsertWithoutProposedServiceInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutProposedServiceInput, ServiceUpdateWithoutProposedServiceInput>, ServiceUncheckedUpdateWithoutProposedServiceInput>
  }

  export type ServiceProviderCreateNestedOneWithoutServiceItemInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceItemInput, ServiceProviderUncheckedCreateWithoutServiceItemInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceItemInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type Service_ServiceItemsCreateNestedManyWithoutServiceItemInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceItemInput, Service_ServiceItemsUncheckedCreateWithoutServiceItemInput> | Service_ServiceItemsCreateWithoutServiceItemInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceItemInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceItemInput | Service_ServiceItemsCreateOrConnectWithoutServiceItemInput[]
    createMany?: Service_ServiceItemsCreateManyServiceItemInputEnvelope
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
  }

  export type Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceItemInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceItemInput, Service_ServiceItemsUncheckedCreateWithoutServiceItemInput> | Service_ServiceItemsCreateWithoutServiceItemInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceItemInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceItemInput | Service_ServiceItemsCreateOrConnectWithoutServiceItemInput[]
    createMany?: Service_ServiceItemsCreateManyServiceItemInputEnvelope
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
  }

  export type ServiceProviderUpdateOneRequiredWithoutServiceItemNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceItemInput, ServiceProviderUncheckedCreateWithoutServiceItemInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceItemInput
    upsert?: ServiceProviderUpsertWithoutServiceItemInput
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutServiceItemInput, ServiceProviderUpdateWithoutServiceItemInput>, ServiceProviderUncheckedUpdateWithoutServiceItemInput>
  }

  export type Service_ServiceItemsUpdateManyWithoutServiceItemNestedInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceItemInput, Service_ServiceItemsUncheckedCreateWithoutServiceItemInput> | Service_ServiceItemsCreateWithoutServiceItemInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceItemInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceItemInput | Service_ServiceItemsCreateOrConnectWithoutServiceItemInput[]
    upsert?: Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceItemInput | Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceItemInput[]
    createMany?: Service_ServiceItemsCreateManyServiceItemInputEnvelope
    set?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    disconnect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    delete?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    update?: Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceItemInput | Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceItemInput[]
    updateMany?: Service_ServiceItemsUpdateManyWithWhereWithoutServiceItemInput | Service_ServiceItemsUpdateManyWithWhereWithoutServiceItemInput[]
    deleteMany?: Service_ServiceItemsScalarWhereInput | Service_ServiceItemsScalarWhereInput[]
  }

  export type Service_ServiceItemsUncheckedUpdateManyWithoutServiceItemNestedInput = {
    create?: XOR<Service_ServiceItemsCreateWithoutServiceItemInput, Service_ServiceItemsUncheckedCreateWithoutServiceItemInput> | Service_ServiceItemsCreateWithoutServiceItemInput[] | Service_ServiceItemsUncheckedCreateWithoutServiceItemInput[]
    connectOrCreate?: Service_ServiceItemsCreateOrConnectWithoutServiceItemInput | Service_ServiceItemsCreateOrConnectWithoutServiceItemInput[]
    upsert?: Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceItemInput | Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceItemInput[]
    createMany?: Service_ServiceItemsCreateManyServiceItemInputEnvelope
    set?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    disconnect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    delete?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    connect?: Service_ServiceItemsWhereUniqueInput | Service_ServiceItemsWhereUniqueInput[]
    update?: Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceItemInput | Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceItemInput[]
    updateMany?: Service_ServiceItemsUpdateManyWithWhereWithoutServiceItemInput | Service_ServiceItemsUpdateManyWithWhereWithoutServiceItemInput[]
    deleteMany?: Service_ServiceItemsScalarWhereInput | Service_ServiceItemsScalarWhereInput[]
  }

  export type BookingCreateNestedOneWithoutServiceRequestInput = {
    create?: XOR<BookingCreateWithoutServiceRequestInput, BookingUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: BookingCreateOrConnectWithoutServiceRequestInput
    connect?: BookingWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutServiceRequestInput = {
    create?: XOR<CategoryCreateWithoutServiceRequestInput, CategoryUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutServiceRequestInput
    connect?: CategoryWhereUniqueInput
  }

  export type CustomerProfileCreateNestedOneWithoutServiceRequestInput = {
    create?: XOR<CustomerProfileCreateWithoutServiceRequestInput, CustomerProfileUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutServiceRequestInput
    connect?: CustomerProfileWhereUniqueInput
  }

  export type ServiceProviderCreateNestedOneWithoutServiceRequestInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceRequestInput, ServiceProviderUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceRequestInput
    connect?: ServiceProviderWhereUniqueInput
  }

  export type BookingUncheckedCreateNestedOneWithoutServiceRequestInput = {
    create?: XOR<BookingCreateWithoutServiceRequestInput, BookingUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: BookingCreateOrConnectWithoutServiceRequestInput
    connect?: BookingWhereUniqueInput
  }

  export type EnumRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.RequestStatus
  }

  export type BookingUpdateOneWithoutServiceRequestNestedInput = {
    create?: XOR<BookingCreateWithoutServiceRequestInput, BookingUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: BookingCreateOrConnectWithoutServiceRequestInput
    upsert?: BookingUpsertWithoutServiceRequestInput
    disconnect?: BookingWhereInput | boolean
    delete?: BookingWhereInput | boolean
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutServiceRequestInput, BookingUpdateWithoutServiceRequestInput>, BookingUncheckedUpdateWithoutServiceRequestInput>
  }

  export type CategoryUpdateOneRequiredWithoutServiceRequestNestedInput = {
    create?: XOR<CategoryCreateWithoutServiceRequestInput, CategoryUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutServiceRequestInput
    upsert?: CategoryUpsertWithoutServiceRequestInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutServiceRequestInput, CategoryUpdateWithoutServiceRequestInput>, CategoryUncheckedUpdateWithoutServiceRequestInput>
  }

  export type CustomerProfileUpdateOneRequiredWithoutServiceRequestNestedInput = {
    create?: XOR<CustomerProfileCreateWithoutServiceRequestInput, CustomerProfileUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: CustomerProfileCreateOrConnectWithoutServiceRequestInput
    upsert?: CustomerProfileUpsertWithoutServiceRequestInput
    connect?: CustomerProfileWhereUniqueInput
    update?: XOR<XOR<CustomerProfileUpdateToOneWithWhereWithoutServiceRequestInput, CustomerProfileUpdateWithoutServiceRequestInput>, CustomerProfileUncheckedUpdateWithoutServiceRequestInput>
  }

  export type ServiceProviderUpdateOneRequiredWithoutServiceRequestNestedInput = {
    create?: XOR<ServiceProviderCreateWithoutServiceRequestInput, ServiceProviderUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: ServiceProviderCreateOrConnectWithoutServiceRequestInput
    upsert?: ServiceProviderUpsertWithoutServiceRequestInput
    connect?: ServiceProviderWhereUniqueInput
    update?: XOR<XOR<ServiceProviderUpdateToOneWithWhereWithoutServiceRequestInput, ServiceProviderUpdateWithoutServiceRequestInput>, ServiceProviderUncheckedUpdateWithoutServiceRequestInput>
  }

  export type BookingUncheckedUpdateOneWithoutServiceRequestNestedInput = {
    create?: XOR<BookingCreateWithoutServiceRequestInput, BookingUncheckedCreateWithoutServiceRequestInput>
    connectOrCreate?: BookingCreateOrConnectWithoutServiceRequestInput
    upsert?: BookingUpsertWithoutServiceRequestInput
    disconnect?: BookingWhereInput | boolean
    delete?: BookingWhereInput | boolean
    connect?: BookingWhereUniqueInput
    update?: XOR<XOR<BookingUpdateToOneWithWhereWithoutServiceRequestInput, BookingUpdateWithoutServiceRequestInput>, BookingUncheckedUpdateWithoutServiceRequestInput>
  }

  export type ServiceCreateNestedOneWithoutService_ServiceItemsInput = {
    create?: XOR<ServiceCreateWithoutService_ServiceItemsInput, ServiceUncheckedCreateWithoutService_ServiceItemsInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutService_ServiceItemsInput
    connect?: ServiceWhereUniqueInput
  }

  export type ServiceItemCreateNestedOneWithoutService_ServiceItemsInput = {
    create?: XOR<ServiceItemCreateWithoutService_ServiceItemsInput, ServiceItemUncheckedCreateWithoutService_ServiceItemsInput>
    connectOrCreate?: ServiceItemCreateOrConnectWithoutService_ServiceItemsInput
    connect?: ServiceItemWhereUniqueInput
  }

  export type ServiceUpdateOneRequiredWithoutService_ServiceItemsNestedInput = {
    create?: XOR<ServiceCreateWithoutService_ServiceItemsInput, ServiceUncheckedCreateWithoutService_ServiceItemsInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutService_ServiceItemsInput
    upsert?: ServiceUpsertWithoutService_ServiceItemsInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutService_ServiceItemsInput, ServiceUpdateWithoutService_ServiceItemsInput>, ServiceUncheckedUpdateWithoutService_ServiceItemsInput>
  }

  export type ServiceItemUpdateOneRequiredWithoutService_ServiceItemsNestedInput = {
    create?: XOR<ServiceItemCreateWithoutService_ServiceItemsInput, ServiceItemUncheckedCreateWithoutService_ServiceItemsInput>
    connectOrCreate?: ServiceItemCreateOrConnectWithoutService_ServiceItemsInput
    upsert?: ServiceItemUpsertWithoutService_ServiceItemsInput
    connect?: ServiceItemWhereUniqueInput
    update?: XOR<XOR<ServiceItemUpdateToOneWithWhereWithoutService_ServiceItemsInput, ServiceItemUpdateWithoutService_ServiceItemsInput>, ServiceItemUncheckedUpdateWithoutService_ServiceItemsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumBookingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BookingStatus | EnumBookingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBookingStatusFilter<$PrismaModel> | $Enums.BookingStatus
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumBookingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BookingStatus | EnumBookingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BookingStatus[] | ListEnumBookingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBookingStatusWithAggregatesFilter<$PrismaModel> | $Enums.BookingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBookingStatusFilter<$PrismaModel>
    _max?: NestedEnumBookingStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumGenderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableFilter<$PrismaModel> | $Enums.Gender | null
  }

  export type NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel> | $Enums.Gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderNullableFilter<$PrismaModel>
  }

  export type NestedEnumHTTPMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodFilter<$PrismaModel> | $Enums.HTTPMethod
  }

  export type NestedEnumHTTPMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodWithAggregatesFilter<$PrismaModel> | $Enums.HTTPMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumHTTPMethodFilter<$PrismaModel>
    _max?: NestedEnumHTTPMethodFilter<$PrismaModel>
  }

  export type NestedEnumUnitFilter<$PrismaModel = never> = {
    equals?: $Enums.Unit | EnumUnitFieldRefInput<$PrismaModel>
    in?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumUnitFilter<$PrismaModel> | $Enums.Unit
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumUnitWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Unit | EnumUnitFieldRefInput<$PrismaModel>
    in?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    notIn?: $Enums.Unit[] | ListEnumUnitFieldRefInput<$PrismaModel>
    not?: NestedEnumUnitWithAggregatesFilter<$PrismaModel> | $Enums.Unit
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUnitFilter<$PrismaModel>
    _max?: NestedEnumUnitFilter<$PrismaModel>
  }

  export type NestedEnumCompanyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyTypeFilter<$PrismaModel> | $Enums.CompanyType
  }

  export type NestedEnumVerificationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusFilter<$PrismaModel> | $Enums.VerificationStatus
  }

  export type NestedEnumCompanyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyType | EnumCompanyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyType[] | ListEnumCompanyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyTypeWithAggregatesFilter<$PrismaModel> | $Enums.CompanyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompanyTypeFilter<$PrismaModel>
    _max?: NestedEnumCompanyTypeFilter<$PrismaModel>
  }

  export type NestedEnumVerificationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusWithAggregatesFilter<$PrismaModel> | $Enums.VerificationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationStatusFilter<$PrismaModel>
    _max?: NestedEnumVerificationStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedEnumVerificationCodeTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeFilter<$PrismaModel> | $Enums.VerificationCodeType
  }

  export type NestedEnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel> | $Enums.VerificationCodeType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
    _max?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
  }

  export type NestedEnumRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusFilter<$PrismaModel> | $Enums.RequestStatus
  }

  export type NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RequestStatus | EnumRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.RequestStatus[] | ListEnumRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.RequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumRequestStatusFilter<$PrismaModel>
  }

  export type CustomerProfileCreateWithoutBookingInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutBookingInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutBookingInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutBookingInput, CustomerProfileUncheckedCreateWithoutBookingInput>
  }

  export type ServiceProviderCreateWithoutBookingInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutBookingInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutBookingInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutBookingInput, ServiceProviderUncheckedCreateWithoutBookingInput>
  }

  export type ServiceRequestCreateWithoutBookingInput = {
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    Category: CategoryCreateNestedOneWithoutServiceRequestInput
    CustomerProfile: CustomerProfileCreateNestedOneWithoutServiceRequestInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestUncheckedCreateWithoutBookingInput = {
    id?: number
    customerId: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
  }

  export type ServiceRequestCreateOrConnectWithoutBookingInput = {
    where: ServiceRequestWhereUniqueInput
    create: XOR<ServiceRequestCreateWithoutBookingInput, ServiceRequestUncheckedCreateWithoutBookingInput>
  }

  export type StaffCreateWithoutBooking_Booking_staffIdToStaffInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutBooking_Booking_staffIdToStaffInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutBooking_Booking_staffIdToStaffInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutBooking_Booking_staffIdToStaffInput, StaffUncheckedCreateWithoutBooking_Booking_staffIdToStaffInput>
  }

  export type InspectionReportCreateWithoutBookingInput = {
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
    Staff: StaffCreateNestedOneWithoutInspectionReportInput
  }

  export type InspectionReportUncheckedCreateWithoutBookingInput = {
    id?: number
    staffId: number
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
  }

  export type InspectionReportCreateOrConnectWithoutBookingInput = {
    where: InspectionReportWhereUniqueInput
    create: XOR<InspectionReportCreateWithoutBookingInput, InspectionReportUncheckedCreateWithoutBookingInput>
  }

  export type ProposedServiceCreateWithoutBookingInput = {
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
    Service: ServiceCreateNestedOneWithoutProposedServiceInput
  }

  export type ProposedServiceUncheckedCreateWithoutBookingInput = {
    id?: number
    serviceId: number
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
  }

  export type ProposedServiceCreateOrConnectWithoutBookingInput = {
    where: ProposedServiceWhereUniqueInput
    create: XOR<ProposedServiceCreateWithoutBookingInput, ProposedServiceUncheckedCreateWithoutBookingInput>
  }

  export type ProposedServiceCreateManyBookingInputEnvelope = {
    data: ProposedServiceCreateManyBookingInput | ProposedServiceCreateManyBookingInput[]
    skipDuplicates?: boolean
  }

  export type TransactionCreateWithoutBookingInput = {
    amount: number
    status: $Enums.PaymentStatus
    method: $Enums.PaymentMethod
    paidAt?: Date | string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    orderCode?: string | null
  }

  export type TransactionUncheckedCreateWithoutBookingInput = {
    id?: number
    amount: number
    status: $Enums.PaymentStatus
    method: $Enums.PaymentMethod
    paidAt?: Date | string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    orderCode?: string | null
  }

  export type TransactionCreateOrConnectWithoutBookingInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutBookingInput, TransactionUncheckedCreateWithoutBookingInput>
  }

  export type WorkLogCreateWithoutBookingInput = {
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Staff: StaffCreateNestedOneWithoutWorkLogInput
  }

  export type WorkLogUncheckedCreateWithoutBookingInput = {
    id?: number
    staffId: number
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type WorkLogCreateOrConnectWithoutBookingInput = {
    where: WorkLogWhereUniqueInput
    create: XOR<WorkLogCreateWithoutBookingInput, WorkLogUncheckedCreateWithoutBookingInput>
  }

  export type WorkLogCreateManyBookingInputEnvelope = {
    data: WorkLogCreateManyBookingInput | WorkLogCreateManyBookingInput[]
    skipDuplicates?: boolean
  }

  export type CustomerProfileUpsertWithoutBookingInput = {
    update: XOR<CustomerProfileUpdateWithoutBookingInput, CustomerProfileUncheckedUpdateWithoutBookingInput>
    create: XOR<CustomerProfileCreateWithoutBookingInput, CustomerProfileUncheckedCreateWithoutBookingInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutBookingInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutBookingInput, CustomerProfileUncheckedUpdateWithoutBookingInput>
  }

  export type CustomerProfileUpdateWithoutBookingInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type ServiceProviderUpsertWithoutBookingInput = {
    update: XOR<ServiceProviderUpdateWithoutBookingInput, ServiceProviderUncheckedUpdateWithoutBookingInput>
    create: XOR<ServiceProviderCreateWithoutBookingInput, ServiceProviderUncheckedCreateWithoutBookingInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutBookingInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutBookingInput, ServiceProviderUncheckedUpdateWithoutBookingInput>
  }

  export type ServiceProviderUpdateWithoutBookingInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceRequestUpsertWithoutBookingInput = {
    update: XOR<ServiceRequestUpdateWithoutBookingInput, ServiceRequestUncheckedUpdateWithoutBookingInput>
    create: XOR<ServiceRequestCreateWithoutBookingInput, ServiceRequestUncheckedCreateWithoutBookingInput>
    where?: ServiceRequestWhereInput
  }

  export type ServiceRequestUpdateToOneWithWhereWithoutBookingInput = {
    where?: ServiceRequestWhereInput
    data: XOR<ServiceRequestUpdateWithoutBookingInput, ServiceRequestUncheckedUpdateWithoutBookingInput>
  }

  export type ServiceRequestUpdateWithoutBookingInput = {
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    Category?: CategoryUpdateOneRequiredWithoutServiceRequestNestedInput
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutServiceRequestNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type StaffUpsertWithoutBooking_Booking_staffIdToStaffInput = {
    update: XOR<StaffUpdateWithoutBooking_Booking_staffIdToStaffInput, StaffUncheckedUpdateWithoutBooking_Booking_staffIdToStaffInput>
    create: XOR<StaffCreateWithoutBooking_Booking_staffIdToStaffInput, StaffUncheckedCreateWithoutBooking_Booking_staffIdToStaffInput>
    where?: StaffWhereInput
  }

  export type StaffUpdateToOneWithWhereWithoutBooking_Booking_staffIdToStaffInput = {
    where?: StaffWhereInput
    data: XOR<StaffUpdateWithoutBooking_Booking_staffIdToStaffInput, StaffUncheckedUpdateWithoutBooking_Booking_staffIdToStaffInput>
  }

  export type StaffUpdateWithoutBooking_Booking_staffIdToStaffInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutBooking_Booking_staffIdToStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type InspectionReportUpsertWithoutBookingInput = {
    update: XOR<InspectionReportUpdateWithoutBookingInput, InspectionReportUncheckedUpdateWithoutBookingInput>
    create: XOR<InspectionReportCreateWithoutBookingInput, InspectionReportUncheckedCreateWithoutBookingInput>
    where?: InspectionReportWhereInput
  }

  export type InspectionReportUpdateToOneWithWhereWithoutBookingInput = {
    where?: InspectionReportWhereInput
    data: XOR<InspectionReportUpdateWithoutBookingInput, InspectionReportUncheckedUpdateWithoutBookingInput>
  }

  export type InspectionReportUpdateWithoutBookingInput = {
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Staff?: StaffUpdateOneRequiredWithoutInspectionReportNestedInput
  }

  export type InspectionReportUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceUpsertWithWhereUniqueWithoutBookingInput = {
    where: ProposedServiceWhereUniqueInput
    update: XOR<ProposedServiceUpdateWithoutBookingInput, ProposedServiceUncheckedUpdateWithoutBookingInput>
    create: XOR<ProposedServiceCreateWithoutBookingInput, ProposedServiceUncheckedCreateWithoutBookingInput>
  }

  export type ProposedServiceUpdateWithWhereUniqueWithoutBookingInput = {
    where: ProposedServiceWhereUniqueInput
    data: XOR<ProposedServiceUpdateWithoutBookingInput, ProposedServiceUncheckedUpdateWithoutBookingInput>
  }

  export type ProposedServiceUpdateManyWithWhereWithoutBookingInput = {
    where: ProposedServiceScalarWhereInput
    data: XOR<ProposedServiceUpdateManyMutationInput, ProposedServiceUncheckedUpdateManyWithoutBookingInput>
  }

  export type ProposedServiceScalarWhereInput = {
    AND?: ProposedServiceScalarWhereInput | ProposedServiceScalarWhereInput[]
    OR?: ProposedServiceScalarWhereInput[]
    NOT?: ProposedServiceScalarWhereInput | ProposedServiceScalarWhereInput[]
    id?: IntFilter<"ProposedService"> | number
    bookingId?: IntFilter<"ProposedService"> | number
    serviceId?: IntFilter<"ProposedService"> | number
    quantity?: IntFilter<"ProposedService"> | number
    price?: FloatFilter<"ProposedService"> | number
    notes?: StringNullableFilter<"ProposedService"> | string | null
    createdAt?: DateTimeFilter<"ProposedService"> | Date | string
  }

  export type TransactionUpsertWithoutBookingInput = {
    update: XOR<TransactionUpdateWithoutBookingInput, TransactionUncheckedUpdateWithoutBookingInput>
    create: XOR<TransactionCreateWithoutBookingInput, TransactionUncheckedCreateWithoutBookingInput>
    where?: TransactionWhereInput
  }

  export type TransactionUpdateToOneWithWhereWithoutBookingInput = {
    where?: TransactionWhereInput
    data: XOR<TransactionUpdateWithoutBookingInput, TransactionUncheckedUpdateWithoutBookingInput>
  }

  export type TransactionUpdateWithoutBookingInput = {
    amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransactionUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orderCode?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WorkLogUpsertWithWhereUniqueWithoutBookingInput = {
    where: WorkLogWhereUniqueInput
    update: XOR<WorkLogUpdateWithoutBookingInput, WorkLogUncheckedUpdateWithoutBookingInput>
    create: XOR<WorkLogCreateWithoutBookingInput, WorkLogUncheckedCreateWithoutBookingInput>
  }

  export type WorkLogUpdateWithWhereUniqueWithoutBookingInput = {
    where: WorkLogWhereUniqueInput
    data: XOR<WorkLogUpdateWithoutBookingInput, WorkLogUncheckedUpdateWithoutBookingInput>
  }

  export type WorkLogUpdateManyWithWhereWithoutBookingInput = {
    where: WorkLogScalarWhereInput
    data: XOR<WorkLogUpdateManyMutationInput, WorkLogUncheckedUpdateManyWithoutBookingInput>
  }

  export type WorkLogScalarWhereInput = {
    AND?: WorkLogScalarWhereInput | WorkLogScalarWhereInput[]
    OR?: WorkLogScalarWhereInput[]
    NOT?: WorkLogScalarWhereInput | WorkLogScalarWhereInput[]
    id?: IntFilter<"WorkLog"> | number
    staffId?: IntFilter<"WorkLog"> | number
    bookingId?: IntFilter<"WorkLog"> | number
    checkIn?: DateTimeNullableFilter<"WorkLog"> | Date | string | null
    checkOut?: DateTimeNullableFilter<"WorkLog"> | Date | string | null
    note?: StringNullableFilter<"WorkLog"> | string | null
    createdAt?: DateTimeFilter<"WorkLog"> | Date | string
    updatedAt?: DateTimeFilter<"WorkLog"> | Date | string
  }

  export type UserCreateWithoutCategory_Category_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutCategory_Category_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutCategory_Category_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCategory_Category_createdByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_createdByIdToUserInput>
  }

  export type UserCreateWithoutCategory_Category_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutCategory_Category_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutCategory_Category_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCategory_Category_deletedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_deletedByIdToUserInput>
  }

  export type CategoryCreateWithoutOther_CategoryInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutOther_CategoryInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutOther_CategoryInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutOther_CategoryInput, CategoryUncheckedCreateWithoutOther_CategoryInput>
  }

  export type CategoryCreateWithoutCategoryInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutCategoryInput = {
    id?: number
    name: string
    logo?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCategoryInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCategoryInput, CategoryUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryCreateManyCategoryInputEnvelope = {
    data: CategoryCreateManyCategoryInput | CategoryCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCategory_Category_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutCategory_Category_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutCategory_Category_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCategory_Category_updatedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_updatedByIdToUserInput>
  }

  export type CategoryTranslationCreateWithoutCategoryInput = {
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Language: LanguageCreateNestedOneWithoutCategoryTranslationInput
  }

  export type CategoryTranslationUncheckedCreateWithoutCategoryInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type CategoryTranslationCreateOrConnectWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryTranslationCreateManyCategoryInputEnvelope = {
    data: CategoryTranslationCreateManyCategoryInput | CategoryTranslationCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutCategoryInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutCategoryInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutCategoryInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput>
  }

  export type ServiceCreateManyCategoryInputEnvelope = {
    data: ServiceCreateManyCategoryInput | ServiceCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ServiceRequestCreateWithoutCategoryInput = {
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    Booking?: BookingCreateNestedOneWithoutServiceRequestInput
    CustomerProfile: CustomerProfileCreateNestedOneWithoutServiceRequestInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestUncheckedCreateWithoutCategoryInput = {
    id?: number
    customerId: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    Booking?: BookingUncheckedCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestCreateOrConnectWithoutCategoryInput = {
    where: ServiceRequestWhereUniqueInput
    create: XOR<ServiceRequestCreateWithoutCategoryInput, ServiceRequestUncheckedCreateWithoutCategoryInput>
  }

  export type ServiceRequestCreateManyCategoryInputEnvelope = {
    data: ServiceRequestCreateManyCategoryInput | ServiceRequestCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type StaffCategoryCreateWithoutCategoryInput = {
    Staff: StaffCreateNestedOneWithoutStaffCategoryInput
  }

  export type StaffCategoryUncheckedCreateWithoutCategoryInput = {
    staffId: number
  }

  export type StaffCategoryCreateOrConnectWithoutCategoryInput = {
    where: StaffCategoryWhereUniqueInput
    create: XOR<StaffCategoryCreateWithoutCategoryInput, StaffCategoryUncheckedCreateWithoutCategoryInput>
  }

  export type StaffCategoryCreateManyCategoryInputEnvelope = {
    data: StaffCategoryCreateManyCategoryInput | StaffCategoryCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCategory_Category_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutCategory_Category_createdByIdToUserInput, UserUncheckedUpdateWithoutCategory_Category_createdByIdToUserInput>
    create: XOR<UserCreateWithoutCategory_Category_createdByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCategory_Category_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCategory_Category_createdByIdToUserInput, UserUncheckedUpdateWithoutCategory_Category_createdByIdToUserInput>
  }

  export type UserUpdateWithoutCategory_Category_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutCategory_Category_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutCategory_Category_deletedByIdToUserInput = {
    update: XOR<UserUpdateWithoutCategory_Category_deletedByIdToUserInput, UserUncheckedUpdateWithoutCategory_Category_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutCategory_Category_deletedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_deletedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCategory_Category_deletedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCategory_Category_deletedByIdToUserInput, UserUncheckedUpdateWithoutCategory_Category_deletedByIdToUserInput>
  }

  export type UserUpdateWithoutCategory_Category_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutCategory_Category_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type CategoryUpsertWithoutOther_CategoryInput = {
    update: XOR<CategoryUpdateWithoutOther_CategoryInput, CategoryUncheckedUpdateWithoutOther_CategoryInput>
    create: XOR<CategoryCreateWithoutOther_CategoryInput, CategoryUncheckedCreateWithoutOther_CategoryInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutOther_CategoryInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutOther_CategoryInput, CategoryUncheckedUpdateWithoutOther_CategoryInput>
  }

  export type CategoryUpdateWithoutOther_CategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutOther_CategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutCategoryInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutCategoryInput, CategoryUncheckedUpdateWithoutCategoryInput>
    create: XOR<CategoryCreateWithoutCategoryInput, CategoryUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutCategoryInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutCategoryInput, CategoryUncheckedUpdateWithoutCategoryInput>
  }

  export type CategoryUpdateManyWithWhereWithoutCategoryInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutCategoryInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: IntFilter<"Category"> | number
    name?: StringFilter<"Category"> | string
    logo?: StringNullableFilter<"Category"> | string | null
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    createdById?: IntNullableFilter<"Category"> | number | null
    updatedById?: IntNullableFilter<"Category"> | number | null
    deletedById?: IntNullableFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
  }

  export type UserUpsertWithoutCategory_Category_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutCategory_Category_updatedByIdToUserInput, UserUncheckedUpdateWithoutCategory_Category_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutCategory_Category_updatedByIdToUserInput, UserUncheckedCreateWithoutCategory_Category_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCategory_Category_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCategory_Category_updatedByIdToUserInput, UserUncheckedUpdateWithoutCategory_Category_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutCategory_Category_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutCategory_Category_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutCategoryInput, CategoryTranslationUncheckedUpdateWithoutCategoryInput>
    create: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutCategoryInput, CategoryTranslationUncheckedUpdateWithoutCategoryInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutCategoryInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutCategoryInput>
  }

  export type CategoryTranslationScalarWhereInput = {
    AND?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
    OR?: CategoryTranslationScalarWhereInput[]
    NOT?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
    id?: IntFilter<"CategoryTranslation"> | number
    categoryId?: IntFilter<"CategoryTranslation"> | number
    languageId?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringFilter<"CategoryTranslation"> | string
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"CategoryTranslation"> | Date | string | null
  }

  export type ServiceUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutCategoryInput, ServiceUncheckedUpdateWithoutCategoryInput>
    create: XOR<ServiceCreateWithoutCategoryInput, ServiceUncheckedCreateWithoutCategoryInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutCategoryInput, ServiceUncheckedUpdateWithoutCategoryInput>
  }

  export type ServiceUpdateManyWithWhereWithoutCategoryInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ServiceScalarWhereInput = {
    AND?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
    OR?: ServiceScalarWhereInput[]
    NOT?: ServiceScalarWhereInput | ServiceScalarWhereInput[]
    id?: IntFilter<"Service"> | number
    basePrice?: FloatFilter<"Service"> | number
    virtualPrice?: FloatFilter<"Service"> | number
    images?: StringNullableListFilter<"Service">
    durationMinutes?: IntFilter<"Service"> | number
    providerId?: IntFilter<"Service"> | number
    createdById?: IntNullableFilter<"Service"> | number | null
    updatedById?: IntNullableFilter<"Service"> | number | null
    deletedById?: IntNullableFilter<"Service"> | number | null
    deletedAt?: DateTimeNullableFilter<"Service"> | Date | string | null
    createdAt?: DateTimeFilter<"Service"> | Date | string
    updatedAt?: DateTimeFilter<"Service"> | Date | string
    name?: StringFilter<"Service"> | string
    publishedAt?: DateTimeNullableFilter<"Service"> | Date | string | null
    description?: StringFilter<"Service"> | string
    categoryId?: IntFilter<"Service"> | number
    unit?: EnumUnitFilter<"Service"> | $Enums.Unit
  }

  export type ServiceRequestUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ServiceRequestWhereUniqueInput
    update: XOR<ServiceRequestUpdateWithoutCategoryInput, ServiceRequestUncheckedUpdateWithoutCategoryInput>
    create: XOR<ServiceRequestCreateWithoutCategoryInput, ServiceRequestUncheckedCreateWithoutCategoryInput>
  }

  export type ServiceRequestUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ServiceRequestWhereUniqueInput
    data: XOR<ServiceRequestUpdateWithoutCategoryInput, ServiceRequestUncheckedUpdateWithoutCategoryInput>
  }

  export type ServiceRequestUpdateManyWithWhereWithoutCategoryInput = {
    where: ServiceRequestScalarWhereInput
    data: XOR<ServiceRequestUpdateManyMutationInput, ServiceRequestUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ServiceRequestScalarWhereInput = {
    AND?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
    OR?: ServiceRequestScalarWhereInput[]
    NOT?: ServiceRequestScalarWhereInput | ServiceRequestScalarWhereInput[]
    id?: IntFilter<"ServiceRequest"> | number
    customerId?: IntFilter<"ServiceRequest"> | number
    providerId?: IntFilter<"ServiceRequest"> | number
    note?: StringNullableFilter<"ServiceRequest"> | string | null
    preferredDate?: DateTimeFilter<"ServiceRequest"> | Date | string
    status?: EnumRequestStatusFilter<"ServiceRequest"> | $Enums.RequestStatus
    createdAt?: DateTimeFilter<"ServiceRequest"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceRequest"> | Date | string
    location?: StringFilter<"ServiceRequest"> | string
    phoneNumber?: StringFilter<"ServiceRequest"> | string
    categoryId?: IntFilter<"ServiceRequest"> | number
  }

  export type StaffCategoryUpsertWithWhereUniqueWithoutCategoryInput = {
    where: StaffCategoryWhereUniqueInput
    update: XOR<StaffCategoryUpdateWithoutCategoryInput, StaffCategoryUncheckedUpdateWithoutCategoryInput>
    create: XOR<StaffCategoryCreateWithoutCategoryInput, StaffCategoryUncheckedCreateWithoutCategoryInput>
  }

  export type StaffCategoryUpdateWithWhereUniqueWithoutCategoryInput = {
    where: StaffCategoryWhereUniqueInput
    data: XOR<StaffCategoryUpdateWithoutCategoryInput, StaffCategoryUncheckedUpdateWithoutCategoryInput>
  }

  export type StaffCategoryUpdateManyWithWhereWithoutCategoryInput = {
    where: StaffCategoryScalarWhereInput
    data: XOR<StaffCategoryUpdateManyMutationInput, StaffCategoryUncheckedUpdateManyWithoutCategoryInput>
  }

  export type StaffCategoryScalarWhereInput = {
    AND?: StaffCategoryScalarWhereInput | StaffCategoryScalarWhereInput[]
    OR?: StaffCategoryScalarWhereInput[]
    NOT?: StaffCategoryScalarWhereInput | StaffCategoryScalarWhereInput[]
    staffId?: IntFilter<"StaffCategory"> | number
    categoryId?: IntFilter<"StaffCategory"> | number
  }

  export type CategoryCreateWithoutCategoryTranslationInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutCategoryTranslationInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCategoryTranslationInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCategoryTranslationInput, CategoryUncheckedCreateWithoutCategoryTranslationInput>
  }

  export type LanguageCreateWithoutCategoryTranslationInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Language_createdByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput
    User_Language_deletedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput
    User_Language_updatedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutCategoryTranslationInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutCategoryTranslationInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutCategoryTranslationInput, LanguageUncheckedCreateWithoutCategoryTranslationInput>
  }

  export type CategoryUpsertWithoutCategoryTranslationInput = {
    update: XOR<CategoryUpdateWithoutCategoryTranslationInput, CategoryUncheckedUpdateWithoutCategoryTranslationInput>
    create: XOR<CategoryCreateWithoutCategoryTranslationInput, CategoryUncheckedCreateWithoutCategoryTranslationInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutCategoryTranslationInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutCategoryTranslationInput, CategoryUncheckedUpdateWithoutCategoryTranslationInput>
  }

  export type CategoryUpdateWithoutCategoryTranslationInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCategoryTranslationInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type LanguageUpsertWithoutCategoryTranslationInput = {
    update: XOR<LanguageUpdateWithoutCategoryTranslationInput, LanguageUncheckedUpdateWithoutCategoryTranslationInput>
    create: XOR<LanguageCreateWithoutCategoryTranslationInput, LanguageUncheckedCreateWithoutCategoryTranslationInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutCategoryTranslationInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutCategoryTranslationInput, LanguageUncheckedUpdateWithoutCategoryTranslationInput>
  }

  export type LanguageUpdateWithoutCategoryTranslationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Language_createdByIdToUser?: UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput
    User_Language_deletedByIdToUser?: UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput
    User_Language_updatedByIdToUser?: UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutCategoryTranslationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type CustomerProfileCreateWithoutChatMessageInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutChatMessageInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutChatMessageInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutChatMessageInput, CustomerProfileUncheckedCreateWithoutChatMessageInput>
  }

  export type CustomerProfileUpsertWithoutChatMessageInput = {
    update: XOR<CustomerProfileUpdateWithoutChatMessageInput, CustomerProfileUncheckedUpdateWithoutChatMessageInput>
    create: XOR<CustomerProfileCreateWithoutChatMessageInput, CustomerProfileUncheckedCreateWithoutChatMessageInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutChatMessageInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutChatMessageInput, CustomerProfileUncheckedUpdateWithoutChatMessageInput>
  }

  export type CustomerProfileUpdateWithoutChatMessageInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutChatMessageInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type BookingCreateWithoutCustomerProfileInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutCustomerProfileInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutCustomerProfileInput, BookingUncheckedCreateWithoutCustomerProfileInput>
  }

  export type BookingCreateManyCustomerProfileInputEnvelope = {
    data: BookingCreateManyCustomerProfileInput | BookingCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type ChatMessageCreateWithoutCustomerProfileInput = {
    sender: string
    message: string
    sentAt?: Date | string
    isRead?: boolean
  }

  export type ChatMessageUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    sender: string
    message: string
    sentAt?: Date | string
    isRead?: boolean
  }

  export type ChatMessageCreateOrConnectWithoutCustomerProfileInput = {
    where: ChatMessageWhereUniqueInput
    create: XOR<ChatMessageCreateWithoutCustomerProfileInput, ChatMessageUncheckedCreateWithoutCustomerProfileInput>
  }

  export type ChatMessageCreateManyCustomerProfileInputEnvelope = {
    data: ChatMessageCreateManyCustomerProfileInput | ChatMessageCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCustomerProfileInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutCustomerProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCustomerProfileInput, UserUncheckedCreateWithoutCustomerProfileInput>
  }

  export type PackageRecommendationCreateWithoutCustomerProfileInput = {
    packageId: number
    reason?: string | null
    accepted?: boolean
    recommendedAt?: Date | string
    acceptedAt?: Date | string | null
  }

  export type PackageRecommendationUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    packageId: number
    reason?: string | null
    accepted?: boolean
    recommendedAt?: Date | string
    acceptedAt?: Date | string | null
  }

  export type PackageRecommendationCreateOrConnectWithoutCustomerProfileInput = {
    where: PackageRecommendationWhereUniqueInput
    create: XOR<PackageRecommendationCreateWithoutCustomerProfileInput, PackageRecommendationUncheckedCreateWithoutCustomerProfileInput>
  }

  export type PackageRecommendationCreateManyCustomerProfileInputEnvelope = {
    data: PackageRecommendationCreateManyCustomerProfileInput | PackageRecommendationCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type RecurringBookingCreateWithoutCustomerProfileInput = {
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    Service: ServiceCreateNestedOneWithoutRecurringBookingInput
  }

  export type RecurringBookingUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    serviceId: number
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RecurringBookingCreateOrConnectWithoutCustomerProfileInput = {
    where: RecurringBookingWhereUniqueInput
    create: XOR<RecurringBookingCreateWithoutCustomerProfileInput, RecurringBookingUncheckedCreateWithoutCustomerProfileInput>
  }

  export type RecurringBookingCreateManyCustomerProfileInputEnvelope = {
    data: RecurringBookingCreateManyCustomerProfileInput | RecurringBookingCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutCustomerProfileInput = {
    rating: number
    comment: string
    createdAt?: Date | string
    Service: ServiceCreateNestedOneWithoutReviewInput
    Staff: StaffCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    staffId: number
    serviceId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutCustomerProfileInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutCustomerProfileInput, ReviewUncheckedCreateWithoutCustomerProfileInput>
  }

  export type ReviewCreateManyCustomerProfileInputEnvelope = {
    data: ReviewCreateManyCustomerProfileInput | ReviewCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type RewardPointCreateWithoutCustomerProfileInput = {
    points?: number
    reason?: string | null
    createdAt?: Date | string
  }

  export type RewardPointUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    points?: number
    reason?: string | null
    createdAt?: Date | string
  }

  export type RewardPointCreateOrConnectWithoutCustomerProfileInput = {
    where: RewardPointWhereUniqueInput
    create: XOR<RewardPointCreateWithoutCustomerProfileInput, RewardPointUncheckedCreateWithoutCustomerProfileInput>
  }

  export type RewardPointCreateManyCustomerProfileInputEnvelope = {
    data: RewardPointCreateManyCustomerProfileInput | RewardPointCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type ServiceRequestCreateWithoutCustomerProfileInput = {
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    Booking?: BookingCreateNestedOneWithoutServiceRequestInput
    Category: CategoryCreateNestedOneWithoutServiceRequestInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestUncheckedCreateWithoutCustomerProfileInput = {
    id?: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
    Booking?: BookingUncheckedCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestCreateOrConnectWithoutCustomerProfileInput = {
    where: ServiceRequestWhereUniqueInput
    create: XOR<ServiceRequestCreateWithoutCustomerProfileInput, ServiceRequestUncheckedCreateWithoutCustomerProfileInput>
  }

  export type ServiceRequestCreateManyCustomerProfileInputEnvelope = {
    data: ServiceRequestCreateManyCustomerProfileInput | ServiceRequestCreateManyCustomerProfileInput[]
    skipDuplicates?: boolean
  }

  export type BookingUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: BookingWhereUniqueInput
    update: XOR<BookingUpdateWithoutCustomerProfileInput, BookingUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<BookingCreateWithoutCustomerProfileInput, BookingUncheckedCreateWithoutCustomerProfileInput>
  }

  export type BookingUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: BookingWhereUniqueInput
    data: XOR<BookingUpdateWithoutCustomerProfileInput, BookingUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type BookingUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: BookingScalarWhereInput
    data: XOR<BookingUpdateManyMutationInput, BookingUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type BookingScalarWhereInput = {
    AND?: BookingScalarWhereInput | BookingScalarWhereInput[]
    OR?: BookingScalarWhereInput[]
    NOT?: BookingScalarWhereInput | BookingScalarWhereInput[]
    id?: IntFilter<"Booking"> | number
    customerId?: IntFilter<"Booking"> | number
    providerId?: IntFilter<"Booking"> | number
    status?: EnumBookingStatusFilter<"Booking"> | $Enums.BookingStatus
    deletedAt?: DateTimeNullableFilter<"Booking"> | Date | string | null
    createdAt?: DateTimeFilter<"Booking"> | Date | string
    updatedAt?: DateTimeFilter<"Booking"> | Date | string
    staffId?: IntNullableFilter<"Booking"> | number | null
    serviceRequestId?: IntNullableFilter<"Booking"> | number | null
  }

  export type ChatMessageUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: ChatMessageWhereUniqueInput
    update: XOR<ChatMessageUpdateWithoutCustomerProfileInput, ChatMessageUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<ChatMessageCreateWithoutCustomerProfileInput, ChatMessageUncheckedCreateWithoutCustomerProfileInput>
  }

  export type ChatMessageUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: ChatMessageWhereUniqueInput
    data: XOR<ChatMessageUpdateWithoutCustomerProfileInput, ChatMessageUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type ChatMessageUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: ChatMessageScalarWhereInput
    data: XOR<ChatMessageUpdateManyMutationInput, ChatMessageUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type ChatMessageScalarWhereInput = {
    AND?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
    OR?: ChatMessageScalarWhereInput[]
    NOT?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
    id?: IntFilter<"ChatMessage"> | number
    customerId?: IntFilter<"ChatMessage"> | number
    sender?: StringFilter<"ChatMessage"> | string
    message?: StringFilter<"ChatMessage"> | string
    sentAt?: DateTimeFilter<"ChatMessage"> | Date | string
    isRead?: BoolFilter<"ChatMessage"> | boolean
  }

  export type UserUpsertWithoutCustomerProfileInput = {
    update: XOR<UserUpdateWithoutCustomerProfileInput, UserUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<UserCreateWithoutCustomerProfileInput, UserUncheckedCreateWithoutCustomerProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCustomerProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCustomerProfileInput, UserUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type UserUpdateWithoutCustomerProfileInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type PackageRecommendationUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: PackageRecommendationWhereUniqueInput
    update: XOR<PackageRecommendationUpdateWithoutCustomerProfileInput, PackageRecommendationUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<PackageRecommendationCreateWithoutCustomerProfileInput, PackageRecommendationUncheckedCreateWithoutCustomerProfileInput>
  }

  export type PackageRecommendationUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: PackageRecommendationWhereUniqueInput
    data: XOR<PackageRecommendationUpdateWithoutCustomerProfileInput, PackageRecommendationUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type PackageRecommendationUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: PackageRecommendationScalarWhereInput
    data: XOR<PackageRecommendationUpdateManyMutationInput, PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type PackageRecommendationScalarWhereInput = {
    AND?: PackageRecommendationScalarWhereInput | PackageRecommendationScalarWhereInput[]
    OR?: PackageRecommendationScalarWhereInput[]
    NOT?: PackageRecommendationScalarWhereInput | PackageRecommendationScalarWhereInput[]
    id?: IntFilter<"PackageRecommendation"> | number
    customerId?: IntFilter<"PackageRecommendation"> | number
    packageId?: IntFilter<"PackageRecommendation"> | number
    reason?: StringNullableFilter<"PackageRecommendation"> | string | null
    accepted?: BoolFilter<"PackageRecommendation"> | boolean
    recommendedAt?: DateTimeFilter<"PackageRecommendation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"PackageRecommendation"> | Date | string | null
  }

  export type RecurringBookingUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: RecurringBookingWhereUniqueInput
    update: XOR<RecurringBookingUpdateWithoutCustomerProfileInput, RecurringBookingUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<RecurringBookingCreateWithoutCustomerProfileInput, RecurringBookingUncheckedCreateWithoutCustomerProfileInput>
  }

  export type RecurringBookingUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: RecurringBookingWhereUniqueInput
    data: XOR<RecurringBookingUpdateWithoutCustomerProfileInput, RecurringBookingUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type RecurringBookingUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: RecurringBookingScalarWhereInput
    data: XOR<RecurringBookingUpdateManyMutationInput, RecurringBookingUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type RecurringBookingScalarWhereInput = {
    AND?: RecurringBookingScalarWhereInput | RecurringBookingScalarWhereInput[]
    OR?: RecurringBookingScalarWhereInput[]
    NOT?: RecurringBookingScalarWhereInput | RecurringBookingScalarWhereInput[]
    id?: IntFilter<"RecurringBooking"> | number
    customerId?: IntFilter<"RecurringBooking"> | number
    serviceId?: IntFilter<"RecurringBooking"> | number
    interval?: StringFilter<"RecurringBooking"> | string
    nextRunDate?: DateTimeFilter<"RecurringBooking"> | Date | string
    active?: BoolFilter<"RecurringBooking"> | boolean
    createdAt?: DateTimeFilter<"RecurringBooking"> | Date | string
    updatedAt?: DateTimeFilter<"RecurringBooking"> | Date | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutCustomerProfileInput, ReviewUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<ReviewCreateWithoutCustomerProfileInput, ReviewUncheckedCreateWithoutCustomerProfileInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutCustomerProfileInput, ReviewUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type ReviewUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: IntFilter<"Review"> | number
    customerId?: IntFilter<"Review"> | number
    staffId?: IntFilter<"Review"> | number
    serviceId?: IntFilter<"Review"> | number
    rating?: IntFilter<"Review"> | number
    comment?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
  }

  export type RewardPointUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: RewardPointWhereUniqueInput
    update: XOR<RewardPointUpdateWithoutCustomerProfileInput, RewardPointUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<RewardPointCreateWithoutCustomerProfileInput, RewardPointUncheckedCreateWithoutCustomerProfileInput>
  }

  export type RewardPointUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: RewardPointWhereUniqueInput
    data: XOR<RewardPointUpdateWithoutCustomerProfileInput, RewardPointUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type RewardPointUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: RewardPointScalarWhereInput
    data: XOR<RewardPointUpdateManyMutationInput, RewardPointUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type RewardPointScalarWhereInput = {
    AND?: RewardPointScalarWhereInput | RewardPointScalarWhereInput[]
    OR?: RewardPointScalarWhereInput[]
    NOT?: RewardPointScalarWhereInput | RewardPointScalarWhereInput[]
    id?: IntFilter<"RewardPoint"> | number
    customerId?: IntFilter<"RewardPoint"> | number
    points?: IntFilter<"RewardPoint"> | number
    reason?: StringNullableFilter<"RewardPoint"> | string | null
    createdAt?: DateTimeFilter<"RewardPoint"> | Date | string
  }

  export type ServiceRequestUpsertWithWhereUniqueWithoutCustomerProfileInput = {
    where: ServiceRequestWhereUniqueInput
    update: XOR<ServiceRequestUpdateWithoutCustomerProfileInput, ServiceRequestUncheckedUpdateWithoutCustomerProfileInput>
    create: XOR<ServiceRequestCreateWithoutCustomerProfileInput, ServiceRequestUncheckedCreateWithoutCustomerProfileInput>
  }

  export type ServiceRequestUpdateWithWhereUniqueWithoutCustomerProfileInput = {
    where: ServiceRequestWhereUniqueInput
    data: XOR<ServiceRequestUpdateWithoutCustomerProfileInput, ServiceRequestUncheckedUpdateWithoutCustomerProfileInput>
  }

  export type ServiceRequestUpdateManyWithWhereWithoutCustomerProfileInput = {
    where: ServiceRequestScalarWhereInput
    data: XOR<ServiceRequestUpdateManyMutationInput, ServiceRequestUncheckedUpdateManyWithoutCustomerProfileInput>
  }

  export type UserCreateWithoutDeviceInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutDeviceInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutDeviceInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeviceInput, UserUncheckedCreateWithoutDeviceInput>
  }

  export type RefreshTokenCreateWithoutDeviceInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    User: UserCreateNestedOneWithoutRefreshTokenInput
  }

  export type RefreshTokenUncheckedCreateWithoutDeviceInput = {
    id?: number
    token: string
    userId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutDeviceInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput>
  }

  export type RefreshTokenCreateManyDeviceInputEnvelope = {
    data: RefreshTokenCreateManyDeviceInput | RefreshTokenCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutDeviceInput = {
    update: XOR<UserUpdateWithoutDeviceInput, UserUncheckedUpdateWithoutDeviceInput>
    create: XOR<UserCreateWithoutDeviceInput, UserUncheckedCreateWithoutDeviceInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeviceInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeviceInput, UserUncheckedUpdateWithoutDeviceInput>
  }

  export type UserUpdateWithoutDeviceInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutDeviceInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutDeviceInput, RefreshTokenUncheckedUpdateWithoutDeviceInput>
    create: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutDeviceInput, RefreshTokenUncheckedUpdateWithoutDeviceInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutDeviceInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutDeviceInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: IntFilter<"RefreshToken"> | number
    token?: StringFilter<"RefreshToken"> | string
    userId?: IntFilter<"RefreshToken"> | number
    deviceId?: IntFilter<"RefreshToken"> | number
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type CategoryTranslationCreateWithoutLanguageInput = {
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Category: CategoryCreateNestedOneWithoutCategoryTranslationInput
  }

  export type CategoryTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    categoryId: number
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type CategoryTranslationCreateOrConnectWithoutLanguageInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type CategoryTranslationCreateManyLanguageInputEnvelope = {
    data: CategoryTranslationCreateManyLanguageInput | CategoryTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutLanguage_Language_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutLanguage_Language_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutLanguage_Language_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLanguage_Language_createdByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_createdByIdToUserInput>
  }

  export type UserCreateWithoutLanguage_Language_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutLanguage_Language_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutLanguage_Language_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLanguage_Language_deletedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_deletedByIdToUserInput>
  }

  export type UserCreateWithoutLanguage_Language_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutLanguage_Language_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutLanguage_Language_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLanguage_Language_updatedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_updatedByIdToUserInput>
  }

  export type ServiceProviderTranslationCreateWithoutLanguageInput = {
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceProviderTranslationInput
  }

  export type ServiceProviderTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    providerId: number
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceProviderTranslationCreateOrConnectWithoutLanguageInput = {
    where: ServiceProviderTranslationWhereUniqueInput
    create: XOR<ServiceProviderTranslationCreateWithoutLanguageInput, ServiceProviderTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type ServiceProviderTranslationCreateManyLanguageInputEnvelope = {
    data: ServiceProviderTranslationCreateManyLanguageInput | ServiceProviderTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type ServiceTranslationCreateWithoutLanguageInput = {
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Service: ServiceCreateNestedOneWithoutServiceTranslationInput
  }

  export type ServiceTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    serviceId: number
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceTranslationCreateOrConnectWithoutLanguageInput = {
    where: ServiceTranslationWhereUniqueInput
    create: XOR<ServiceTranslationCreateWithoutLanguageInput, ServiceTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type ServiceTranslationCreateManyLanguageInputEnvelope = {
    data: ServiceTranslationCreateManyLanguageInput | ServiceTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutLanguageInput, CategoryTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutLanguageInput, CategoryTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type UserUpsertWithoutLanguage_Language_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutLanguage_Language_createdByIdToUserInput, UserUncheckedUpdateWithoutLanguage_Language_createdByIdToUserInput>
    create: XOR<UserCreateWithoutLanguage_Language_createdByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLanguage_Language_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLanguage_Language_createdByIdToUserInput, UserUncheckedUpdateWithoutLanguage_Language_createdByIdToUserInput>
  }

  export type UserUpdateWithoutLanguage_Language_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutLanguage_Language_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutLanguage_Language_deletedByIdToUserInput = {
    update: XOR<UserUpdateWithoutLanguage_Language_deletedByIdToUserInput, UserUncheckedUpdateWithoutLanguage_Language_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutLanguage_Language_deletedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_deletedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLanguage_Language_deletedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLanguage_Language_deletedByIdToUserInput, UserUncheckedUpdateWithoutLanguage_Language_deletedByIdToUserInput>
  }

  export type UserUpdateWithoutLanguage_Language_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutLanguage_Language_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutLanguage_Language_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutLanguage_Language_updatedByIdToUserInput, UserUncheckedUpdateWithoutLanguage_Language_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutLanguage_Language_updatedByIdToUserInput, UserUncheckedCreateWithoutLanguage_Language_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLanguage_Language_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLanguage_Language_updatedByIdToUserInput, UserUncheckedUpdateWithoutLanguage_Language_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutLanguage_Language_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutLanguage_Language_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type ServiceProviderTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: ServiceProviderTranslationWhereUniqueInput
    update: XOR<ServiceProviderTranslationUpdateWithoutLanguageInput, ServiceProviderTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<ServiceProviderTranslationCreateWithoutLanguageInput, ServiceProviderTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type ServiceProviderTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: ServiceProviderTranslationWhereUniqueInput
    data: XOR<ServiceProviderTranslationUpdateWithoutLanguageInput, ServiceProviderTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type ServiceProviderTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: ServiceProviderTranslationScalarWhereInput
    data: XOR<ServiceProviderTranslationUpdateManyMutationInput, ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type ServiceProviderTranslationScalarWhereInput = {
    AND?: ServiceProviderTranslationScalarWhereInput | ServiceProviderTranslationScalarWhereInput[]
    OR?: ServiceProviderTranslationScalarWhereInput[]
    NOT?: ServiceProviderTranslationScalarWhereInput | ServiceProviderTranslationScalarWhereInput[]
    id?: IntFilter<"ServiceProviderTranslation"> | number
    providerId?: IntFilter<"ServiceProviderTranslation"> | number
    languageId?: StringFilter<"ServiceProviderTranslation"> | string
    name?: StringFilter<"ServiceProviderTranslation"> | string
    description?: StringNullableFilter<"ServiceProviderTranslation"> | string | null
    createdAt?: DateTimeFilter<"ServiceProviderTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceProviderTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceProviderTranslation"> | Date | string | null
  }

  export type ServiceTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: ServiceTranslationWhereUniqueInput
    update: XOR<ServiceTranslationUpdateWithoutLanguageInput, ServiceTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<ServiceTranslationCreateWithoutLanguageInput, ServiceTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type ServiceTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: ServiceTranslationWhereUniqueInput
    data: XOR<ServiceTranslationUpdateWithoutLanguageInput, ServiceTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type ServiceTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: ServiceTranslationScalarWhereInput
    data: XOR<ServiceTranslationUpdateManyMutationInput, ServiceTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type ServiceTranslationScalarWhereInput = {
    AND?: ServiceTranslationScalarWhereInput | ServiceTranslationScalarWhereInput[]
    OR?: ServiceTranslationScalarWhereInput[]
    NOT?: ServiceTranslationScalarWhereInput | ServiceTranslationScalarWhereInput[]
    id?: IntFilter<"ServiceTranslation"> | number
    serviceId?: IntFilter<"ServiceTranslation"> | number
    languageId?: StringFilter<"ServiceTranslation"> | string
    name?: StringFilter<"ServiceTranslation"> | string
    description?: StringFilter<"ServiceTranslation"> | string
    createdAt?: DateTimeFilter<"ServiceTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceTranslation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceTranslation"> | Date | string | null
  }

  export type UserCreateWithoutNotificationInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutNotificationInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutNotificationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
  }

  export type UserUpsertWithoutNotificationInput = {
    update: XOR<UserUpdateWithoutNotificationInput, UserUncheckedUpdateWithoutNotificationInput>
    create: XOR<UserCreateWithoutNotificationInput, UserUncheckedCreateWithoutNotificationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationInput, UserUncheckedUpdateWithoutNotificationInput>
  }

  export type UserUpdateWithoutNotificationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type CustomerProfileCreateWithoutPackageRecommendationInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutPackageRecommendationInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutPackageRecommendationInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutPackageRecommendationInput, CustomerProfileUncheckedCreateWithoutPackageRecommendationInput>
  }

  export type CustomerProfileUpsertWithoutPackageRecommendationInput = {
    update: XOR<CustomerProfileUpdateWithoutPackageRecommendationInput, CustomerProfileUncheckedUpdateWithoutPackageRecommendationInput>
    create: XOR<CustomerProfileCreateWithoutPackageRecommendationInput, CustomerProfileUncheckedCreateWithoutPackageRecommendationInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutPackageRecommendationInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutPackageRecommendationInput, CustomerProfileUncheckedUpdateWithoutPackageRecommendationInput>
  }

  export type CustomerProfileUpdateWithoutPackageRecommendationInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutPackageRecommendationInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type UserCreateWithoutPermission_Permission_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutPermission_Permission_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutPermission_Permission_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPermission_Permission_createdByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_createdByIdToUserInput>
  }

  export type UserCreateWithoutPermission_Permission_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutPermission_Permission_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutPermission_Permission_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPermission_Permission_deletedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_deletedByIdToUserInput>
  }

  export type UserCreateWithoutPermission_Permission_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutPermission_Permission_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutPermission_Permission_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPermission_Permission_updatedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_updatedByIdToUserInput>
  }

  export type RoleCreateWithoutPermissionInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Role_createdByIdToUser?: UserCreateNestedOneWithoutRole_Role_createdByIdToUserInput
    User_Role_deletedByIdToUser?: UserCreateNestedOneWithoutRole_Role_deletedByIdToUserInput
    User_Role_updatedByIdToUser?: UserCreateNestedOneWithoutRole_Role_updatedByIdToUserInput
    User_UserRoles?: UserCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleUncheckedCreateWithoutPermissionInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_UserRoles?: UserUncheckedCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleCreateOrConnectWithoutPermissionInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput>
  }

  export type UserUpsertWithoutPermission_Permission_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutPermission_Permission_createdByIdToUserInput, UserUncheckedUpdateWithoutPermission_Permission_createdByIdToUserInput>
    create: XOR<UserCreateWithoutPermission_Permission_createdByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPermission_Permission_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPermission_Permission_createdByIdToUserInput, UserUncheckedUpdateWithoutPermission_Permission_createdByIdToUserInput>
  }

  export type UserUpdateWithoutPermission_Permission_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutPermission_Permission_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutPermission_Permission_deletedByIdToUserInput = {
    update: XOR<UserUpdateWithoutPermission_Permission_deletedByIdToUserInput, UserUncheckedUpdateWithoutPermission_Permission_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutPermission_Permission_deletedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_deletedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPermission_Permission_deletedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPermission_Permission_deletedByIdToUserInput, UserUncheckedUpdateWithoutPermission_Permission_deletedByIdToUserInput>
  }

  export type UserUpdateWithoutPermission_Permission_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutPermission_Permission_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutPermission_Permission_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutPermission_Permission_updatedByIdToUserInput, UserUncheckedUpdateWithoutPermission_Permission_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutPermission_Permission_updatedByIdToUserInput, UserUncheckedCreateWithoutPermission_Permission_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPermission_Permission_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPermission_Permission_updatedByIdToUserInput, UserUncheckedUpdateWithoutPermission_Permission_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutPermission_Permission_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutPermission_Permission_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type RoleUpsertWithWhereUniqueWithoutPermissionInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutPermissionInput, RoleUncheckedUpdateWithoutPermissionInput>
    create: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutPermissionInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutPermissionInput, RoleUncheckedUpdateWithoutPermissionInput>
  }

  export type RoleUpdateManyWithWhereWithoutPermissionInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutPermissionInput>
  }

  export type RoleScalarWhereInput = {
    AND?: RoleScalarWhereInput | RoleScalarWhereInput[]
    OR?: RoleScalarWhereInput[]
    NOT?: RoleScalarWhereInput | RoleScalarWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    createdById?: IntNullableFilter<"Role"> | number | null
    updatedById?: IntNullableFilter<"Role"> | number | null
    deletedById?: IntNullableFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
  }

  export type CustomerProfileCreateWithoutRecurringBookingInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutRecurringBookingInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutRecurringBookingInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutRecurringBookingInput, CustomerProfileUncheckedCreateWithoutRecurringBookingInput>
  }

  export type ServiceCreateWithoutRecurringBookingInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutRecurringBookingInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutRecurringBookingInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutRecurringBookingInput, ServiceUncheckedCreateWithoutRecurringBookingInput>
  }

  export type CustomerProfileUpsertWithoutRecurringBookingInput = {
    update: XOR<CustomerProfileUpdateWithoutRecurringBookingInput, CustomerProfileUncheckedUpdateWithoutRecurringBookingInput>
    create: XOR<CustomerProfileCreateWithoutRecurringBookingInput, CustomerProfileUncheckedCreateWithoutRecurringBookingInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutRecurringBookingInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutRecurringBookingInput, CustomerProfileUncheckedUpdateWithoutRecurringBookingInput>
  }

  export type CustomerProfileUpdateWithoutRecurringBookingInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutRecurringBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type ServiceUpsertWithoutRecurringBookingInput = {
    update: XOR<ServiceUpdateWithoutRecurringBookingInput, ServiceUncheckedUpdateWithoutRecurringBookingInput>
    create: XOR<ServiceCreateWithoutRecurringBookingInput, ServiceUncheckedCreateWithoutRecurringBookingInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutRecurringBookingInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutRecurringBookingInput, ServiceUncheckedUpdateWithoutRecurringBookingInput>
  }

  export type ServiceUpdateWithoutRecurringBookingInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutRecurringBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type DeviceCreateWithoutRefreshTokenInput = {
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
    User: UserCreateNestedOneWithoutDeviceInput
  }

  export type DeviceUncheckedCreateWithoutRefreshTokenInput = {
    id?: number
    userId: number
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
  }

  export type DeviceCreateOrConnectWithoutRefreshTokenInput = {
    where: DeviceWhereUniqueInput
    create: XOR<DeviceCreateWithoutRefreshTokenInput, DeviceUncheckedCreateWithoutRefreshTokenInput>
  }

  export type UserCreateWithoutRefreshTokenInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutRefreshTokenInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutRefreshTokenInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
  }

  export type DeviceUpsertWithoutRefreshTokenInput = {
    update: XOR<DeviceUpdateWithoutRefreshTokenInput, DeviceUncheckedUpdateWithoutRefreshTokenInput>
    create: XOR<DeviceCreateWithoutRefreshTokenInput, DeviceUncheckedCreateWithoutRefreshTokenInput>
    where?: DeviceWhereInput
  }

  export type DeviceUpdateToOneWithWhereWithoutRefreshTokenInput = {
    where?: DeviceWhereInput
    data: XOR<DeviceUpdateWithoutRefreshTokenInput, DeviceUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type DeviceUpdateWithoutRefreshTokenInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    User?: UserUpdateOneRequiredWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateWithoutRefreshTokenInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type UserUpsertWithoutRefreshTokenInput = {
    update: XOR<UserUpdateWithoutRefreshTokenInput, UserUncheckedUpdateWithoutRefreshTokenInput>
    create: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokenInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokenInput, UserUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type UserUpdateWithoutRefreshTokenInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokenInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type CustomerProfileCreateWithoutReviewInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutReviewInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutReviewInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutReviewInput, CustomerProfileUncheckedCreateWithoutReviewInput>
  }

  export type ServiceCreateWithoutReviewInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutReviewInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutReviewInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutReviewInput, ServiceUncheckedCreateWithoutReviewInput>
  }

  export type StaffCreateWithoutReviewInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutReviewInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutReviewInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutReviewInput, StaffUncheckedCreateWithoutReviewInput>
  }

  export type CustomerProfileUpsertWithoutReviewInput = {
    update: XOR<CustomerProfileUpdateWithoutReviewInput, CustomerProfileUncheckedUpdateWithoutReviewInput>
    create: XOR<CustomerProfileCreateWithoutReviewInput, CustomerProfileUncheckedCreateWithoutReviewInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutReviewInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutReviewInput, CustomerProfileUncheckedUpdateWithoutReviewInput>
  }

  export type CustomerProfileUpdateWithoutReviewInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type ServiceUpsertWithoutReviewInput = {
    update: XOR<ServiceUpdateWithoutReviewInput, ServiceUncheckedUpdateWithoutReviewInput>
    create: XOR<ServiceCreateWithoutReviewInput, ServiceUncheckedCreateWithoutReviewInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutReviewInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutReviewInput, ServiceUncheckedUpdateWithoutReviewInput>
  }

  export type ServiceUpdateWithoutReviewInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type StaffUpsertWithoutReviewInput = {
    update: XOR<StaffUpdateWithoutReviewInput, StaffUncheckedUpdateWithoutReviewInput>
    create: XOR<StaffCreateWithoutReviewInput, StaffUncheckedCreateWithoutReviewInput>
    where?: StaffWhereInput
  }

  export type StaffUpdateToOneWithWhereWithoutReviewInput = {
    where?: StaffWhereInput
    data: XOR<StaffUpdateWithoutReviewInput, StaffUncheckedUpdateWithoutReviewInput>
  }

  export type StaffUpdateWithoutReviewInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutReviewInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type CustomerProfileCreateWithoutRewardPointInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutRewardPointInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutRewardPointInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutRewardPointInput, CustomerProfileUncheckedCreateWithoutRewardPointInput>
  }

  export type CustomerProfileUpsertWithoutRewardPointInput = {
    update: XOR<CustomerProfileUpdateWithoutRewardPointInput, CustomerProfileUncheckedUpdateWithoutRewardPointInput>
    create: XOR<CustomerProfileCreateWithoutRewardPointInput, CustomerProfileUncheckedCreateWithoutRewardPointInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutRewardPointInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutRewardPointInput, CustomerProfileUncheckedUpdateWithoutRewardPointInput>
  }

  export type CustomerProfileUpdateWithoutRewardPointInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutRewardPointInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type UserCreateWithoutRole_Role_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutRole_Role_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutRole_Role_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRole_Role_createdByIdToUserInput, UserUncheckedCreateWithoutRole_Role_createdByIdToUserInput>
  }

  export type UserCreateWithoutRole_Role_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutRole_Role_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutRole_Role_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRole_Role_deletedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_deletedByIdToUserInput>
  }

  export type UserCreateWithoutRole_Role_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutRole_Role_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutRole_Role_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRole_Role_updatedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_updatedByIdToUserInput>
  }

  export type PermissionCreateWithoutRoleInput = {
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Permission_createdByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_createdByIdToUserInput
    User_Permission_deletedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_deletedByIdToUserInput
    User_Permission_updatedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_updatedByIdToUserInput
  }

  export type PermissionUncheckedCreateWithoutRoleInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type PermissionCreateOrConnectWithoutRoleInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutRoleInput, PermissionUncheckedCreateWithoutRoleInput>
  }

  export type UserCreateWithoutRole_UserRolesInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
  }

  export type UserUncheckedCreateWithoutRole_UserRolesInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
  }

  export type UserCreateOrConnectWithoutRole_UserRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRole_UserRolesInput, UserUncheckedCreateWithoutRole_UserRolesInput>
  }

  export type UserUpsertWithoutRole_Role_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutRole_Role_createdByIdToUserInput, UserUncheckedUpdateWithoutRole_Role_createdByIdToUserInput>
    create: XOR<UserCreateWithoutRole_Role_createdByIdToUserInput, UserUncheckedCreateWithoutRole_Role_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRole_Role_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRole_Role_createdByIdToUserInput, UserUncheckedUpdateWithoutRole_Role_createdByIdToUserInput>
  }

  export type UserUpdateWithoutRole_Role_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutRole_Role_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutRole_Role_deletedByIdToUserInput = {
    update: XOR<UserUpdateWithoutRole_Role_deletedByIdToUserInput, UserUncheckedUpdateWithoutRole_Role_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutRole_Role_deletedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_deletedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRole_Role_deletedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRole_Role_deletedByIdToUserInput, UserUncheckedUpdateWithoutRole_Role_deletedByIdToUserInput>
  }

  export type UserUpdateWithoutRole_Role_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutRole_Role_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutRole_Role_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutRole_Role_updatedByIdToUserInput, UserUncheckedUpdateWithoutRole_Role_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutRole_Role_updatedByIdToUserInput, UserUncheckedCreateWithoutRole_Role_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRole_Role_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRole_Role_updatedByIdToUserInput, UserUncheckedUpdateWithoutRole_Role_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutRole_Role_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutRole_Role_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type PermissionUpsertWithWhereUniqueWithoutRoleInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutRoleInput, PermissionUncheckedUpdateWithoutRoleInput>
    create: XOR<PermissionCreateWithoutRoleInput, PermissionUncheckedCreateWithoutRoleInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutRoleInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutRoleInput, PermissionUncheckedUpdateWithoutRoleInput>
  }

  export type PermissionUpdateManyWithWhereWithoutRoleInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutRoleInput>
  }

  export type PermissionScalarWhereInput = {
    AND?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
    OR?: PermissionScalarWhereInput[]
    NOT?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
    id?: IntFilter<"Permission"> | number
    name?: StringFilter<"Permission"> | string
    description?: StringNullableFilter<"Permission"> | string | null
    path?: StringFilter<"Permission"> | string
    method?: EnumHTTPMethodFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringNullableFilter<"Permission"> | string | null
    createdById?: IntNullableFilter<"Permission"> | number | null
    updatedById?: IntNullableFilter<"Permission"> | number | null
    deletedById?: IntNullableFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
  }

  export type UserUpsertWithWhereUniqueWithoutRole_UserRolesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRole_UserRolesInput, UserUncheckedUpdateWithoutRole_UserRolesInput>
    create: XOR<UserCreateWithoutRole_UserRolesInput, UserUncheckedCreateWithoutRole_UserRolesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRole_UserRolesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRole_UserRolesInput, UserUncheckedUpdateWithoutRole_UserRolesInput>
  }

  export type UserUpdateManyWithWhereWithoutRole_UserRolesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRole_UserRolesInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    phone?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    totpSecret?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    createdById?: IntNullableFilter<"User"> | number | null
    updatedById?: IntNullableFilter<"User"> | number | null
    deletedById?: IntNullableFilter<"User"> | number | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type ProposedServiceCreateWithoutServiceInput = {
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
    Booking: BookingCreateNestedOneWithoutProposedServiceInput
  }

  export type ProposedServiceUncheckedCreateWithoutServiceInput = {
    id?: number
    bookingId: number
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
  }

  export type ProposedServiceCreateOrConnectWithoutServiceInput = {
    where: ProposedServiceWhereUniqueInput
    create: XOR<ProposedServiceCreateWithoutServiceInput, ProposedServiceUncheckedCreateWithoutServiceInput>
  }

  export type ProposedServiceCreateManyServiceInputEnvelope = {
    data: ProposedServiceCreateManyServiceInput | ProposedServiceCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type RecurringBookingCreateWithoutServiceInput = {
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutRecurringBookingInput
  }

  export type RecurringBookingUncheckedCreateWithoutServiceInput = {
    id?: number
    customerId: number
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RecurringBookingCreateOrConnectWithoutServiceInput = {
    where: RecurringBookingWhereUniqueInput
    create: XOR<RecurringBookingCreateWithoutServiceInput, RecurringBookingUncheckedCreateWithoutServiceInput>
  }

  export type RecurringBookingCreateManyServiceInputEnvelope = {
    data: RecurringBookingCreateManyServiceInput | RecurringBookingCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutServiceInput = {
    rating: number
    comment: string
    createdAt?: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutReviewInput
    Staff: StaffCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateWithoutServiceInput = {
    id?: number
    customerId: number
    staffId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutServiceInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutServiceInput, ReviewUncheckedCreateWithoutServiceInput>
  }

  export type ReviewCreateManyServiceInputEnvelope = {
    data: ReviewCreateManyServiceInput | ReviewCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutServiceInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutServiceInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutServiceInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutServiceInput, CategoryUncheckedCreateWithoutServiceInput>
  }

  export type UserCreateWithoutService_Service_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutService_Service_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutService_Service_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutService_Service_createdByIdToUserInput, UserUncheckedCreateWithoutService_Service_createdByIdToUserInput>
  }

  export type UserCreateWithoutService_Service_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutService_Service_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutService_Service_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutService_Service_deletedByIdToUserInput, UserUncheckedCreateWithoutService_Service_deletedByIdToUserInput>
  }

  export type ServiceProviderCreateWithoutServiceInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutServiceInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutServiceInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutServiceInput, ServiceProviderUncheckedCreateWithoutServiceInput>
  }

  export type UserCreateWithoutService_Service_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutService_Service_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutService_Service_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutService_Service_updatedByIdToUserInput, UserUncheckedCreateWithoutService_Service_updatedByIdToUserInput>
  }

  export type ServiceTranslationCreateWithoutServiceInput = {
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Language: LanguageCreateNestedOneWithoutServiceTranslationInput
  }

  export type ServiceTranslationUncheckedCreateWithoutServiceInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceTranslationCreateOrConnectWithoutServiceInput = {
    where: ServiceTranslationWhereUniqueInput
    create: XOR<ServiceTranslationCreateWithoutServiceInput, ServiceTranslationUncheckedCreateWithoutServiceInput>
  }

  export type ServiceTranslationCreateManyServiceInputEnvelope = {
    data: ServiceTranslationCreateManyServiceInput | ServiceTranslationCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type Service_ServiceItemsCreateWithoutServiceInput = {
    ServiceItem: ServiceItemCreateNestedOneWithoutService_ServiceItemsInput
  }

  export type Service_ServiceItemsUncheckedCreateWithoutServiceInput = {
    serviceItemId: number
  }

  export type Service_ServiceItemsCreateOrConnectWithoutServiceInput = {
    where: Service_ServiceItemsWhereUniqueInput
    create: XOR<Service_ServiceItemsCreateWithoutServiceInput, Service_ServiceItemsUncheckedCreateWithoutServiceInput>
  }

  export type Service_ServiceItemsCreateManyServiceInputEnvelope = {
    data: Service_ServiceItemsCreateManyServiceInput | Service_ServiceItemsCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type ProposedServiceUpsertWithWhereUniqueWithoutServiceInput = {
    where: ProposedServiceWhereUniqueInput
    update: XOR<ProposedServiceUpdateWithoutServiceInput, ProposedServiceUncheckedUpdateWithoutServiceInput>
    create: XOR<ProposedServiceCreateWithoutServiceInput, ProposedServiceUncheckedCreateWithoutServiceInput>
  }

  export type ProposedServiceUpdateWithWhereUniqueWithoutServiceInput = {
    where: ProposedServiceWhereUniqueInput
    data: XOR<ProposedServiceUpdateWithoutServiceInput, ProposedServiceUncheckedUpdateWithoutServiceInput>
  }

  export type ProposedServiceUpdateManyWithWhereWithoutServiceInput = {
    where: ProposedServiceScalarWhereInput
    data: XOR<ProposedServiceUpdateManyMutationInput, ProposedServiceUncheckedUpdateManyWithoutServiceInput>
  }

  export type RecurringBookingUpsertWithWhereUniqueWithoutServiceInput = {
    where: RecurringBookingWhereUniqueInput
    update: XOR<RecurringBookingUpdateWithoutServiceInput, RecurringBookingUncheckedUpdateWithoutServiceInput>
    create: XOR<RecurringBookingCreateWithoutServiceInput, RecurringBookingUncheckedCreateWithoutServiceInput>
  }

  export type RecurringBookingUpdateWithWhereUniqueWithoutServiceInput = {
    where: RecurringBookingWhereUniqueInput
    data: XOR<RecurringBookingUpdateWithoutServiceInput, RecurringBookingUncheckedUpdateWithoutServiceInput>
  }

  export type RecurringBookingUpdateManyWithWhereWithoutServiceInput = {
    where: RecurringBookingScalarWhereInput
    data: XOR<RecurringBookingUpdateManyMutationInput, RecurringBookingUncheckedUpdateManyWithoutServiceInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutServiceInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutServiceInput, ReviewUncheckedUpdateWithoutServiceInput>
    create: XOR<ReviewCreateWithoutServiceInput, ReviewUncheckedCreateWithoutServiceInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutServiceInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutServiceInput, ReviewUncheckedUpdateWithoutServiceInput>
  }

  export type ReviewUpdateManyWithWhereWithoutServiceInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutServiceInput>
  }

  export type CategoryUpsertWithoutServiceInput = {
    update: XOR<CategoryUpdateWithoutServiceInput, CategoryUncheckedUpdateWithoutServiceInput>
    create: XOR<CategoryCreateWithoutServiceInput, CategoryUncheckedCreateWithoutServiceInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutServiceInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutServiceInput, CategoryUncheckedUpdateWithoutServiceInput>
  }

  export type CategoryUpdateWithoutServiceInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type UserUpsertWithoutService_Service_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutService_Service_createdByIdToUserInput, UserUncheckedUpdateWithoutService_Service_createdByIdToUserInput>
    create: XOR<UserCreateWithoutService_Service_createdByIdToUserInput, UserUncheckedCreateWithoutService_Service_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutService_Service_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutService_Service_createdByIdToUserInput, UserUncheckedUpdateWithoutService_Service_createdByIdToUserInput>
  }

  export type UserUpdateWithoutService_Service_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutService_Service_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutService_Service_deletedByIdToUserInput = {
    update: XOR<UserUpdateWithoutService_Service_deletedByIdToUserInput, UserUncheckedUpdateWithoutService_Service_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutService_Service_deletedByIdToUserInput, UserUncheckedCreateWithoutService_Service_deletedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutService_Service_deletedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutService_Service_deletedByIdToUserInput, UserUncheckedUpdateWithoutService_Service_deletedByIdToUserInput>
  }

  export type UserUpdateWithoutService_Service_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutService_Service_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type ServiceProviderUpsertWithoutServiceInput = {
    update: XOR<ServiceProviderUpdateWithoutServiceInput, ServiceProviderUncheckedUpdateWithoutServiceInput>
    create: XOR<ServiceProviderCreateWithoutServiceInput, ServiceProviderUncheckedCreateWithoutServiceInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutServiceInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutServiceInput, ServiceProviderUncheckedUpdateWithoutServiceInput>
  }

  export type ServiceProviderUpdateWithoutServiceInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type UserUpsertWithoutService_Service_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutService_Service_updatedByIdToUserInput, UserUncheckedUpdateWithoutService_Service_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutService_Service_updatedByIdToUserInput, UserUncheckedCreateWithoutService_Service_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutService_Service_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutService_Service_updatedByIdToUserInput, UserUncheckedUpdateWithoutService_Service_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutService_Service_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutService_Service_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type ServiceTranslationUpsertWithWhereUniqueWithoutServiceInput = {
    where: ServiceTranslationWhereUniqueInput
    update: XOR<ServiceTranslationUpdateWithoutServiceInput, ServiceTranslationUncheckedUpdateWithoutServiceInput>
    create: XOR<ServiceTranslationCreateWithoutServiceInput, ServiceTranslationUncheckedCreateWithoutServiceInput>
  }

  export type ServiceTranslationUpdateWithWhereUniqueWithoutServiceInput = {
    where: ServiceTranslationWhereUniqueInput
    data: XOR<ServiceTranslationUpdateWithoutServiceInput, ServiceTranslationUncheckedUpdateWithoutServiceInput>
  }

  export type ServiceTranslationUpdateManyWithWhereWithoutServiceInput = {
    where: ServiceTranslationScalarWhereInput
    data: XOR<ServiceTranslationUpdateManyMutationInput, ServiceTranslationUncheckedUpdateManyWithoutServiceInput>
  }

  export type Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceInput = {
    where: Service_ServiceItemsWhereUniqueInput
    update: XOR<Service_ServiceItemsUpdateWithoutServiceInput, Service_ServiceItemsUncheckedUpdateWithoutServiceInput>
    create: XOR<Service_ServiceItemsCreateWithoutServiceInput, Service_ServiceItemsUncheckedCreateWithoutServiceInput>
  }

  export type Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceInput = {
    where: Service_ServiceItemsWhereUniqueInput
    data: XOR<Service_ServiceItemsUpdateWithoutServiceInput, Service_ServiceItemsUncheckedUpdateWithoutServiceInput>
  }

  export type Service_ServiceItemsUpdateManyWithWhereWithoutServiceInput = {
    where: Service_ServiceItemsScalarWhereInput
    data: XOR<Service_ServiceItemsUpdateManyMutationInput, Service_ServiceItemsUncheckedUpdateManyWithoutServiceInput>
  }

  export type Service_ServiceItemsScalarWhereInput = {
    AND?: Service_ServiceItemsScalarWhereInput | Service_ServiceItemsScalarWhereInput[]
    OR?: Service_ServiceItemsScalarWhereInput[]
    NOT?: Service_ServiceItemsScalarWhereInput | Service_ServiceItemsScalarWhereInput[]
    serviceId?: IntFilter<"Service_ServiceItems"> | number
    serviceItemId?: IntFilter<"Service_ServiceItems"> | number
  }

  export type BookingCreateWithoutServiceProviderInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutServiceProviderInput = {
    id?: number
    customerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutServiceProviderInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutServiceProviderInput, BookingUncheckedCreateWithoutServiceProviderInput>
  }

  export type BookingCreateManyServiceProviderInputEnvelope = {
    data: BookingCreateManyServiceProviderInput | BookingCreateManyServiceProviderInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutServiceProviderInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutServiceProviderInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutServiceProviderInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutServiceProviderInput, ServiceUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceCreateManyServiceProviderInputEnvelope = {
    data: ServiceCreateManyServiceProviderInput | ServiceCreateManyServiceProviderInput[]
    skipDuplicates?: boolean
  }

  export type ServiceItemCreateWithoutServiceProviderInput = {
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceItemInput
  }

  export type ServiceItemUncheckedCreateWithoutServiceProviderInput = {
    id?: number
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceItemInput
  }

  export type ServiceItemCreateOrConnectWithoutServiceProviderInput = {
    where: ServiceItemWhereUniqueInput
    create: XOR<ServiceItemCreateWithoutServiceProviderInput, ServiceItemUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceItemCreateManyServiceProviderInputEnvelope = {
    data: ServiceItemCreateManyServiceProviderInput | ServiceItemCreateManyServiceProviderInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
  }

  export type UserCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
  }

  export type ServiceProviderTranslationCreateWithoutServiceProviderInput = {
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Language: LanguageCreateNestedOneWithoutServiceProviderTranslationInput
  }

  export type ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput = {
    id?: number
    languageId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceProviderTranslationCreateOrConnectWithoutServiceProviderInput = {
    where: ServiceProviderTranslationWhereUniqueInput
    create: XOR<ServiceProviderTranslationCreateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceProviderTranslationCreateManyServiceProviderInputEnvelope = {
    data: ServiceProviderTranslationCreateManyServiceProviderInput | ServiceProviderTranslationCreateManyServiceProviderInput[]
    skipDuplicates?: boolean
  }

  export type ServiceRequestCreateWithoutServiceProviderInput = {
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    Booking?: BookingCreateNestedOneWithoutServiceRequestInput
    Category: CategoryCreateNestedOneWithoutServiceRequestInput
    CustomerProfile: CustomerProfileCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestUncheckedCreateWithoutServiceProviderInput = {
    id?: number
    customerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
    Booking?: BookingUncheckedCreateNestedOneWithoutServiceRequestInput
  }

  export type ServiceRequestCreateOrConnectWithoutServiceProviderInput = {
    where: ServiceRequestWhereUniqueInput
    create: XOR<ServiceRequestCreateWithoutServiceProviderInput, ServiceRequestUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceRequestCreateManyServiceProviderInputEnvelope = {
    data: ServiceRequestCreateManyServiceProviderInput | ServiceRequestCreateManyServiceProviderInput[]
    skipDuplicates?: boolean
  }

  export type StaffCreateWithoutServiceProviderInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutServiceProviderInput = {
    id?: number
    userId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutServiceProviderInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutServiceProviderInput, StaffUncheckedCreateWithoutServiceProviderInput>
  }

  export type StaffCreateManyServiceProviderInputEnvelope = {
    data: StaffCreateManyServiceProviderInput | StaffCreateManyServiceProviderInput[]
    skipDuplicates?: boolean
  }

  export type BookingUpsertWithWhereUniqueWithoutServiceProviderInput = {
    where: BookingWhereUniqueInput
    update: XOR<BookingUpdateWithoutServiceProviderInput, BookingUncheckedUpdateWithoutServiceProviderInput>
    create: XOR<BookingCreateWithoutServiceProviderInput, BookingUncheckedCreateWithoutServiceProviderInput>
  }

  export type BookingUpdateWithWhereUniqueWithoutServiceProviderInput = {
    where: BookingWhereUniqueInput
    data: XOR<BookingUpdateWithoutServiceProviderInput, BookingUncheckedUpdateWithoutServiceProviderInput>
  }

  export type BookingUpdateManyWithWhereWithoutServiceProviderInput = {
    where: BookingScalarWhereInput
    data: XOR<BookingUpdateManyMutationInput, BookingUncheckedUpdateManyWithoutServiceProviderInput>
  }

  export type ServiceUpsertWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutServiceProviderInput, ServiceUncheckedUpdateWithoutServiceProviderInput>
    create: XOR<ServiceCreateWithoutServiceProviderInput, ServiceUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutServiceProviderInput, ServiceUncheckedUpdateWithoutServiceProviderInput>
  }

  export type ServiceUpdateManyWithWhereWithoutServiceProviderInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutServiceProviderInput>
  }

  export type ServiceItemUpsertWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceItemWhereUniqueInput
    update: XOR<ServiceItemUpdateWithoutServiceProviderInput, ServiceItemUncheckedUpdateWithoutServiceProviderInput>
    create: XOR<ServiceItemCreateWithoutServiceProviderInput, ServiceItemUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceItemUpdateWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceItemWhereUniqueInput
    data: XOR<ServiceItemUpdateWithoutServiceProviderInput, ServiceItemUncheckedUpdateWithoutServiceProviderInput>
  }

  export type ServiceItemUpdateManyWithWhereWithoutServiceProviderInput = {
    where: ServiceItemScalarWhereInput
    data: XOR<ServiceItemUpdateManyMutationInput, ServiceItemUncheckedUpdateManyWithoutServiceProviderInput>
  }

  export type ServiceItemScalarWhereInput = {
    AND?: ServiceItemScalarWhereInput | ServiceItemScalarWhereInput[]
    OR?: ServiceItemScalarWhereInput[]
    NOT?: ServiceItemScalarWhereInput | ServiceItemScalarWhereInput[]
    id?: IntFilter<"ServiceItem"> | number
    name?: StringFilter<"ServiceItem"> | string
    unitPrice?: FloatFilter<"ServiceItem"> | number
    warrantyPeriod?: IntNullableFilter<"ServiceItem"> | number | null
    createdAt?: DateTimeFilter<"ServiceItem"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ServiceItem"> | Date | string | null
    updatedAt?: DateTimeFilter<"ServiceItem"> | Date | string
    brand?: StringNullableFilter<"ServiceItem"> | string | null
    description?: StringNullableFilter<"ServiceItem"> | string | null
    isActive?: BoolFilter<"ServiceItem"> | boolean
    model?: StringNullableFilter<"ServiceItem"> | string | null
    stockQuantity?: IntFilter<"ServiceItem"> | number
    unit?: EnumUnitFilter<"ServiceItem"> | $Enums.Unit
    providerId?: IntFilter<"ServiceItem"> | number
  }

  export type UserUpsertWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    update: XOR<UserUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
    create: XOR<UserCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput, UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput>
  }

  export type UserUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_userIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    update: XOR<UserUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
    create: XOR<UserCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUncheckedCreateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput, UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput>
  }

  export type UserUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type ServiceProviderTranslationUpsertWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceProviderTranslationWhereUniqueInput
    update: XOR<ServiceProviderTranslationUpdateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedUpdateWithoutServiceProviderInput>
    create: XOR<ServiceProviderTranslationCreateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceProviderTranslationUpdateWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceProviderTranslationWhereUniqueInput
    data: XOR<ServiceProviderTranslationUpdateWithoutServiceProviderInput, ServiceProviderTranslationUncheckedUpdateWithoutServiceProviderInput>
  }

  export type ServiceProviderTranslationUpdateManyWithWhereWithoutServiceProviderInput = {
    where: ServiceProviderTranslationScalarWhereInput
    data: XOR<ServiceProviderTranslationUpdateManyMutationInput, ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderInput>
  }

  export type ServiceRequestUpsertWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceRequestWhereUniqueInput
    update: XOR<ServiceRequestUpdateWithoutServiceProviderInput, ServiceRequestUncheckedUpdateWithoutServiceProviderInput>
    create: XOR<ServiceRequestCreateWithoutServiceProviderInput, ServiceRequestUncheckedCreateWithoutServiceProviderInput>
  }

  export type ServiceRequestUpdateWithWhereUniqueWithoutServiceProviderInput = {
    where: ServiceRequestWhereUniqueInput
    data: XOR<ServiceRequestUpdateWithoutServiceProviderInput, ServiceRequestUncheckedUpdateWithoutServiceProviderInput>
  }

  export type ServiceRequestUpdateManyWithWhereWithoutServiceProviderInput = {
    where: ServiceRequestScalarWhereInput
    data: XOR<ServiceRequestUpdateManyMutationInput, ServiceRequestUncheckedUpdateManyWithoutServiceProviderInput>
  }

  export type StaffUpsertWithWhereUniqueWithoutServiceProviderInput = {
    where: StaffWhereUniqueInput
    update: XOR<StaffUpdateWithoutServiceProviderInput, StaffUncheckedUpdateWithoutServiceProviderInput>
    create: XOR<StaffCreateWithoutServiceProviderInput, StaffUncheckedCreateWithoutServiceProviderInput>
  }

  export type StaffUpdateWithWhereUniqueWithoutServiceProviderInput = {
    where: StaffWhereUniqueInput
    data: XOR<StaffUpdateWithoutServiceProviderInput, StaffUncheckedUpdateWithoutServiceProviderInput>
  }

  export type StaffUpdateManyWithWhereWithoutServiceProviderInput = {
    where: StaffScalarWhereInput
    data: XOR<StaffUpdateManyMutationInput, StaffUncheckedUpdateManyWithoutServiceProviderInput>
  }

  export type StaffScalarWhereInput = {
    AND?: StaffScalarWhereInput | StaffScalarWhereInput[]
    OR?: StaffScalarWhereInput[]
    NOT?: StaffScalarWhereInput | StaffScalarWhereInput[]
    id?: IntFilter<"Staff"> | number
    userId?: IntFilter<"Staff"> | number
    providerId?: IntFilter<"Staff"> | number
    createdAt?: DateTimeFilter<"Staff"> | Date | string
    updatedAt?: DateTimeFilter<"Staff"> | Date | string
    isActive?: BoolFilter<"Staff"> | boolean
  }

  export type LanguageCreateWithoutServiceProviderTranslationInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    User_Language_createdByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput
    User_Language_deletedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput
    User_Language_updatedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutServiceProviderTranslationInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutServiceProviderTranslationInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutServiceProviderTranslationInput, LanguageUncheckedCreateWithoutServiceProviderTranslationInput>
  }

  export type ServiceProviderCreateWithoutServiceProviderTranslationInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutServiceProviderTranslationInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutServiceProviderTranslationInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutServiceProviderTranslationInput, ServiceProviderUncheckedCreateWithoutServiceProviderTranslationInput>
  }

  export type LanguageUpsertWithoutServiceProviderTranslationInput = {
    update: XOR<LanguageUpdateWithoutServiceProviderTranslationInput, LanguageUncheckedUpdateWithoutServiceProviderTranslationInput>
    create: XOR<LanguageCreateWithoutServiceProviderTranslationInput, LanguageUncheckedCreateWithoutServiceProviderTranslationInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutServiceProviderTranslationInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutServiceProviderTranslationInput, LanguageUncheckedUpdateWithoutServiceProviderTranslationInput>
  }

  export type LanguageUpdateWithoutServiceProviderTranslationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    User_Language_createdByIdToUser?: UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput
    User_Language_deletedByIdToUser?: UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput
    User_Language_updatedByIdToUser?: UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutServiceProviderTranslationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type ServiceProviderUpsertWithoutServiceProviderTranslationInput = {
    update: XOR<ServiceProviderUpdateWithoutServiceProviderTranslationInput, ServiceProviderUncheckedUpdateWithoutServiceProviderTranslationInput>
    create: XOR<ServiceProviderCreateWithoutServiceProviderTranslationInput, ServiceProviderUncheckedCreateWithoutServiceProviderTranslationInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutServiceProviderTranslationInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutServiceProviderTranslationInput, ServiceProviderUncheckedUpdateWithoutServiceProviderTranslationInput>
  }

  export type ServiceProviderUpdateWithoutServiceProviderTranslationInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutServiceProviderTranslationInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type LanguageCreateWithoutServiceTranslationInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    User_Language_createdByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput
    User_Language_deletedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput
    User_Language_updatedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutServiceTranslationInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutServiceTranslationInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutServiceTranslationInput, LanguageUncheckedCreateWithoutServiceTranslationInput>
  }

  export type ServiceCreateWithoutServiceTranslationInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutServiceTranslationInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutServiceTranslationInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutServiceTranslationInput, ServiceUncheckedCreateWithoutServiceTranslationInput>
  }

  export type LanguageUpsertWithoutServiceTranslationInput = {
    update: XOR<LanguageUpdateWithoutServiceTranslationInput, LanguageUncheckedUpdateWithoutServiceTranslationInput>
    create: XOR<LanguageCreateWithoutServiceTranslationInput, LanguageUncheckedCreateWithoutServiceTranslationInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutServiceTranslationInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutServiceTranslationInput, LanguageUncheckedUpdateWithoutServiceTranslationInput>
  }

  export type LanguageUpdateWithoutServiceTranslationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    User_Language_createdByIdToUser?: UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput
    User_Language_deletedByIdToUser?: UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput
    User_Language_updatedByIdToUser?: UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutServiceTranslationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type ServiceUpsertWithoutServiceTranslationInput = {
    update: XOR<ServiceUpdateWithoutServiceTranslationInput, ServiceUncheckedUpdateWithoutServiceTranslationInput>
    create: XOR<ServiceCreateWithoutServiceTranslationInput, ServiceUncheckedCreateWithoutServiceTranslationInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutServiceTranslationInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutServiceTranslationInput, ServiceUncheckedUpdateWithoutServiceTranslationInput>
  }

  export type ServiceUpdateWithoutServiceTranslationInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutServiceTranslationInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type BookingCreateWithoutStaff_Booking_staffIdToStaffInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutStaff_Booking_staffIdToStaffInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput>
  }

  export type InspectionReportCreateWithoutStaffInput = {
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
    Booking: BookingCreateNestedOneWithoutInspectionReportInput
  }

  export type InspectionReportUncheckedCreateWithoutStaffInput = {
    id?: number
    bookingId: number
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
  }

  export type InspectionReportCreateOrConnectWithoutStaffInput = {
    where: InspectionReportWhereUniqueInput
    create: XOR<InspectionReportCreateWithoutStaffInput, InspectionReportUncheckedCreateWithoutStaffInput>
  }

  export type InspectionReportCreateManyStaffInputEnvelope = {
    data: InspectionReportCreateManyStaffInput | InspectionReportCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutStaffInput = {
    rating: number
    comment: string
    createdAt?: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutReviewInput
    Service: ServiceCreateNestedOneWithoutReviewInput
  }

  export type ReviewUncheckedCreateWithoutStaffInput = {
    id?: number
    customerId: number
    serviceId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutStaffInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutStaffInput, ReviewUncheckedCreateWithoutStaffInput>
  }

  export type ReviewCreateManyStaffInputEnvelope = {
    data: ReviewCreateManyStaffInput | ReviewCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type ServiceProviderCreateWithoutStaffInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutStaffInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutStaffInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutStaffInput, ServiceProviderUncheckedCreateWithoutStaffInput>
  }

  export type UserCreateWithoutStaffInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutStaffInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutStaffInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStaffInput, UserUncheckedCreateWithoutStaffInput>
  }

  export type StaffCategoryCreateWithoutStaffInput = {
    Category: CategoryCreateNestedOneWithoutStaffCategoryInput
  }

  export type StaffCategoryUncheckedCreateWithoutStaffInput = {
    categoryId: number
  }

  export type StaffCategoryCreateOrConnectWithoutStaffInput = {
    where: StaffCategoryWhereUniqueInput
    create: XOR<StaffCategoryCreateWithoutStaffInput, StaffCategoryUncheckedCreateWithoutStaffInput>
  }

  export type StaffCategoryCreateManyStaffInputEnvelope = {
    data: StaffCategoryCreateManyStaffInput | StaffCategoryCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type WorkLogCreateWithoutStaffInput = {
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking: BookingCreateNestedOneWithoutWorkLogInput
  }

  export type WorkLogUncheckedCreateWithoutStaffInput = {
    id?: number
    bookingId: number
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type WorkLogCreateOrConnectWithoutStaffInput = {
    where: WorkLogWhereUniqueInput
    create: XOR<WorkLogCreateWithoutStaffInput, WorkLogUncheckedCreateWithoutStaffInput>
  }

  export type WorkLogCreateManyStaffInputEnvelope = {
    data: WorkLogCreateManyStaffInput | WorkLogCreateManyStaffInput[]
    skipDuplicates?: boolean
  }

  export type BookingUpsertWithoutStaff_Booking_staffIdToStaffInput = {
    update: XOR<BookingUpdateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedUpdateWithoutStaff_Booking_staffIdToStaffInput>
    create: XOR<BookingCreateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedCreateWithoutStaff_Booking_staffIdToStaffInput>
    where?: BookingWhereInput
  }

  export type BookingUpdateToOneWithWhereWithoutStaff_Booking_staffIdToStaffInput = {
    where?: BookingWhereInput
    data: XOR<BookingUpdateWithoutStaff_Booking_staffIdToStaffInput, BookingUncheckedUpdateWithoutStaff_Booking_staffIdToStaffInput>
  }

  export type BookingUpdateWithoutStaff_Booking_staffIdToStaffInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutStaff_Booking_staffIdToStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type InspectionReportUpsertWithWhereUniqueWithoutStaffInput = {
    where: InspectionReportWhereUniqueInput
    update: XOR<InspectionReportUpdateWithoutStaffInput, InspectionReportUncheckedUpdateWithoutStaffInput>
    create: XOR<InspectionReportCreateWithoutStaffInput, InspectionReportUncheckedCreateWithoutStaffInput>
  }

  export type InspectionReportUpdateWithWhereUniqueWithoutStaffInput = {
    where: InspectionReportWhereUniqueInput
    data: XOR<InspectionReportUpdateWithoutStaffInput, InspectionReportUncheckedUpdateWithoutStaffInput>
  }

  export type InspectionReportUpdateManyWithWhereWithoutStaffInput = {
    where: InspectionReportScalarWhereInput
    data: XOR<InspectionReportUpdateManyMutationInput, InspectionReportUncheckedUpdateManyWithoutStaffInput>
  }

  export type InspectionReportScalarWhereInput = {
    AND?: InspectionReportScalarWhereInput | InspectionReportScalarWhereInput[]
    OR?: InspectionReportScalarWhereInput[]
    NOT?: InspectionReportScalarWhereInput | InspectionReportScalarWhereInput[]
    id?: IntFilter<"InspectionReport"> | number
    bookingId?: IntFilter<"InspectionReport"> | number
    staffId?: IntFilter<"InspectionReport"> | number
    estimatedTime?: IntNullableFilter<"InspectionReport"> | number | null
    note?: StringNullableFilter<"InspectionReport"> | string | null
    images?: StringNullableListFilter<"InspectionReport">
    createdAt?: DateTimeFilter<"InspectionReport"> | Date | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutStaffInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutStaffInput, ReviewUncheckedUpdateWithoutStaffInput>
    create: XOR<ReviewCreateWithoutStaffInput, ReviewUncheckedCreateWithoutStaffInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutStaffInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutStaffInput, ReviewUncheckedUpdateWithoutStaffInput>
  }

  export type ReviewUpdateManyWithWhereWithoutStaffInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutStaffInput>
  }

  export type ServiceProviderUpsertWithoutStaffInput = {
    update: XOR<ServiceProviderUpdateWithoutStaffInput, ServiceProviderUncheckedUpdateWithoutStaffInput>
    create: XOR<ServiceProviderCreateWithoutStaffInput, ServiceProviderUncheckedCreateWithoutStaffInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutStaffInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutStaffInput, ServiceProviderUncheckedUpdateWithoutStaffInput>
  }

  export type ServiceProviderUpdateWithoutStaffInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type UserUpsertWithoutStaffInput = {
    update: XOR<UserUpdateWithoutStaffInput, UserUncheckedUpdateWithoutStaffInput>
    create: XOR<UserCreateWithoutStaffInput, UserUncheckedCreateWithoutStaffInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStaffInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStaffInput, UserUncheckedUpdateWithoutStaffInput>
  }

  export type UserUpdateWithoutStaffInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type StaffCategoryUpsertWithWhereUniqueWithoutStaffInput = {
    where: StaffCategoryWhereUniqueInput
    update: XOR<StaffCategoryUpdateWithoutStaffInput, StaffCategoryUncheckedUpdateWithoutStaffInput>
    create: XOR<StaffCategoryCreateWithoutStaffInput, StaffCategoryUncheckedCreateWithoutStaffInput>
  }

  export type StaffCategoryUpdateWithWhereUniqueWithoutStaffInput = {
    where: StaffCategoryWhereUniqueInput
    data: XOR<StaffCategoryUpdateWithoutStaffInput, StaffCategoryUncheckedUpdateWithoutStaffInput>
  }

  export type StaffCategoryUpdateManyWithWhereWithoutStaffInput = {
    where: StaffCategoryScalarWhereInput
    data: XOR<StaffCategoryUpdateManyMutationInput, StaffCategoryUncheckedUpdateManyWithoutStaffInput>
  }

  export type WorkLogUpsertWithWhereUniqueWithoutStaffInput = {
    where: WorkLogWhereUniqueInput
    update: XOR<WorkLogUpdateWithoutStaffInput, WorkLogUncheckedUpdateWithoutStaffInput>
    create: XOR<WorkLogCreateWithoutStaffInput, WorkLogUncheckedCreateWithoutStaffInput>
  }

  export type WorkLogUpdateWithWhereUniqueWithoutStaffInput = {
    where: WorkLogWhereUniqueInput
    data: XOR<WorkLogUpdateWithoutStaffInput, WorkLogUncheckedUpdateWithoutStaffInput>
  }

  export type WorkLogUpdateManyWithWhereWithoutStaffInput = {
    where: WorkLogScalarWhereInput
    data: XOR<WorkLogUpdateManyMutationInput, WorkLogUncheckedUpdateManyWithoutStaffInput>
  }

  export type CategoryCreateWithoutStaffCategoryInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutStaffCategoryInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutStaffCategoryInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutStaffCategoryInput, CategoryUncheckedCreateWithoutStaffCategoryInput>
  }

  export type StaffCreateWithoutStaffCategoryInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutStaffCategoryInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutStaffCategoryInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutStaffCategoryInput, StaffUncheckedCreateWithoutStaffCategoryInput>
  }

  export type CategoryUpsertWithoutStaffCategoryInput = {
    update: XOR<CategoryUpdateWithoutStaffCategoryInput, CategoryUncheckedUpdateWithoutStaffCategoryInput>
    create: XOR<CategoryCreateWithoutStaffCategoryInput, CategoryUncheckedCreateWithoutStaffCategoryInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutStaffCategoryInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutStaffCategoryInput, CategoryUncheckedUpdateWithoutStaffCategoryInput>
  }

  export type CategoryUpdateWithoutStaffCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutStaffCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type StaffUpsertWithoutStaffCategoryInput = {
    update: XOR<StaffUpdateWithoutStaffCategoryInput, StaffUncheckedUpdateWithoutStaffCategoryInput>
    create: XOR<StaffCreateWithoutStaffCategoryInput, StaffUncheckedCreateWithoutStaffCategoryInput>
    where?: StaffWhereInput
  }

  export type StaffUpdateToOneWithWhereWithoutStaffCategoryInput = {
    where?: StaffWhereInput
    data: XOR<StaffUpdateWithoutStaffCategoryInput, StaffUncheckedUpdateWithoutStaffCategoryInput>
  }

  export type StaffUpdateWithoutStaffCategoryInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutStaffCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type BookingCreateWithoutTransactionInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutTransactionInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutTransactionInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutTransactionInput, BookingUncheckedCreateWithoutTransactionInput>
  }

  export type BookingUpsertWithoutTransactionInput = {
    update: XOR<BookingUpdateWithoutTransactionInput, BookingUncheckedUpdateWithoutTransactionInput>
    create: XOR<BookingCreateWithoutTransactionInput, BookingUncheckedCreateWithoutTransactionInput>
    where?: BookingWhereInput
  }

  export type BookingUpdateToOneWithWhereWithoutTransactionInput = {
    where?: BookingWhereInput
    data: XOR<BookingUpdateWithoutTransactionInput, BookingUncheckedUpdateWithoutTransactionInput>
  }

  export type BookingUpdateWithoutTransactionInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutTransactionInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type CategoryCreateWithoutUser_Category_createdByIdToUserInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutUser_Category_createdByIdToUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput>
  }

  export type CategoryCreateManyUser_Category_createdByIdToUserInputEnvelope = {
    data: CategoryCreateManyUser_Category_createdByIdToUserInput | CategoryCreateManyUser_Category_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutUser_Category_deletedByIdToUserInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutUser_Category_deletedByIdToUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput>
  }

  export type CategoryCreateManyUser_Category_deletedByIdToUserInputEnvelope = {
    data: CategoryCreateManyUser_Category_deletedByIdToUserInput | CategoryCreateManyUser_Category_deletedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutUser_Category_updatedByIdToUserInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutUser_Category_updatedByIdToUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput>
  }

  export type CategoryCreateManyUser_Category_updatedByIdToUserInputEnvelope = {
    data: CategoryCreateManyUser_Category_updatedByIdToUserInput | CategoryCreateManyUser_Category_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type CustomerProfileCreateWithoutUserInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutUserInput = {
    id?: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutUserInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutUserInput, CustomerProfileUncheckedCreateWithoutUserInput>
  }

  export type DeviceCreateWithoutUserInput = {
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
    RefreshToken?: RefreshTokenCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUncheckedCreateWithoutUserInput = {
    id?: number
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type DeviceCreateOrConnectWithoutUserInput = {
    where: DeviceWhereUniqueInput
    create: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput>
  }

  export type DeviceCreateManyUserInputEnvelope = {
    data: DeviceCreateManyUserInput | DeviceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type LanguageCreateWithoutUser_Language_createdByIdToUserInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    User_Language_deletedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput
    User_Language_updatedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput = {
    id: string
    name: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutUser_Language_createdByIdToUserInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput>
  }

  export type LanguageCreateManyUser_Language_createdByIdToUserInputEnvelope = {
    data: LanguageCreateManyUser_Language_createdByIdToUserInput | LanguageCreateManyUser_Language_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type LanguageCreateWithoutUser_Language_deletedByIdToUserInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    User_Language_createdByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput
    User_Language_updatedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_updatedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutUser_Language_deletedByIdToUserInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput>
  }

  export type LanguageCreateManyUser_Language_deletedByIdToUserInputEnvelope = {
    data: LanguageCreateManyUser_Language_deletedByIdToUserInput | LanguageCreateManyUser_Language_deletedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type LanguageCreateWithoutUser_Language_updatedByIdToUserInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    User_Language_createdByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_createdByIdToUserInput
    User_Language_deletedByIdToUser?: UserCreateNestedOneWithoutLanguage_Language_deletedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput = {
    id: string
    name: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutLanguageInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutUser_Language_updatedByIdToUserInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput>
  }

  export type LanguageCreateManyUser_Language_updatedByIdToUserInputEnvelope = {
    data: LanguageCreateManyUser_Language_updatedByIdToUserInput | LanguageCreateManyUser_Language_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    content: string
    isRead?: boolean
    createdAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    isRead?: boolean
    createdAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PermissionCreateWithoutUser_Permission_createdByIdToUserInput = {
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Permission_deletedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_deletedByIdToUserInput
    User_Permission_updatedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_updatedByIdToUserInput
    Role?: RoleCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Role?: RoleUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutUser_Permission_createdByIdToUserInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput>
  }

  export type PermissionCreateManyUser_Permission_createdByIdToUserInputEnvelope = {
    data: PermissionCreateManyUser_Permission_createdByIdToUserInput | PermissionCreateManyUser_Permission_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type PermissionCreateWithoutUser_Permission_deletedByIdToUserInput = {
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Permission_createdByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_createdByIdToUserInput
    User_Permission_updatedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_updatedByIdToUserInput
    Role?: RoleCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Role?: RoleUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutUser_Permission_deletedByIdToUserInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput>
  }

  export type PermissionCreateManyUser_Permission_deletedByIdToUserInputEnvelope = {
    data: PermissionCreateManyUser_Permission_deletedByIdToUserInput | PermissionCreateManyUser_Permission_deletedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type PermissionCreateWithoutUser_Permission_updatedByIdToUserInput = {
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Permission_createdByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_createdByIdToUserInput
    User_Permission_deletedByIdToUser?: UserCreateNestedOneWithoutPermission_Permission_deletedByIdToUserInput
    Role?: RoleCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Role?: RoleUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutUser_Permission_updatedByIdToUserInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput>
  }

  export type PermissionCreateManyUser_Permission_updatedByIdToUserInputEnvelope = {
    data: PermissionCreateManyUser_Permission_updatedByIdToUserInput | PermissionCreateManyUser_Permission_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    Device: DeviceCreateNestedOneWithoutRefreshTokenInput
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: number
    token: string
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUser_Role_createdByIdToUserInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Role_deletedByIdToUser?: UserCreateNestedOneWithoutRole_Role_deletedByIdToUserInput
    User_Role_updatedByIdToUser?: UserCreateNestedOneWithoutRole_Role_updatedByIdToUserInput
    Permission?: PermissionCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput = {
    id?: number
    name: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Permission?: PermissionUncheckedCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserUncheckedCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleCreateOrConnectWithoutUser_Role_createdByIdToUserInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput>
  }

  export type RoleCreateManyUser_Role_createdByIdToUserInputEnvelope = {
    data: RoleCreateManyUser_Role_createdByIdToUserInput | RoleCreateManyUser_Role_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUser_Role_deletedByIdToUserInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Role_createdByIdToUser?: UserCreateNestedOneWithoutRole_Role_createdByIdToUserInput
    User_Role_updatedByIdToUser?: UserCreateNestedOneWithoutRole_Role_updatedByIdToUserInput
    Permission?: PermissionCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Permission?: PermissionUncheckedCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserUncheckedCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleCreateOrConnectWithoutUser_Role_deletedByIdToUserInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput>
  }

  export type RoleCreateManyUser_Role_deletedByIdToUserInputEnvelope = {
    data: RoleCreateManyUser_Role_deletedByIdToUserInput | RoleCreateManyUser_Role_deletedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUser_Role_updatedByIdToUserInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Role_createdByIdToUser?: UserCreateNestedOneWithoutRole_Role_createdByIdToUserInput
    User_Role_deletedByIdToUser?: UserCreateNestedOneWithoutRole_Role_deletedByIdToUserInput
    Permission?: PermissionCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput = {
    id?: number
    name: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Permission?: PermissionUncheckedCreateNestedManyWithoutRoleInput
    User_UserRoles?: UserUncheckedCreateNestedManyWithoutRole_UserRolesInput
  }

  export type RoleCreateOrConnectWithoutUser_Role_updatedByIdToUserInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput>
  }

  export type RoleCreateManyUser_Role_updatedByIdToUserInputEnvelope = {
    data: RoleCreateManyUser_Role_updatedByIdToUserInput | RoleCreateManyUser_Role_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutUser_Service_createdByIdToUserInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutUser_Service_createdByIdToUserInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput>
  }

  export type ServiceCreateManyUser_Service_createdByIdToUserInputEnvelope = {
    data: ServiceCreateManyUser_Service_createdByIdToUserInput | ServiceCreateManyUser_Service_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutUser_Service_deletedByIdToUserInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutUser_Service_deletedByIdToUserInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput>
  }

  export type ServiceCreateManyUser_Service_deletedByIdToUserInputEnvelope = {
    data: ServiceCreateManyUser_Service_deletedByIdToUserInput | ServiceCreateManyUser_Service_deletedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ServiceCreateWithoutUser_Service_updatedByIdToUserInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutUser_Service_updatedByIdToUserInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput>
  }

  export type ServiceCreateManyUser_Service_updatedByIdToUserInputEnvelope = {
    data: ServiceCreateManyUser_Service_updatedByIdToUserInput | ServiceCreateManyUser_Service_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_userIdToUserInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput>
  }

  export type ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput>
  }

  export type ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInputEnvelope = {
    data: ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInput | ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type StaffCreateWithoutUserInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutUserInput = {
    id?: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutUserInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutUserInput, StaffUncheckedCreateWithoutUserInput>
  }

  export type UserCreateWithoutOther_User_User_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutOther_User_User_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutOther_User_User_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOther_User_User_createdByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_createdByIdToUserInput>
  }

  export type UserCreateWithoutUser_User_createdByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutUser_User_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutUser_User_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUser_User_createdByIdToUserInput, UserUncheckedCreateWithoutUser_User_createdByIdToUserInput>
  }

  export type UserCreateManyUser_User_createdByIdToUserInputEnvelope = {
    data: UserCreateManyUser_User_createdByIdToUserInput | UserCreateManyUser_User_createdByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutOther_User_User_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutOther_User_User_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutOther_User_User_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOther_User_User_deletedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_deletedByIdToUserInput>
  }

  export type UserCreateWithoutUser_User_deletedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutUser_User_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUser_User_deletedByIdToUserInput, UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput>
  }

  export type UserCreateManyUser_User_deletedByIdToUserInputEnvelope = {
    data: UserCreateManyUser_User_deletedByIdToUserInput | UserCreateManyUser_User_deletedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutOther_User_User_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    User_User_updatedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutOther_User_User_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutOther_User_User_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOther_User_User_updatedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_updatedByIdToUserInput>
  }

  export type UserCreateWithoutUser_User_updatedByIdToUserInput = {
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileCreateNestedOneWithoutUserInput
    Device?: DeviceCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffCreateNestedOneWithoutUserInput
    User_User_createdByIdToUser?: UserCreateNestedOneWithoutOther_User_User_createdByIdToUserInput
    other_User_User_createdByIdToUser?: UserCreateNestedManyWithoutUser_User_createdByIdToUserInput
    User_User_deletedByIdToUser?: UserCreateNestedOneWithoutOther_User_User_deletedByIdToUserInput
    other_User_User_deletedByIdToUser?: UserCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_createdByIdToUserInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_deletedByIdToUserInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedCreateNestedManyWithoutUser_Category_updatedByIdToUserInput
    CustomerProfile?: CustomerProfileUncheckedCreateNestedOneWithoutUserInput
    Device?: DeviceUncheckedCreateNestedManyWithoutUserInput
    Language_Language_createdByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_createdByIdToUserInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_deletedByIdToUserInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedCreateNestedManyWithoutUser_Language_updatedByIdToUserInput
    Notification?: NotificationUncheckedCreateNestedManyWithoutUserInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_createdByIdToUserInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_deletedByIdToUserInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedCreateNestedManyWithoutUser_Permission_updatedByIdToUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    Role_Role_createdByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_createdByIdToUserInput
    Role_Role_deletedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_deletedByIdToUserInput
    Role_Role_updatedByIdToUser?: RoleUncheckedCreateNestedManyWithoutUser_Role_updatedByIdToUserInput
    Service_Service_createdByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_createdByIdToUserInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_deletedByIdToUserInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedCreateNestedManyWithoutUser_Service_updatedByIdToUserInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedCreateNestedOneWithoutUser_ServiceProvider_userIdToUserInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedCreateNestedManyWithoutUser_ServiceProvider_verifiedByIdToUserInput
    Staff?: StaffUncheckedCreateNestedOneWithoutUserInput
    other_User_User_createdByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_createdByIdToUserInput
    other_User_User_deletedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_deletedByIdToUserInput
    other_User_User_updatedByIdToUser?: UserUncheckedCreateNestedManyWithoutUser_User_updatedByIdToUserInput
    Role_UserRoles?: RoleUncheckedCreateNestedManyWithoutUser_UserRolesInput
  }

  export type UserCreateOrConnectWithoutUser_User_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUser_User_updatedByIdToUserInput, UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput>
  }

  export type UserCreateManyUser_User_updatedByIdToUserInputEnvelope = {
    data: UserCreateManyUser_User_updatedByIdToUserInput | UserCreateManyUser_User_updatedByIdToUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUser_UserRolesInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Role_createdByIdToUser?: UserCreateNestedOneWithoutRole_Role_createdByIdToUserInput
    User_Role_deletedByIdToUser?: UserCreateNestedOneWithoutRole_Role_deletedByIdToUserInput
    User_Role_updatedByIdToUser?: UserCreateNestedOneWithoutRole_Role_updatedByIdToUserInput
    Permission?: PermissionCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutUser_UserRolesInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Permission?: PermissionUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutUser_UserRolesInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUser_UserRolesInput, RoleUncheckedCreateWithoutUser_UserRolesInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutUser_Category_createdByIdToUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedUpdateWithoutUser_Category_createdByIdToUserInput>
    create: XOR<CategoryCreateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_createdByIdToUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutUser_Category_createdByIdToUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutUser_Category_createdByIdToUserInput, CategoryUncheckedUpdateWithoutUser_Category_createdByIdToUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutUser_Category_createdByIdToUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedUpdateWithoutUser_Category_deletedByIdToUserInput>
    create: XOR<CategoryCreateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_deletedByIdToUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutUser_Category_deletedByIdToUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutUser_Category_deletedByIdToUserInput, CategoryUncheckedUpdateWithoutUser_Category_deletedByIdToUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutUser_Category_deletedByIdToUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedUpdateWithoutUser_Category_updatedByIdToUserInput>
    create: XOR<CategoryCreateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedCreateWithoutUser_Category_updatedByIdToUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutUser_Category_updatedByIdToUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutUser_Category_updatedByIdToUserInput, CategoryUncheckedUpdateWithoutUser_Category_updatedByIdToUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutUser_Category_updatedByIdToUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserInput>
  }

  export type CustomerProfileUpsertWithoutUserInput = {
    update: XOR<CustomerProfileUpdateWithoutUserInput, CustomerProfileUncheckedUpdateWithoutUserInput>
    create: XOR<CustomerProfileCreateWithoutUserInput, CustomerProfileUncheckedCreateWithoutUserInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutUserInput, CustomerProfileUncheckedUpdateWithoutUserInput>
  }

  export type CustomerProfileUpdateWithoutUserInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type DeviceUpsertWithWhereUniqueWithoutUserInput = {
    where: DeviceWhereUniqueInput
    update: XOR<DeviceUpdateWithoutUserInput, DeviceUncheckedUpdateWithoutUserInput>
    create: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput>
  }

  export type DeviceUpdateWithWhereUniqueWithoutUserInput = {
    where: DeviceWhereUniqueInput
    data: XOR<DeviceUpdateWithoutUserInput, DeviceUncheckedUpdateWithoutUserInput>
  }

  export type DeviceUpdateManyWithWhereWithoutUserInput = {
    where: DeviceScalarWhereInput
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyWithoutUserInput>
  }

  export type DeviceScalarWhereInput = {
    AND?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
    OR?: DeviceScalarWhereInput[]
    NOT?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
    id?: IntFilter<"Device"> | number
    userId?: IntFilter<"Device"> | number
    userAgent?: StringFilter<"Device"> | string
    ip?: StringFilter<"Device"> | string
    lastActive?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    isActive?: BoolFilter<"Device"> | boolean
  }

  export type LanguageUpsertWithWhereUniqueWithoutUser_Language_createdByIdToUserInput = {
    where: LanguageWhereUniqueInput
    update: XOR<LanguageUpdateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedUpdateWithoutUser_Language_createdByIdToUserInput>
    create: XOR<LanguageCreateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_createdByIdToUserInput>
  }

  export type LanguageUpdateWithWhereUniqueWithoutUser_Language_createdByIdToUserInput = {
    where: LanguageWhereUniqueInput
    data: XOR<LanguageUpdateWithoutUser_Language_createdByIdToUserInput, LanguageUncheckedUpdateWithoutUser_Language_createdByIdToUserInput>
  }

  export type LanguageUpdateManyWithWhereWithoutUser_Language_createdByIdToUserInput = {
    where: LanguageScalarWhereInput
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserInput>
  }

  export type LanguageScalarWhereInput = {
    AND?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
    OR?: LanguageScalarWhereInput[]
    NOT?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
    id?: StringFilter<"Language"> | string
    name?: StringFilter<"Language"> | string
    createdById?: IntNullableFilter<"Language"> | number | null
    updatedById?: IntNullableFilter<"Language"> | number | null
    deletedById?: IntNullableFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableFilter<"Language"> | Date | string | null
    createdAt?: DateTimeFilter<"Language"> | Date | string
    updatedAt?: DateTimeFilter<"Language"> | Date | string
  }

  export type LanguageUpsertWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput = {
    where: LanguageWhereUniqueInput
    update: XOR<LanguageUpdateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedUpdateWithoutUser_Language_deletedByIdToUserInput>
    create: XOR<LanguageCreateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_deletedByIdToUserInput>
  }

  export type LanguageUpdateWithWhereUniqueWithoutUser_Language_deletedByIdToUserInput = {
    where: LanguageWhereUniqueInput
    data: XOR<LanguageUpdateWithoutUser_Language_deletedByIdToUserInput, LanguageUncheckedUpdateWithoutUser_Language_deletedByIdToUserInput>
  }

  export type LanguageUpdateManyWithWhereWithoutUser_Language_deletedByIdToUserInput = {
    where: LanguageScalarWhereInput
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserInput>
  }

  export type LanguageUpsertWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput = {
    where: LanguageWhereUniqueInput
    update: XOR<LanguageUpdateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedUpdateWithoutUser_Language_updatedByIdToUserInput>
    create: XOR<LanguageCreateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedCreateWithoutUser_Language_updatedByIdToUserInput>
  }

  export type LanguageUpdateWithWhereUniqueWithoutUser_Language_updatedByIdToUserInput = {
    where: LanguageWhereUniqueInput
    data: XOR<LanguageUpdateWithoutUser_Language_updatedByIdToUserInput, LanguageUncheckedUpdateWithoutUser_Language_updatedByIdToUserInput>
  }

  export type LanguageUpdateManyWithWhereWithoutUser_Language_updatedByIdToUserInput = {
    where: LanguageScalarWhereInput
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: IntFilter<"Notification"> | number
    userId?: IntFilter<"Notification"> | number
    content?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type PermissionUpsertWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedUpdateWithoutUser_Permission_createdByIdToUserInput>
    create: XOR<PermissionCreateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_createdByIdToUserInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutUser_Permission_createdByIdToUserInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutUser_Permission_createdByIdToUserInput, PermissionUncheckedUpdateWithoutUser_Permission_createdByIdToUserInput>
  }

  export type PermissionUpdateManyWithWhereWithoutUser_Permission_createdByIdToUserInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserInput>
  }

  export type PermissionUpsertWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedUpdateWithoutUser_Permission_deletedByIdToUserInput>
    create: XOR<PermissionCreateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_deletedByIdToUserInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutUser_Permission_deletedByIdToUserInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutUser_Permission_deletedByIdToUserInput, PermissionUncheckedUpdateWithoutUser_Permission_deletedByIdToUserInput>
  }

  export type PermissionUpdateManyWithWhereWithoutUser_Permission_deletedByIdToUserInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserInput>
  }

  export type PermissionUpsertWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedUpdateWithoutUser_Permission_updatedByIdToUserInput>
    create: XOR<PermissionCreateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedCreateWithoutUser_Permission_updatedByIdToUserInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutUser_Permission_updatedByIdToUserInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutUser_Permission_updatedByIdToUserInput, PermissionUncheckedUpdateWithoutUser_Permission_updatedByIdToUserInput>
  }

  export type PermissionUpdateManyWithWhereWithoutUser_Permission_updatedByIdToUserInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserInput>
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutUser_Role_createdByIdToUserInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedUpdateWithoutUser_Role_createdByIdToUserInput>
    create: XOR<RoleCreateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_createdByIdToUserInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUser_Role_createdByIdToUserInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUser_Role_createdByIdToUserInput, RoleUncheckedUpdateWithoutUser_Role_createdByIdToUserInput>
  }

  export type RoleUpdateManyWithWhereWithoutUser_Role_createdByIdToUserInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedUpdateWithoutUser_Role_deletedByIdToUserInput>
    create: XOR<RoleCreateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_deletedByIdToUserInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUser_Role_deletedByIdToUserInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUser_Role_deletedByIdToUserInput, RoleUncheckedUpdateWithoutUser_Role_deletedByIdToUserInput>
  }

  export type RoleUpdateManyWithWhereWithoutUser_Role_deletedByIdToUserInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedUpdateWithoutUser_Role_updatedByIdToUserInput>
    create: XOR<RoleCreateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedCreateWithoutUser_Role_updatedByIdToUserInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUser_Role_updatedByIdToUserInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUser_Role_updatedByIdToUserInput, RoleUncheckedUpdateWithoutUser_Role_updatedByIdToUserInput>
  }

  export type RoleUpdateManyWithWhereWithoutUser_Role_updatedByIdToUserInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserInput>
  }

  export type ServiceUpsertWithWhereUniqueWithoutUser_Service_createdByIdToUserInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedUpdateWithoutUser_Service_createdByIdToUserInput>
    create: XOR<ServiceCreateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_createdByIdToUserInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutUser_Service_createdByIdToUserInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutUser_Service_createdByIdToUserInput, ServiceUncheckedUpdateWithoutUser_Service_createdByIdToUserInput>
  }

  export type ServiceUpdateManyWithWhereWithoutUser_Service_createdByIdToUserInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserInput>
  }

  export type ServiceUpsertWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedUpdateWithoutUser_Service_deletedByIdToUserInput>
    create: XOR<ServiceCreateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_deletedByIdToUserInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutUser_Service_deletedByIdToUserInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutUser_Service_deletedByIdToUserInput, ServiceUncheckedUpdateWithoutUser_Service_deletedByIdToUserInput>
  }

  export type ServiceUpdateManyWithWhereWithoutUser_Service_deletedByIdToUserInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserInput>
  }

  export type ServiceUpsertWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput = {
    where: ServiceWhereUniqueInput
    update: XOR<ServiceUpdateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedUpdateWithoutUser_Service_updatedByIdToUserInput>
    create: XOR<ServiceCreateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedCreateWithoutUser_Service_updatedByIdToUserInput>
  }

  export type ServiceUpdateWithWhereUniqueWithoutUser_Service_updatedByIdToUserInput = {
    where: ServiceWhereUniqueInput
    data: XOR<ServiceUpdateWithoutUser_Service_updatedByIdToUserInput, ServiceUncheckedUpdateWithoutUser_Service_updatedByIdToUserInput>
  }

  export type ServiceUpdateManyWithWhereWithoutUser_Service_updatedByIdToUserInput = {
    where: ServiceScalarWhereInput
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserInput>
  }

  export type ServiceProviderUpsertWithoutUser_ServiceProvider_userIdToUserInput = {
    update: XOR<ServiceProviderUpdateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_userIdToUserInput>
    create: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_userIdToUserInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutUser_ServiceProvider_userIdToUserInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutUser_ServiceProvider_userIdToUserInput, ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_userIdToUserInput>
  }

  export type ServiceProviderUpdateWithoutUser_ServiceProvider_userIdToUserInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_userIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUpsertWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    where: ServiceProviderWhereUniqueInput
    update: XOR<ServiceProviderUpdateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_verifiedByIdToUserInput>
    create: XOR<ServiceProviderCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedCreateWithoutUser_ServiceProvider_verifiedByIdToUserInput>
  }

  export type ServiceProviderUpdateWithWhereUniqueWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    where: ServiceProviderWhereUniqueInput
    data: XOR<ServiceProviderUpdateWithoutUser_ServiceProvider_verifiedByIdToUserInput, ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_verifiedByIdToUserInput>
  }

  export type ServiceProviderUpdateManyWithWhereWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    where: ServiceProviderScalarWhereInput
    data: XOR<ServiceProviderUpdateManyMutationInput, ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserInput>
  }

  export type ServiceProviderScalarWhereInput = {
    AND?: ServiceProviderScalarWhereInput | ServiceProviderScalarWhereInput[]
    OR?: ServiceProviderScalarWhereInput[]
    NOT?: ServiceProviderScalarWhereInput | ServiceProviderScalarWhereInput[]
    id?: IntFilter<"ServiceProvider"> | number
    description?: StringNullableFilter<"ServiceProvider"> | string | null
    address?: StringFilter<"ServiceProvider"> | string
    createdAt?: DateTimeFilter<"ServiceProvider"> | Date | string
    updatedAt?: DateTimeFilter<"ServiceProvider"> | Date | string
    userId?: IntFilter<"ServiceProvider"> | number
    companyType?: EnumCompanyTypeFilter<"ServiceProvider"> | $Enums.CompanyType
    industry?: StringNullableFilter<"ServiceProvider"> | string | null
    licenseNo?: StringNullableFilter<"ServiceProvider"> | string | null
    logo?: StringNullableFilter<"ServiceProvider"> | string | null
    taxId?: StringFilter<"ServiceProvider"> | string
    verificationStatus?: EnumVerificationStatusFilter<"ServiceProvider"> | $Enums.VerificationStatus
    verifiedAt?: DateTimeNullableFilter<"ServiceProvider"> | Date | string | null
    verifiedById?: IntNullableFilter<"ServiceProvider"> | number | null
  }

  export type StaffUpsertWithoutUserInput = {
    update: XOR<StaffUpdateWithoutUserInput, StaffUncheckedUpdateWithoutUserInput>
    create: XOR<StaffCreateWithoutUserInput, StaffUncheckedCreateWithoutUserInput>
    where?: StaffWhereInput
  }

  export type StaffUpdateToOneWithWhereWithoutUserInput = {
    where?: StaffWhereInput
    data: XOR<StaffUpdateWithoutUserInput, StaffUncheckedUpdateWithoutUserInput>
  }

  export type StaffUpdateWithoutUserInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type UserUpsertWithoutOther_User_User_createdByIdToUserInput = {
    update: XOR<UserUpdateWithoutOther_User_User_createdByIdToUserInput, UserUncheckedUpdateWithoutOther_User_User_createdByIdToUserInput>
    create: XOR<UserCreateWithoutOther_User_User_createdByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_createdByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOther_User_User_createdByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOther_User_User_createdByIdToUserInput, UserUncheckedUpdateWithoutOther_User_User_createdByIdToUserInput>
  }

  export type UserUpdateWithoutOther_User_User_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutOther_User_User_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutUser_User_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUser_User_createdByIdToUserInput, UserUncheckedUpdateWithoutUser_User_createdByIdToUserInput>
    create: XOR<UserCreateWithoutUser_User_createdByIdToUserInput, UserUncheckedCreateWithoutUser_User_createdByIdToUserInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUser_User_createdByIdToUserInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUser_User_createdByIdToUserInput, UserUncheckedUpdateWithoutUser_User_createdByIdToUserInput>
  }

  export type UserUpdateManyWithWhereWithoutUser_User_createdByIdToUserInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserInput>
  }

  export type UserUpsertWithoutOther_User_User_deletedByIdToUserInput = {
    update: XOR<UserUpdateWithoutOther_User_User_deletedByIdToUserInput, UserUncheckedUpdateWithoutOther_User_User_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutOther_User_User_deletedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_deletedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOther_User_User_deletedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOther_User_User_deletedByIdToUserInput, UserUncheckedUpdateWithoutOther_User_User_deletedByIdToUserInput>
  }

  export type UserUpdateWithoutOther_User_User_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutOther_User_User_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutUser_User_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUser_User_deletedByIdToUserInput, UserUncheckedUpdateWithoutUser_User_deletedByIdToUserInput>
    create: XOR<UserCreateWithoutUser_User_deletedByIdToUserInput, UserUncheckedCreateWithoutUser_User_deletedByIdToUserInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUser_User_deletedByIdToUserInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUser_User_deletedByIdToUserInput, UserUncheckedUpdateWithoutUser_User_deletedByIdToUserInput>
  }

  export type UserUpdateManyWithWhereWithoutUser_User_deletedByIdToUserInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserInput>
  }

  export type UserUpsertWithoutOther_User_User_updatedByIdToUserInput = {
    update: XOR<UserUpdateWithoutOther_User_User_updatedByIdToUserInput, UserUncheckedUpdateWithoutOther_User_User_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutOther_User_User_updatedByIdToUserInput, UserUncheckedCreateWithoutOther_User_User_updatedByIdToUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOther_User_User_updatedByIdToUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOther_User_User_updatedByIdToUserInput, UserUncheckedUpdateWithoutOther_User_User_updatedByIdToUserInput>
  }

  export type UserUpdateWithoutOther_User_User_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutOther_User_User_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutUser_User_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUser_User_updatedByIdToUserInput, UserUncheckedUpdateWithoutUser_User_updatedByIdToUserInput>
    create: XOR<UserCreateWithoutUser_User_updatedByIdToUserInput, UserUncheckedCreateWithoutUser_User_updatedByIdToUserInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUser_User_updatedByIdToUserInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUser_User_updatedByIdToUserInput, UserUncheckedUpdateWithoutUser_User_updatedByIdToUserInput>
  }

  export type UserUpdateManyWithWhereWithoutUser_User_updatedByIdToUserInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutUser_UserRolesInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUser_UserRolesInput, RoleUncheckedUpdateWithoutUser_UserRolesInput>
    create: XOR<RoleCreateWithoutUser_UserRolesInput, RoleUncheckedCreateWithoutUser_UserRolesInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUser_UserRolesInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUser_UserRolesInput, RoleUncheckedUpdateWithoutUser_UserRolesInput>
  }

  export type RoleUpdateManyWithWhereWithoutUser_UserRolesInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUser_UserRolesInput>
  }

  export type BookingCreateWithoutWorkLogInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutWorkLogInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutWorkLogInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutWorkLogInput, BookingUncheckedCreateWithoutWorkLogInput>
  }

  export type StaffCreateWithoutWorkLogInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedManyWithoutStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutWorkLogInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportUncheckedCreateNestedManyWithoutStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutWorkLogInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutWorkLogInput, StaffUncheckedCreateWithoutWorkLogInput>
  }

  export type BookingUpsertWithoutWorkLogInput = {
    update: XOR<BookingUpdateWithoutWorkLogInput, BookingUncheckedUpdateWithoutWorkLogInput>
    create: XOR<BookingCreateWithoutWorkLogInput, BookingUncheckedCreateWithoutWorkLogInput>
    where?: BookingWhereInput
  }

  export type BookingUpdateToOneWithWhereWithoutWorkLogInput = {
    where?: BookingWhereInput
    data: XOR<BookingUpdateWithoutWorkLogInput, BookingUncheckedUpdateWithoutWorkLogInput>
  }

  export type BookingUpdateWithoutWorkLogInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutWorkLogInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
  }

  export type StaffUpsertWithoutWorkLogInput = {
    update: XOR<StaffUpdateWithoutWorkLogInput, StaffUncheckedUpdateWithoutWorkLogInput>
    create: XOR<StaffCreateWithoutWorkLogInput, StaffUncheckedCreateWithoutWorkLogInput>
    where?: StaffWhereInput
  }

  export type StaffUpdateToOneWithWhereWithoutWorkLogInput = {
    where?: StaffWhereInput
    data: XOR<StaffUpdateWithoutWorkLogInput, StaffUncheckedUpdateWithoutWorkLogInput>
  }

  export type StaffUpdateWithoutWorkLogInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutWorkLogInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type BookingCreateWithoutInspectionReportInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutInspectionReportInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutInspectionReportInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutInspectionReportInput, BookingUncheckedCreateWithoutInspectionReportInput>
  }

  export type StaffCreateWithoutInspectionReportInput = {
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    Review?: ReviewCreateNestedManyWithoutStaffInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutStaffInput
    User: UserCreateNestedOneWithoutStaffInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogCreateNestedManyWithoutStaffInput
  }

  export type StaffUncheckedCreateWithoutInspectionReportInput = {
    id?: number
    userId: number
    providerId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedCreateNestedOneWithoutStaff_Booking_staffIdToStaffInput
    Review?: ReviewUncheckedCreateNestedManyWithoutStaffInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutStaffInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutStaffInput
  }

  export type StaffCreateOrConnectWithoutInspectionReportInput = {
    where: StaffWhereUniqueInput
    create: XOR<StaffCreateWithoutInspectionReportInput, StaffUncheckedCreateWithoutInspectionReportInput>
  }

  export type BookingUpsertWithoutInspectionReportInput = {
    update: XOR<BookingUpdateWithoutInspectionReportInput, BookingUncheckedUpdateWithoutInspectionReportInput>
    create: XOR<BookingCreateWithoutInspectionReportInput, BookingUncheckedCreateWithoutInspectionReportInput>
    where?: BookingWhereInput
  }

  export type BookingUpdateToOneWithWhereWithoutInspectionReportInput = {
    where?: BookingWhereInput
    data: XOR<BookingUpdateWithoutInspectionReportInput, BookingUncheckedUpdateWithoutInspectionReportInput>
  }

  export type BookingUpdateWithoutInspectionReportInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutInspectionReportInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type StaffUpsertWithoutInspectionReportInput = {
    update: XOR<StaffUpdateWithoutInspectionReportInput, StaffUncheckedUpdateWithoutInspectionReportInput>
    create: XOR<StaffCreateWithoutInspectionReportInput, StaffUncheckedCreateWithoutInspectionReportInput>
    where?: StaffWhereInput
  }

  export type StaffUpdateToOneWithWhereWithoutInspectionReportInput = {
    where?: StaffWhereInput
    data: XOR<StaffUpdateWithoutInspectionReportInput, StaffUncheckedUpdateWithoutInspectionReportInput>
  }

  export type StaffUpdateWithoutInspectionReportInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutInspectionReportInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type BookingCreateWithoutProposedServiceInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    ServiceRequest?: ServiceRequestCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutProposedServiceInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutProposedServiceInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutProposedServiceInput, BookingUncheckedCreateWithoutProposedServiceInput>
  }

  export type ServiceCreateWithoutProposedServiceInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutProposedServiceInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutProposedServiceInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutProposedServiceInput, ServiceUncheckedCreateWithoutProposedServiceInput>
  }

  export type BookingUpsertWithoutProposedServiceInput = {
    update: XOR<BookingUpdateWithoutProposedServiceInput, BookingUncheckedUpdateWithoutProposedServiceInput>
    create: XOR<BookingCreateWithoutProposedServiceInput, BookingUncheckedCreateWithoutProposedServiceInput>
    where?: BookingWhereInput
  }

  export type BookingUpdateToOneWithWhereWithoutProposedServiceInput = {
    where?: BookingWhereInput
    data: XOR<BookingUpdateWithoutProposedServiceInput, BookingUncheckedUpdateWithoutProposedServiceInput>
  }

  export type BookingUpdateWithoutProposedServiceInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutProposedServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type ServiceUpsertWithoutProposedServiceInput = {
    update: XOR<ServiceUpdateWithoutProposedServiceInput, ServiceUncheckedUpdateWithoutProposedServiceInput>
    create: XOR<ServiceCreateWithoutProposedServiceInput, ServiceUncheckedCreateWithoutProposedServiceInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutProposedServiceInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutProposedServiceInput, ServiceUncheckedUpdateWithoutProposedServiceInput>
  }

  export type ServiceUpdateWithoutProposedServiceInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutProposedServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceProviderCreateWithoutServiceItemInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutServiceItemInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceRequest?: ServiceRequestUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutServiceItemInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutServiceItemInput, ServiceProviderUncheckedCreateWithoutServiceItemInput>
  }

  export type Service_ServiceItemsCreateWithoutServiceItemInput = {
    Service: ServiceCreateNestedOneWithoutService_ServiceItemsInput
  }

  export type Service_ServiceItemsUncheckedCreateWithoutServiceItemInput = {
    serviceId: number
  }

  export type Service_ServiceItemsCreateOrConnectWithoutServiceItemInput = {
    where: Service_ServiceItemsWhereUniqueInput
    create: XOR<Service_ServiceItemsCreateWithoutServiceItemInput, Service_ServiceItemsUncheckedCreateWithoutServiceItemInput>
  }

  export type Service_ServiceItemsCreateManyServiceItemInputEnvelope = {
    data: Service_ServiceItemsCreateManyServiceItemInput | Service_ServiceItemsCreateManyServiceItemInput[]
    skipDuplicates?: boolean
  }

  export type ServiceProviderUpsertWithoutServiceItemInput = {
    update: XOR<ServiceProviderUpdateWithoutServiceItemInput, ServiceProviderUncheckedUpdateWithoutServiceItemInput>
    create: XOR<ServiceProviderCreateWithoutServiceItemInput, ServiceProviderUncheckedCreateWithoutServiceItemInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutServiceItemInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutServiceItemInput, ServiceProviderUncheckedUpdateWithoutServiceItemInput>
  }

  export type ServiceProviderUpdateWithoutServiceItemInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutServiceItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type Service_ServiceItemsUpsertWithWhereUniqueWithoutServiceItemInput = {
    where: Service_ServiceItemsWhereUniqueInput
    update: XOR<Service_ServiceItemsUpdateWithoutServiceItemInput, Service_ServiceItemsUncheckedUpdateWithoutServiceItemInput>
    create: XOR<Service_ServiceItemsCreateWithoutServiceItemInput, Service_ServiceItemsUncheckedCreateWithoutServiceItemInput>
  }

  export type Service_ServiceItemsUpdateWithWhereUniqueWithoutServiceItemInput = {
    where: Service_ServiceItemsWhereUniqueInput
    data: XOR<Service_ServiceItemsUpdateWithoutServiceItemInput, Service_ServiceItemsUncheckedUpdateWithoutServiceItemInput>
  }

  export type Service_ServiceItemsUpdateManyWithWhereWithoutServiceItemInput = {
    where: Service_ServiceItemsScalarWhereInput
    data: XOR<Service_ServiceItemsUpdateManyMutationInput, Service_ServiceItemsUncheckedUpdateManyWithoutServiceItemInput>
  }

  export type BookingCreateWithoutServiceRequestInput = {
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    CustomerProfile: CustomerProfileCreateNestedOneWithoutBookingInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutBookingInput
    Staff_Booking_staffIdToStaff?: StaffCreateNestedOneWithoutBooking_Booking_staffIdToStaffInput
    InspectionReport?: InspectionReportCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceCreateNestedManyWithoutBookingInput
    Transaction?: TransactionCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogCreateNestedManyWithoutBookingInput
  }

  export type BookingUncheckedCreateWithoutServiceRequestInput = {
    id?: number
    customerId: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    InspectionReport?: InspectionReportUncheckedCreateNestedOneWithoutBookingInput
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutBookingInput
    Transaction?: TransactionUncheckedCreateNestedOneWithoutBookingInput
    WorkLog?: WorkLogUncheckedCreateNestedManyWithoutBookingInput
  }

  export type BookingCreateOrConnectWithoutServiceRequestInput = {
    where: BookingWhereUniqueInput
    create: XOR<BookingCreateWithoutServiceRequestInput, BookingUncheckedCreateWithoutServiceRequestInput>
  }

  export type CategoryCreateWithoutServiceRequestInput = {
    name: string
    logo?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    User_Category_createdByIdToUser?: UserCreateNestedOneWithoutCategory_Category_createdByIdToUserInput
    User_Category_deletedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_deletedByIdToUserInput
    Category?: CategoryCreateNestedOneWithoutOther_CategoryInput
    other_Category?: CategoryCreateNestedManyWithoutCategoryInput
    User_Category_updatedByIdToUser?: UserCreateNestedOneWithoutCategory_Category_updatedByIdToUserInput
    CategoryTranslation?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    Service?: ServiceCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutServiceRequestInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    other_Category?: CategoryUncheckedCreateNestedManyWithoutCategoryInput
    CategoryTranslation?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
    Service?: ServiceUncheckedCreateNestedManyWithoutCategoryInput
    StaffCategory?: StaffCategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutServiceRequestInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutServiceRequestInput, CategoryUncheckedCreateWithoutServiceRequestInput>
  }

  export type CustomerProfileCreateWithoutServiceRequestInput = {
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageCreateNestedManyWithoutCustomerProfileInput
    User: UserCreateNestedOneWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileUncheckedCreateWithoutServiceRequestInput = {
    id?: number
    userId: number
    address?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    createdAt?: Date | string
    updatedAt: Date | string
    Booking?: BookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    ChatMessage?: ChatMessageUncheckedCreateNestedManyWithoutCustomerProfileInput
    PackageRecommendation?: PackageRecommendationUncheckedCreateNestedManyWithoutCustomerProfileInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutCustomerProfileInput
    Review?: ReviewUncheckedCreateNestedManyWithoutCustomerProfileInput
    RewardPoint?: RewardPointUncheckedCreateNestedManyWithoutCustomerProfileInput
  }

  export type CustomerProfileCreateOrConnectWithoutServiceRequestInput = {
    where: CustomerProfileWhereUniqueInput
    create: XOR<CustomerProfileCreateWithoutServiceRequestInput, CustomerProfileUncheckedCreateWithoutServiceRequestInput>
  }

  export type ServiceProviderCreateWithoutServiceRequestInput = {
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    Booking?: BookingCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemCreateNestedManyWithoutServiceProviderInput
    User_ServiceProvider_userIdToUser: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_userIdToUserInput
    User_ServiceProvider_verifiedByIdToUser?: UserCreateNestedOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserInput
    ServiceProviderTranslation?: ServiceProviderTranslationCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderUncheckedCreateWithoutServiceRequestInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
    verifiedById?: number | null
    Booking?: BookingUncheckedCreateNestedManyWithoutServiceProviderInput
    Service?: ServiceUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceItem?: ServiceItemUncheckedCreateNestedManyWithoutServiceProviderInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedCreateNestedManyWithoutServiceProviderInput
    Staff?: StaffUncheckedCreateNestedManyWithoutServiceProviderInput
  }

  export type ServiceProviderCreateOrConnectWithoutServiceRequestInput = {
    where: ServiceProviderWhereUniqueInput
    create: XOR<ServiceProviderCreateWithoutServiceRequestInput, ServiceProviderUncheckedCreateWithoutServiceRequestInput>
  }

  export type BookingUpsertWithoutServiceRequestInput = {
    update: XOR<BookingUpdateWithoutServiceRequestInput, BookingUncheckedUpdateWithoutServiceRequestInput>
    create: XOR<BookingCreateWithoutServiceRequestInput, BookingUncheckedCreateWithoutServiceRequestInput>
    where?: BookingWhereInput
  }

  export type BookingUpdateToOneWithWhereWithoutServiceRequestInput = {
    where?: BookingWhereInput
    data: XOR<BookingUpdateWithoutServiceRequestInput, BookingUncheckedUpdateWithoutServiceRequestInput>
  }

  export type BookingUpdateWithoutServiceRequestInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutServiceRequestInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type CategoryUpsertWithoutServiceRequestInput = {
    update: XOR<CategoryUpdateWithoutServiceRequestInput, CategoryUncheckedUpdateWithoutServiceRequestInput>
    create: XOR<CategoryCreateWithoutServiceRequestInput, CategoryUncheckedCreateWithoutServiceRequestInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutServiceRequestInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutServiceRequestInput, CategoryUncheckedUpdateWithoutServiceRequestInput>
  }

  export type CategoryUpdateWithoutServiceRequestInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutServiceRequestInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CustomerProfileUpsertWithoutServiceRequestInput = {
    update: XOR<CustomerProfileUpdateWithoutServiceRequestInput, CustomerProfileUncheckedUpdateWithoutServiceRequestInput>
    create: XOR<CustomerProfileCreateWithoutServiceRequestInput, CustomerProfileUncheckedCreateWithoutServiceRequestInput>
    where?: CustomerProfileWhereInput
  }

  export type CustomerProfileUpdateToOneWithWhereWithoutServiceRequestInput = {
    where?: CustomerProfileWhereInput
    data: XOR<CustomerProfileUpdateWithoutServiceRequestInput, CustomerProfileUncheckedUpdateWithoutServiceRequestInput>
  }

  export type CustomerProfileUpdateWithoutServiceRequestInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUpdateManyWithoutCustomerProfileNestedInput
    User?: UserUpdateOneRequiredWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUpdateManyWithoutCustomerProfileNestedInput
  }

  export type CustomerProfileUncheckedUpdateWithoutServiceRequestInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    ChatMessage?: ChatMessageUncheckedUpdateManyWithoutCustomerProfileNestedInput
    PackageRecommendation?: PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutCustomerProfileNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutCustomerProfileNestedInput
    RewardPoint?: RewardPointUncheckedUpdateManyWithoutCustomerProfileNestedInput
  }

  export type ServiceProviderUpsertWithoutServiceRequestInput = {
    update: XOR<ServiceProviderUpdateWithoutServiceRequestInput, ServiceProviderUncheckedUpdateWithoutServiceRequestInput>
    create: XOR<ServiceProviderCreateWithoutServiceRequestInput, ServiceProviderUncheckedCreateWithoutServiceRequestInput>
    where?: ServiceProviderWhereInput
  }

  export type ServiceProviderUpdateToOneWithWhereWithoutServiceRequestInput = {
    where?: ServiceProviderWhereInput
    data: XOR<ServiceProviderUpdateWithoutServiceRequestInput, ServiceProviderUncheckedUpdateWithoutServiceRequestInput>
  }

  export type ServiceProviderUpdateWithoutServiceRequestInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    User_ServiceProvider_verifiedByIdToUser?: UserUpdateOneWithoutServiceProvider_ServiceProvider_verifiedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutServiceRequestInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedById?: NullableIntFieldUpdateOperationsInput | number | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceCreateWithoutService_ServiceItemsInput = {
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingCreateNestedManyWithoutServiceInput
    Review?: ReviewCreateNestedManyWithoutServiceInput
    Category: CategoryCreateNestedOneWithoutServiceInput
    User_Service_createdByIdToUser?: UserCreateNestedOneWithoutService_Service_createdByIdToUserInput
    User_Service_deletedByIdToUser?: UserCreateNestedOneWithoutService_Service_deletedByIdToUserInput
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceInput
    User_Service_updatedByIdToUser?: UserCreateNestedOneWithoutService_Service_updatedByIdToUserInput
    ServiceTranslation?: ServiceTranslationCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutService_ServiceItemsInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
    ProposedService?: ProposedServiceUncheckedCreateNestedManyWithoutServiceInput
    RecurringBooking?: RecurringBookingUncheckedCreateNestedManyWithoutServiceInput
    Review?: ReviewUncheckedCreateNestedManyWithoutServiceInput
    ServiceTranslation?: ServiceTranslationUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutService_ServiceItemsInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutService_ServiceItemsInput, ServiceUncheckedCreateWithoutService_ServiceItemsInput>
  }

  export type ServiceItemCreateWithoutService_ServiceItemsInput = {
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    ServiceProvider: ServiceProviderCreateNestedOneWithoutServiceItemInput
  }

  export type ServiceItemUncheckedCreateWithoutService_ServiceItemsInput = {
    id?: number
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
    providerId: number
  }

  export type ServiceItemCreateOrConnectWithoutService_ServiceItemsInput = {
    where: ServiceItemWhereUniqueInput
    create: XOR<ServiceItemCreateWithoutService_ServiceItemsInput, ServiceItemUncheckedCreateWithoutService_ServiceItemsInput>
  }

  export type ServiceUpsertWithoutService_ServiceItemsInput = {
    update: XOR<ServiceUpdateWithoutService_ServiceItemsInput, ServiceUncheckedUpdateWithoutService_ServiceItemsInput>
    create: XOR<ServiceCreateWithoutService_ServiceItemsInput, ServiceUncheckedCreateWithoutService_ServiceItemsInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutService_ServiceItemsInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutService_ServiceItemsInput, ServiceUncheckedUpdateWithoutService_ServiceItemsInput>
  }

  export type ServiceUpdateWithoutService_ServiceItemsInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutService_ServiceItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceItemUpsertWithoutService_ServiceItemsInput = {
    update: XOR<ServiceItemUpdateWithoutService_ServiceItemsInput, ServiceItemUncheckedUpdateWithoutService_ServiceItemsInput>
    create: XOR<ServiceItemCreateWithoutService_ServiceItemsInput, ServiceItemUncheckedCreateWithoutService_ServiceItemsInput>
    where?: ServiceItemWhereInput
  }

  export type ServiceItemUpdateToOneWithWhereWithoutService_ServiceItemsInput = {
    where?: ServiceItemWhereInput
    data: XOR<ServiceItemUpdateWithoutService_ServiceItemsInput, ServiceItemUncheckedUpdateWithoutService_ServiceItemsInput>
  }

  export type ServiceItemUpdateWithoutService_ServiceItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceItemNestedInput
  }

  export type ServiceItemUncheckedUpdateWithoutService_ServiceItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    providerId?: IntFieldUpdateOperationsInput | number
  }

  export type ProposedServiceCreateManyBookingInput = {
    id?: number
    serviceId: number
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
  }

  export type WorkLogCreateManyBookingInput = {
    id?: number
    staffId: number
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProposedServiceUpdateWithoutBookingInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Service?: ServiceUpdateOneRequiredWithoutProposedServiceNestedInput
  }

  export type ProposedServiceUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceUncheckedUpdateManyWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkLogUpdateWithoutBookingInput = {
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Staff?: StaffUpdateOneRequiredWithoutWorkLogNestedInput
  }

  export type WorkLogUncheckedUpdateWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkLogUncheckedUpdateManyWithoutBookingInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateManyCategoryInput = {
    id?: number
    name: string
    logo?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CategoryTranslationCreateManyCategoryInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceCreateManyCategoryInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    unit?: $Enums.Unit
  }

  export type ServiceRequestCreateManyCategoryInput = {
    id?: number
    customerId: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
  }

  export type StaffCategoryCreateManyCategoryInput = {
    staffId: number
  }

  export type CategoryUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Language?: LanguageUpdateOneRequiredWithoutCategoryTranslationNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceUpdateWithoutCategoryInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceRequestUpdateWithoutCategoryInput = {
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    Booking?: BookingUpdateOneWithoutServiceRequestNestedInput
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutServiceRequestNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    Booking?: BookingUncheckedUpdateOneWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
  }

  export type StaffCategoryUpdateWithoutCategoryInput = {
    Staff?: StaffUpdateOneRequiredWithoutStaffCategoryNestedInput
  }

  export type StaffCategoryUncheckedUpdateWithoutCategoryInput = {
    staffId?: IntFieldUpdateOperationsInput | number
  }

  export type StaffCategoryUncheckedUpdateManyWithoutCategoryInput = {
    staffId?: IntFieldUpdateOperationsInput | number
  }

  export type BookingCreateManyCustomerProfileInput = {
    id?: number
    providerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
  }

  export type ChatMessageCreateManyCustomerProfileInput = {
    id?: number
    sender: string
    message: string
    sentAt?: Date | string
    isRead?: boolean
  }

  export type PackageRecommendationCreateManyCustomerProfileInput = {
    id?: number
    packageId: number
    reason?: string | null
    accepted?: boolean
    recommendedAt?: Date | string
    acceptedAt?: Date | string | null
  }

  export type RecurringBookingCreateManyCustomerProfileInput = {
    id?: number
    serviceId: number
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ReviewCreateManyCustomerProfileInput = {
    id?: number
    staffId: number
    serviceId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type RewardPointCreateManyCustomerProfileInput = {
    id?: number
    points?: number
    reason?: string | null
    createdAt?: Date | string
  }

  export type ServiceRequestCreateManyCustomerProfileInput = {
    id?: number
    providerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
  }

  export type BookingUpdateWithoutCustomerProfileInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ChatMessageUpdateWithoutCustomerProfileInput = {
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ChatMessageUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ChatMessageUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    sentAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PackageRecommendationUpdateWithoutCustomerProfileInput = {
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PackageRecommendationUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PackageRecommendationUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    packageId?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    accepted?: BoolFieldUpdateOperationsInput | boolean
    recommendedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RecurringBookingUpdateWithoutCustomerProfileInput = {
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Service?: ServiceUpdateOneRequiredWithoutRecurringBookingNestedInput
  }

  export type RecurringBookingUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RecurringBookingUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutCustomerProfileInput = {
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Service?: ServiceUpdateOneRequiredWithoutReviewNestedInput
    Staff?: StaffUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RewardPointUpdateWithoutCustomerProfileInput = {
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RewardPointUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RewardPointUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    points?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceRequestUpdateWithoutCustomerProfileInput = {
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    Booking?: BookingUpdateOneWithoutServiceRequestNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceRequestNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    Booking?: BookingUncheckedUpdateOneWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateManyWithoutCustomerProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type RefreshTokenCreateManyDeviceInput = {
    id?: number
    token: string
    userId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateWithoutDeviceInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutRefreshTokenNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutDeviceInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutDeviceInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationCreateManyLanguageInput = {
    id?: number
    categoryId: number
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceProviderTranslationCreateManyLanguageInput = {
    id?: number
    providerId: number
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceTranslationCreateManyLanguageInput = {
    id?: number
    serviceId: number
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type CategoryTranslationUpdateWithoutLanguageInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Category?: CategoryUpdateOneRequiredWithoutCategoryTranslationNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceProviderTranslationUpdateWithoutLanguageInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceProviderTranslationNestedInput
  }

  export type ServiceProviderTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceTranslationUpdateWithoutLanguageInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Service?: ServiceUpdateOneRequiredWithoutServiceTranslationNestedInput
  }

  export type ServiceTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUpdateWithoutPermissionInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Role_createdByIdToUser?: UserUpdateOneWithoutRole_Role_createdByIdToUserNestedInput
    User_Role_deletedByIdToUser?: UserUpdateOneWithoutRole_Role_deletedByIdToUserNestedInput
    User_Role_updatedByIdToUser?: UserUpdateOneWithoutRole_Role_updatedByIdToUserNestedInput
    User_UserRoles?: UserUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_UserRoles?: UserUncheckedUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutRoleInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Permission_createdByIdToUser?: UserUpdateOneWithoutPermission_Permission_createdByIdToUserNestedInput
    User_Permission_deletedByIdToUser?: UserUpdateOneWithoutPermission_Permission_deletedByIdToUserNestedInput
    User_Permission_updatedByIdToUser?: UserUpdateOneWithoutPermission_Permission_updatedByIdToUserNestedInput
  }

  export type PermissionUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutRole_UserRolesInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRole_UserRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRole_UserRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceCreateManyServiceInput = {
    id?: number
    bookingId: number
    quantity?: number
    price: number
    notes?: string | null
    createdAt?: Date | string
  }

  export type RecurringBookingCreateManyServiceInput = {
    id?: number
    customerId: number
    interval: string
    nextRunDate: Date | string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ReviewCreateManyServiceInput = {
    id?: number
    customerId: number
    staffId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type ServiceTranslationCreateManyServiceInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type Service_ServiceItemsCreateManyServiceInput = {
    serviceItemId: number
  }

  export type ProposedServiceUpdateWithoutServiceInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateOneRequiredWithoutProposedServiceNestedInput
  }

  export type ProposedServiceUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProposedServiceUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RecurringBookingUpdateWithoutServiceInput = {
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutRecurringBookingNestedInput
  }

  export type RecurringBookingUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RecurringBookingUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    interval?: StringFieldUpdateOperationsInput | string
    nextRunDate?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutServiceInput = {
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutReviewNestedInput
    Staff?: StaffUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    staffId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceTranslationUpdateWithoutServiceInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Language?: LanguageUpdateOneRequiredWithoutServiceTranslationNestedInput
  }

  export type ServiceTranslationUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceTranslationUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type Service_ServiceItemsUpdateWithoutServiceInput = {
    ServiceItem?: ServiceItemUpdateOneRequiredWithoutService_ServiceItemsNestedInput
  }

  export type Service_ServiceItemsUncheckedUpdateWithoutServiceInput = {
    serviceItemId?: IntFieldUpdateOperationsInput | number
  }

  export type Service_ServiceItemsUncheckedUpdateManyWithoutServiceInput = {
    serviceItemId?: IntFieldUpdateOperationsInput | number
  }

  export type BookingCreateManyServiceProviderInput = {
    id?: number
    customerId: number
    status: $Enums.BookingStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    staffId?: number | null
    serviceRequestId?: number | null
  }

  export type ServiceCreateManyServiceProviderInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
  }

  export type ServiceItemCreateManyServiceProviderInput = {
    id?: number
    name: string
    unitPrice: number
    warrantyPeriod?: number | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    updatedAt: Date | string
    brand?: string | null
    description?: string | null
    isActive?: boolean
    model?: string | null
    stockQuantity?: number
    unit?: $Enums.Unit
  }

  export type ServiceProviderTranslationCreateManyServiceProviderInput = {
    id?: number
    languageId: string
    name: string
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ServiceRequestCreateManyServiceProviderInput = {
    id?: number
    customerId: number
    note?: string | null
    preferredDate: Date | string
    status?: $Enums.RequestStatus
    createdAt?: Date | string
    updatedAt: Date | string
    location: string
    phoneNumber: string
    categoryId: number
  }

  export type StaffCreateManyServiceProviderInput = {
    id?: number
    userId: number
    createdAt?: Date | string
    updatedAt: Date | string
    isActive?: boolean
  }

  export type BookingUpdateWithoutServiceProviderInput = {
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutBookingNestedInput
    ServiceRequest?: ServiceRequestUpdateOneWithoutBookingNestedInput
    Staff_Booking_staffIdToStaff?: StaffUpdateOneWithoutBooking_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
    InspectionReport?: InspectionReportUncheckedUpdateOneWithoutBookingNestedInput
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutBookingNestedInput
    Transaction?: TransactionUncheckedUpdateOneWithoutBookingNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutBookingNestedInput
  }

  export type BookingUncheckedUpdateManyWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    status?: EnumBookingStatusFieldUpdateOperationsInput | $Enums.BookingStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    staffId?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRequestId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ServiceUpdateWithoutServiceProviderInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateManyWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceItemUpdateWithoutServiceProviderInput = {
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceItemNestedInput
  }

  export type ServiceItemUncheckedUpdateWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceItemNestedInput
  }

  export type ServiceItemUncheckedUpdateManyWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    unitPrice?: FloatFieldUpdateOperationsInput | number
    warrantyPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    model?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceProviderTranslationUpdateWithoutServiceProviderInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Language?: LanguageUpdateOneRequiredWithoutServiceProviderTranslationNestedInput
  }

  export type ServiceProviderTranslationUncheckedUpdateWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceRequestUpdateWithoutServiceProviderInput = {
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    Booking?: BookingUpdateOneWithoutServiceRequestNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceRequestNestedInput
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    Booking?: BookingUncheckedUpdateOneWithoutServiceRequestNestedInput
  }

  export type ServiceRequestUncheckedUpdateManyWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    note?: NullableStringFieldUpdateOperationsInput | string | null
    preferredDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumRequestStatusFieldUpdateOperationsInput | $Enums.RequestStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    location?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type StaffUpdateWithoutServiceProviderInput = {
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUpdateManyWithoutStaffNestedInput
    Review?: ReviewUpdateManyWithoutStaffNestedInput
    User?: UserUpdateOneRequiredWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    Booking_Booking_staffIdToStaff?: BookingUncheckedUpdateOneWithoutStaff_Booking_staffIdToStaffNestedInput
    InspectionReport?: InspectionReportUncheckedUpdateManyWithoutStaffNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutStaffNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutStaffNestedInput
    WorkLog?: WorkLogUncheckedUpdateManyWithoutStaffNestedInput
  }

  export type StaffUncheckedUpdateManyWithoutServiceProviderInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InspectionReportCreateManyStaffInput = {
    id?: number
    bookingId: number
    estimatedTime?: number | null
    note?: string | null
    images?: InspectionReportCreateimagesInput | string[]
    createdAt?: Date | string
  }

  export type ReviewCreateManyStaffInput = {
    id?: number
    customerId: number
    serviceId: number
    rating: number
    comment: string
    createdAt?: Date | string
  }

  export type StaffCategoryCreateManyStaffInput = {
    categoryId: number
  }

  export type WorkLogCreateManyStaffInput = {
    id?: number
    bookingId: number
    checkIn?: Date | string | null
    checkOut?: Date | string | null
    note?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type InspectionReportUpdateWithoutStaffInput = {
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateOneRequiredWithoutInspectionReportNestedInput
  }

  export type InspectionReportUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InspectionReportUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    estimatedTime?: NullableIntFieldUpdateOperationsInput | number | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    images?: InspectionReportUpdateimagesInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutStaffInput = {
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CustomerProfile?: CustomerProfileUpdateOneRequiredWithoutReviewNestedInput
    Service?: ServiceUpdateOneRequiredWithoutReviewNestedInput
  }

  export type ReviewUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StaffCategoryUpdateWithoutStaffInput = {
    Category?: CategoryUpdateOneRequiredWithoutStaffCategoryNestedInput
  }

  export type StaffCategoryUncheckedUpdateWithoutStaffInput = {
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type StaffCategoryUncheckedUpdateManyWithoutStaffInput = {
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type WorkLogUpdateWithoutStaffInput = {
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Booking?: BookingUpdateOneRequiredWithoutWorkLogNestedInput
  }

  export type WorkLogUncheckedUpdateWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WorkLogUncheckedUpdateManyWithoutStaffInput = {
    id?: IntFieldUpdateOperationsInput | number
    bookingId?: IntFieldUpdateOperationsInput | number
    checkIn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    checkOut?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    note?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateManyUser_Category_createdByIdToUserInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CategoryCreateManyUser_Category_deletedByIdToUserInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CategoryCreateManyUser_Category_updatedByIdToUserInput = {
    id?: number
    name: string
    logo?: string | null
    parentCategoryId?: number | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type DeviceCreateManyUserInput = {
    id?: number
    userAgent: string
    ip: string
    lastActive: Date | string
    createdAt?: Date | string
    isActive?: boolean
  }

  export type LanguageCreateManyUser_Language_createdByIdToUserInput = {
    id: string
    name: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type LanguageCreateManyUser_Language_deletedByIdToUserInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type LanguageCreateManyUser_Language_updatedByIdToUserInput = {
    id: string
    name: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type NotificationCreateManyUserInput = {
    id?: number
    content: string
    isRead?: boolean
    createdAt?: Date | string
  }

  export type PermissionCreateManyUser_Permission_createdByIdToUserInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type PermissionCreateManyUser_Permission_deletedByIdToUserInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type PermissionCreateManyUser_Permission_updatedByIdToUserInput = {
    id?: number
    name: string
    description?: string | null
    path: string
    method: $Enums.HTTPMethod
    module?: string | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: number
    token: string
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RoleCreateManyUser_Role_createdByIdToUserInput = {
    id?: number
    name: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RoleCreateManyUser_Role_deletedByIdToUserInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type RoleCreateManyUser_Role_updatedByIdToUserInput = {
    id?: number
    name: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ServiceCreateManyUser_Service_createdByIdToUserInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
  }

  export type ServiceCreateManyUser_Service_deletedByIdToUserInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
  }

  export type ServiceCreateManyUser_Service_updatedByIdToUserInput = {
    id?: number
    basePrice: number
    virtualPrice: number
    images?: ServiceCreateimagesInput | string[]
    durationMinutes: number
    providerId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
    name?: string
    publishedAt?: Date | string | null
    description?: string
    categoryId: number
    unit?: $Enums.Unit
  }

  export type ServiceProviderCreateManyUser_ServiceProvider_verifiedByIdToUserInput = {
    id?: number
    description?: string | null
    address: string
    createdAt?: Date | string
    updatedAt: Date | string
    userId: number
    companyType?: $Enums.CompanyType
    industry?: string | null
    licenseNo?: string | null
    logo?: string | null
    taxId?: string
    verificationStatus?: $Enums.VerificationStatus
    verifiedAt?: Date | string | null
  }

  export type UserCreateManyUser_User_createdByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type UserCreateManyUser_User_deletedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type UserCreateManyUser_User_updatedByIdToUserInput = {
    id?: number
    email: string
    password: string
    name: string
    phone: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CategoryUpdateWithoutUser_Category_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutUser_Category_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutUser_Category_deletedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    User_Category_updatedByIdToUser?: UserUpdateOneWithoutCategory_Category_updatedByIdToUserNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutUser_Category_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutUser_Category_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Category_createdByIdToUser?: UserUpdateOneWithoutCategory_Category_createdByIdToUserNestedInput
    User_Category_deletedByIdToUser?: UserUpdateOneWithoutCategory_Category_deletedByIdToUserNestedInput
    Category?: CategoryUpdateOneWithoutOther_CategoryNestedInput
    other_Category?: CategoryUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutUser_Category_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    other_Category?: CategoryUncheckedUpdateManyWithoutCategoryNestedInput
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutCategoryNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutCategoryNestedInput
    StaffCategory?: StaffCategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceUpdateWithoutUserInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    RefreshToken?: RefreshTokenUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type LanguageUpdateWithoutUser_Language_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    User_Language_deletedByIdToUser?: UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput
    User_Language_updatedByIdToUser?: UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutUser_Language_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUpdateWithoutUser_Language_deletedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    User_Language_createdByIdToUser?: UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput
    User_Language_updatedByIdToUser?: UserUpdateOneWithoutLanguage_Language_updatedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutUser_Language_deletedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUpdateWithoutUser_Language_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    User_Language_createdByIdToUser?: UserUpdateOneWithoutLanguage_Language_createdByIdToUserNestedInput
    User_Language_deletedByIdToUser?: UserUpdateOneWithoutLanguage_Language_deletedByIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateWithoutUser_Language_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoryTranslation?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutUser_Permission_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Permission_deletedByIdToUser?: UserUpdateOneWithoutPermission_Permission_deletedByIdToUserNestedInput
    User_Permission_updatedByIdToUser?: UserUpdateOneWithoutPermission_Permission_updatedByIdToUserNestedInput
    Role?: RoleUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutUser_Permission_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutUser_Permission_deletedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Permission_createdByIdToUser?: UserUpdateOneWithoutPermission_Permission_createdByIdToUserNestedInput
    User_Permission_updatedByIdToUser?: UserUpdateOneWithoutPermission_Permission_updatedByIdToUserNestedInput
    Role?: RoleUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutUser_Permission_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutUser_Permission_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Permission_createdByIdToUser?: UserUpdateOneWithoutPermission_Permission_createdByIdToUserNestedInput
    User_Permission_deletedByIdToUser?: UserUpdateOneWithoutPermission_Permission_deletedByIdToUserNestedInput
    Role?: RoleUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutUser_Permission_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Role?: RoleUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Device?: DeviceUpdateOneRequiredWithoutRefreshTokenNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutUser_Role_createdByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Role_deletedByIdToUser?: UserUpdateOneWithoutRole_Role_deletedByIdToUserNestedInput
    User_Role_updatedByIdToUser?: UserUpdateOneWithoutRole_Role_updatedByIdToUserNestedInput
    Permission?: PermissionUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutUser_Role_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permission?: PermissionUncheckedUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUncheckedUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutUser_Role_deletedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Role_createdByIdToUser?: UserUpdateOneWithoutRole_Role_createdByIdToUserNestedInput
    User_Role_updatedByIdToUser?: UserUpdateOneWithoutRole_Role_updatedByIdToUserNestedInput
    Permission?: PermissionUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutUser_Role_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permission?: PermissionUncheckedUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUncheckedUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutUser_Role_updatedByIdToUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Role_createdByIdToUser?: UserUpdateOneWithoutRole_Role_createdByIdToUserNestedInput
    User_Role_deletedByIdToUser?: UserUpdateOneWithoutRole_Role_deletedByIdToUserNestedInput
    Permission?: PermissionUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutUser_Role_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permission?: PermissionUncheckedUpdateManyWithoutRoleNestedInput
    User_UserRoles?: UserUncheckedUpdateManyWithoutRole_UserRolesNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceUpdateWithoutUser_Service_createdByIdToUserInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutUser_Service_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceUpdateWithoutUser_Service_deletedByIdToUserInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    User_Service_updatedByIdToUser?: UserUpdateOneWithoutService_Service_updatedByIdToUserNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutUser_Service_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceUpdateWithoutUser_Service_updatedByIdToUserInput = {
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUpdateManyWithoutServiceNestedInput
    Review?: ReviewUpdateManyWithoutServiceNestedInput
    Category?: CategoryUpdateOneRequiredWithoutServiceNestedInput
    User_Service_createdByIdToUser?: UserUpdateOneWithoutService_Service_createdByIdToUserNestedInput
    User_Service_deletedByIdToUser?: UserUpdateOneWithoutService_Service_deletedByIdToUserNestedInput
    ServiceProvider?: ServiceProviderUpdateOneRequiredWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutUser_Service_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
    ProposedService?: ProposedServiceUncheckedUpdateManyWithoutServiceNestedInput
    RecurringBooking?: RecurringBookingUncheckedUpdateManyWithoutServiceNestedInput
    Review?: ReviewUncheckedUpdateManyWithoutServiceNestedInput
    ServiceTranslation?: ServiceTranslationUncheckedUpdateManyWithoutServiceNestedInput
    Service_ServiceItems?: Service_ServiceItemsUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    basePrice?: FloatFieldUpdateOperationsInput | number
    virtualPrice?: FloatFieldUpdateOperationsInput | number
    images?: ServiceUpdateimagesInput | string[]
    durationMinutes?: IntFieldUpdateOperationsInput | number
    providerId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: StringFieldUpdateOperationsInput | string
    categoryId?: IntFieldUpdateOperationsInput | number
    unit?: EnumUnitFieldUpdateOperationsInput | $Enums.Unit
  }

  export type ServiceProviderUpdateWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUpdateManyWithoutServiceProviderNestedInput
    User_ServiceProvider_userIdToUser?: UserUpdateOneRequiredWithoutServiceProvider_ServiceProvider_userIdToUserNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Booking?: BookingUncheckedUpdateManyWithoutServiceProviderNestedInput
    Service?: ServiceUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceItem?: ServiceItemUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceProviderTranslation?: ServiceProviderTranslationUncheckedUpdateManyWithoutServiceProviderNestedInput
    ServiceRequest?: ServiceRequestUncheckedUpdateManyWithoutServiceProviderNestedInput
    Staff?: StaffUncheckedUpdateManyWithoutServiceProviderNestedInput
  }

  export type ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: IntFieldUpdateOperationsInput | number
    companyType?: EnumCompanyTypeFieldUpdateOperationsInput | $Enums.CompanyType
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    licenseNo?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    taxId?: StringFieldUpdateOperationsInput | string
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUpdateWithoutUser_User_createdByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutUser_User_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutUser_User_deletedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    User_User_updatedByIdToUser?: UserUpdateOneWithoutOther_User_User_updatedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutUser_User_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutUser_User_updatedByIdToUserInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUpdateOneWithoutUserNestedInput
    Device?: DeviceUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUpdateOneWithoutUserNestedInput
    User_User_createdByIdToUser?: UserUpdateOneWithoutOther_User_User_createdByIdToUserNestedInput
    other_User_User_createdByIdToUser?: UserUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    User_User_deletedByIdToUser?: UserUpdateOneWithoutOther_User_User_deletedByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateWithoutUser_User_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Category_Category_createdByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_createdByIdToUserNestedInput
    Category_Category_deletedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_deletedByIdToUserNestedInput
    Category_Category_updatedByIdToUser?: CategoryUncheckedUpdateManyWithoutUser_Category_updatedByIdToUserNestedInput
    CustomerProfile?: CustomerProfileUncheckedUpdateOneWithoutUserNestedInput
    Device?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    Language_Language_createdByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_createdByIdToUserNestedInput
    Language_Language_deletedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_deletedByIdToUserNestedInput
    Language_Language_updatedByIdToUser?: LanguageUncheckedUpdateManyWithoutUser_Language_updatedByIdToUserNestedInput
    Notification?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    Permission_Permission_createdByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_createdByIdToUserNestedInput
    Permission_Permission_deletedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_deletedByIdToUserNestedInput
    Permission_Permission_updatedByIdToUser?: PermissionUncheckedUpdateManyWithoutUser_Permission_updatedByIdToUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    Role_Role_createdByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_createdByIdToUserNestedInput
    Role_Role_deletedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_deletedByIdToUserNestedInput
    Role_Role_updatedByIdToUser?: RoleUncheckedUpdateManyWithoutUser_Role_updatedByIdToUserNestedInput
    Service_Service_createdByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_createdByIdToUserNestedInput
    Service_Service_deletedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_deletedByIdToUserNestedInput
    Service_Service_updatedByIdToUser?: ServiceUncheckedUpdateManyWithoutUser_Service_updatedByIdToUserNestedInput
    ServiceProvider_ServiceProvider_userIdToUser?: ServiceProviderUncheckedUpdateOneWithoutUser_ServiceProvider_userIdToUserNestedInput
    ServiceProvider_ServiceProvider_verifiedByIdToUser?: ServiceProviderUncheckedUpdateManyWithoutUser_ServiceProvider_verifiedByIdToUserNestedInput
    Staff?: StaffUncheckedUpdateOneWithoutUserNestedInput
    other_User_User_createdByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_createdByIdToUserNestedInput
    other_User_User_deletedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_deletedByIdToUserNestedInput
    other_User_User_updatedByIdToUser?: UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserNestedInput
    Role_UserRoles?: RoleUncheckedUpdateManyWithoutUser_UserRolesNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUser_User_updatedByIdToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutUser_UserRolesInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User_Role_createdByIdToUser?: UserUpdateOneWithoutRole_Role_createdByIdToUserNestedInput
    User_Role_deletedByIdToUser?: UserUpdateOneWithoutRole_Role_deletedByIdToUserNestedInput
    User_Role_updatedByIdToUser?: UserUpdateOneWithoutRole_Role_updatedByIdToUserNestedInput
    Permission?: PermissionUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutUser_UserRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Permission?: PermissionUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUser_UserRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Service_ServiceItemsCreateManyServiceItemInput = {
    serviceId: number
  }

  export type Service_ServiceItemsUpdateWithoutServiceItemInput = {
    Service?: ServiceUpdateOneRequiredWithoutService_ServiceItemsNestedInput
  }

  export type Service_ServiceItemsUncheckedUpdateWithoutServiceItemInput = {
    serviceId?: IntFieldUpdateOperationsInput | number
  }

  export type Service_ServiceItemsUncheckedUpdateManyWithoutServiceItemInput = {
    serviceId?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}